{"description":"@module DrilldownGroup","displayName":"DrilldownGroup","methods":[],"props":{"id":{"type":{"name":"string"},"required":true,"description":"","tsType":{"name":"string"}},"children":{"type":{"name":"custom","raw":"Children.oneOf([DrilldownOption, DrilldownSeparator])"},"required":false,"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`","tsType":{"name":"union","raw":"GroupChildren | GroupChildren[]","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"GroupChildren[]"}]}},"renderGroupTitle":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The label of the option group.","tsType":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}]}},"withoutSeparators":{"type":{"name":"bool"},"required":false,"description":"Hides the separators around the group.","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Is the option group disabled.","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"role":{"type":{"name":"string"},"required":false,"description":"The ARIA role of the element.","tsType":{"name":"string"},"defaultValue":{"value":"'group'","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"Element type to render as. By default, it inherits Drilldown's `as` prop.","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"selectableType":{"type":{"name":"enum","value":[{"value":"'single'","computed":false},{"value":"'multiple'","computed":false}]},"required":false,"description":"Makes the option group selectable (with \"check\" icon indicators).\nCan be set to a single-select (radio) or a multi-select (checkbox) group.","tsType":{"name":"union","raw":"'single' | 'multiple'","elements":[{"name":"literal","value":"'single'"},{"name":"literal","value":"'multiple'"}]}},"defaultSelected":{"type":{"name":"array"},"required":false,"description":"An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item.","tsType":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}]}],"raw":"DrilldownOptionValue[]"}},"onSelect":{"type":{"name":"func"},"required":false,"description":"Callback fired when an option within the `<Drilldown.Group />` is selected","tsType":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}}}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"Drilldown","id":"Drilldown.Group","relativePath":"packages/ui-drilldown/src/Drilldown/DrilldownGroup/index.tsx","extension":".tsx","srcPath":"packages/ui-drilldown/src/Drilldown/DrilldownGroup/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drilldown/src/Drilldown/DrilldownGroup/index.tsx","packageName":"@instructure/ui-drilldown","requirePath":"@instructure/ui-drilldown/lib/Drilldown/DrilldownGroup/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drilldown/src/Drilldown/DrilldownGroup/index.tsx').default","esPath":"@instructure/ui-drilldown/es/Drilldown/DrilldownGroup/index","title":"Drilldown.Group"}