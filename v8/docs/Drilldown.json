{"description":"\n`Drilldown` is a diverse component that displays hierarchical data in a fashion that allows the users to \"drill down\" and dig deeper into the layers (pages) of the data structure. It has similar look and features to the [Menu](#Menu), [Select](#Select) and [TreeBrowser](#TreeBrowser) components.\n\nThe `Drilldown` component exists to support navigating and managing tree structures in compact spaces. With WCAG 2.1 requirements around small viewports, and also with general responsiveness standards the classic tree-navigation and flyout menu patterns got outdated.\n\nSome of Drilldown's features include:\n\n- options that navigate (drill) down in the structure is marked with an arrow;\n- options that navigate back in the structure is always a “back” option at the top of the list;\n- option groups can have titles that have the standard InstUI menu group title style;\n- groups are divided by separator lines;\n- items in groups have no indent unless the group is a checkbox or radio option group, in which case the selected items are marked with a \"check\" icon, all unselected items have an indent;\n- secondary information blocks can be displayed both in-line with the option, or below the option with a dedicated text and color style;\n- the component can be rendered both in-line and in a popover.\n\n### Pages\n\nThe main building blocks of Drilldown are the `Drilldown.Pages`. These represent the layers of the structure and can contain Options, Separators and Groups. Each page has a \"header\" that can contain a page title, the back navigation and a \"page action\" option (see [Page header section](/#Drilldown/#page-header)).\n\nEach page needs an `id` prop that is used in the navigation. Options point to pages with their `subPageId` prop, and the Drilldown itself needs a `rootPageId` that indicates the first root level page, which renders first.\n\n```js\n---\ntype: example\n---\n<Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n  <Drilldown.Page id=\"root\" renderTitle='Groceries'>\n    <Drilldown.Option id=\"Produce\" subPageId=\"Produce\">\n      Produce\n    </Drilldown.Option>\n    <Drilldown.Option id=\"Grains and Bread\" subPageId=\"Grains and Bread\">\n      Grains and Bread\n    </Drilldown.Option>\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Produce\" renderTitle='Produce'>\n    <Drilldown.Option id=\"Fruits\" subPageId=\"Fruits\">\n      Fruits\n    </Drilldown.Option>\n    <Drilldown.Option id=\"Vegtables\" subPageId=\"Vegtables\">\n      Vegtables\n    </Drilldown.Option>\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Grains and Bread\" renderTitle='Grains and Bread'>\n    {['Pasta', 'Rice', 'Bread', 'Flour', 'Cereal', 'Oats'].map(\n      item => <Drilldown.Option id={item} key={item}>{item}</Drilldown.Option>\n    )}\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Fruits\" renderTitle='Fruits'>\n    {['Apple', 'Orange', 'Cherry', 'Grapefruit', 'Mango', 'Banana', 'Strawberry'].map(\n      item => <Drilldown.Option id={item} key={item}>{item}</Drilldown.Option>\n    )}\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Vegtables\" renderTitle='Vegtables'>\n    {['Tomato', 'Cucumber', 'Eggplant', 'Lettuce', 'Garlic', 'Onion', 'Corn', 'Carrot', 'Bell pepper'].map(\n      item => <Drilldown.Option id={item} key={item}>{item}</Drilldown.Option>\n    )}\n  </Drilldown.Page>\n</Drilldown>\n```\n\n### Options\n\n`Drilldown.Option` is the main child component of Drilldown. The content can be a ReactNode or a function returning a ReactNode. The function has an object as its parameter, containing the option's `id`, `variant` and `isSelected` state.\n\n> Note: Drilldown is based on the [Options](#Options) component, so the Drilldown.Options are rendered as `Options.Item` components under the hood. This is why the `variant` parameter has the values of Options.Item's `variant` prop.\n\n```js\n---\ntype: example\n---\n<Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n  <Drilldown.Page id=\"root\">\n    <Drilldown.Option id=\"option1\">\n      Option\n    </Drilldown.Option>\n    <Drilldown.Option id=\"option2\">\n      {(props) => `Option ${props.variant === 'highlighted'\n        ? 'is highlighted'\n        : 'is not highlighted'}`}\n    </Drilldown.Option>\n    <Drilldown.Option id=\"option3\">\n      <Pill>Pill</Pill> Option\n    </Drilldown.Option>\n    <Drilldown.Option id=\"option4\" disabled>\n      Option\n    </Drilldown.Option>\n  </Drilldown.Page>\n</Drilldown>\n```\n\nOptions can be links too. If the `href` prop is set, the option renders as an `<a>` element.\n\n```js\n---\ntype: example\n---\n<Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n  <Drilldown.Page id=\"root\">\n    <Drilldown.Option id=\"linkExampleOption1\" href=\"/#Options\">\n      Options component\n    </Drilldown.Option>\n    <Drilldown.Option id=\"linkExampleOption2\"href=\"/#Menu\">\n      Menu component\n    </Drilldown.Option>\n    <Drilldown.Option id=\"linkExampleOption3\" href=\"/#Select\">\n      Options component\n    </Drilldown.Option>\n    <Drilldown.Option id=\"linkExampleOption4\" href=\"/#SimpleSelect\" disabled>\n      SimpleSelect component\n    </Drilldown.Option>\n    <Drilldown.Option id=\"linkExampleOption5\" href=\"/#TreeBrowser\">\n      TreeBrowser component\n    </Drilldown.Option>\n  </Drilldown.Page>\n</Drilldown>\n```\n\nJust like `Options.Item`, `Drilldown.Option` can render a description under the label and icons before or after the label.\n\n```js\n---\ntype: example\n---\n<Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n  <Drilldown.Page id=\"root\">\n    <Drilldown.Option\n      id=\"renderElementExampleOption1\"\n      description=\"Curabitur fringilla, urna ut efficitur molestie, nibh lacus tincidunt elit, ut tempor ipsum nunc sit amet massa.\"\n      renderBeforeLabel={IconCheckSolid}\n      renderAfterLabel={IconArrowOpenEndSolid}\n      beforeLabelContentVAlign=\"start\"\n      afterLabelContentVAlign=\"start\"\n    >\n      Option\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"renderElementExampleOption2\"\n      description=\"Curabitur fringilla, urna ut efficitur molestie, nibh lacus tincidunt elit, ut tempor ipsum nunc sit amet massa.\"\n      renderBeforeLabel={IconCheckSolid}\n      renderAfterLabel={IconArrowOpenEndSolid}\n      beforeLabelContentVAlign=\"center\"\n      afterLabelContentVAlign=\"center\"\n    >\n      Option\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"renderElementExampleOption3\"\n      description=\"Curabitur fringilla, urna ut efficitur molestie, nibh lacus tincidunt elit, ut tempor ipsum nunc sit amet massa.\"\n      renderBeforeLabel={IconCheckSolid}\n      renderAfterLabel={IconArrowOpenEndSolid}\n      beforeLabelContentVAlign=\"end\"\n      afterLabelContentVAlign=\"end\"\n    >\n      Option\n    </Drilldown.Option>\n  </Drilldown.Page>\n</Drilldown>\n```\n\nAdditionally, the `renderLabelInfo` prop can render text or other elements next to the label.\n\n```js\n---\ntype: example\n---\n\nclass VideoSettingsExample extends React.Component {\n  state = {\n    selectedCaption: 'English',\n    selectedSpeed: 'Normal',\n    selectedQuality: '720p',\n    isCommentsOn: true\n  }\n\n  renderTrigger() {\n    return (\n      <Button renderIcon={IconSettingsSolid}>\n        Video Settings\n      </Button>\n    )\n  }\n\n  renderSelected(props, value) {\n    return (\n      <span style={{ color: props.variant === 'default' ? '#6B7780' : undefined }}>\n        {value}\n      </span>\n    )\n  }\n\n  renderSelectGroup(options, stateName) {\n    return (\n      <Drilldown.Group\n        id={`${stateName}Group`}\n        selectableType=\"single\"\n        defaultSelected={[this.state[stateName]]}\n        onSelect={(_event, { value }) => {\n          this.setState({ [stateName]: value[0] })\n        }}\n      >\n        {options.map((option, idx) => (\n          <Drilldown.Option\n            key={idx}\n            id={option}\n            value={option}\n            onOptionClick={(_event, { goToPreviousPage }) => {\n              goToPreviousPage()\n            }}\n          >\n            {option}\n          </Drilldown.Option>\n        ))}\n      </Drilldown.Group>\n    )\n  }\n\n  render() {\n    const {\n      captionOptions,\n      speedOptions,\n      qualityOptions\n    } = this.props\n\n    return (\n      <Drilldown\n        rootPageId=\"videoSettings\"\n        width=\"18.5rem\"\n        maxHeight=\"26.5rem\"\n        shouldHideOnSelect={false}\n        trigger={this.renderTrigger()}\n        onToggle={(_event, { shown, goToPage }) => {\n          shown && goToPage('videoSettings')\n        }}\n      >\n        <Drilldown.Page\n          id=\"videoSettings\"\n          renderTitle=\"Video Settings\"\n          withoutHeaderSeparator\n        >\n          <Drilldown.Option\n            id=\"captions\"\n            subPageId=\"captions\"\n            renderLabelInfo={\n              (props) => this.renderSelected(props, this.state.selectedCaption)\n            }\n          >\n            Captions\n          </Drilldown.Option>\n          <Drilldown.Option\n            id=\"speed\"\n            subPageId=\"speed\"\n            renderLabelInfo={\n              (props) => this.renderSelected(props, this.state.selectedSpeed)\n            }\n          >\n            Speed\n          </Drilldown.Option>\n          <Drilldown.Option\n            id=\"quality\"\n            subPageId=\"quality\"\n            renderLabelInfo={\n              (props) => this.renderSelected(props, this.state.selectedQuality)\n            }\n          >\n            Quality\n          </Drilldown.Option>\n          <Drilldown.Option\n            id=\"comments\"\n            themeOverride={{ padding: '0.25rem 0.75rem' }}\n            afterLabelContentVAlign=\"center\"\n            onOptionClick={() => {\n              this.setState((state) => ({ isCommentsOn: !state.isCommentsOn }))\n            }}\n            role=\"checkbox\"\n            aria-checked={this.state.isCommentsOn ? 'true' : 'false'}\n            // prevents reading the label of the checkbox too (duplicated)\n            aria-describedby={['']}\n\n            renderLabelInfo={\n              <Checkbox\n                label={<ScreenReaderContent>Comments</ScreenReaderContent>}\n                variant='toggle'\n                readOnly\n                checked={this.state.isCommentsOn}\n                onChange={() => {\n                  // needed for controlled Checkbox,\n                  // but the state is handled on the Drilldown.Option\n                }}\n                labelPlacement=\"start\"\n                tabIndex={-1}\n              />\n            }\n          >\n            Comments\n          </Drilldown.Option>\n        </Drilldown.Page>\n\n        <Drilldown.Page\n          id=\"captions\"\n          renderTitle=\"Captions\"\n        >\n          {this.renderSelectGroup(captionOptions, 'selectedCaption')}\n        </Drilldown.Page>\n\n        <Drilldown.Page\n          id=\"speed\"\n          renderTitle=\"Speed\"\n        >\n          {this.renderSelectGroup(speedOptions, 'selectedSpeed')}\n        </Drilldown.Page>\n\n        <Drilldown.Page\n          id=\"quality\"\n          renderTitle=\"Quality\"\n        >\n          {this.renderSelectGroup(qualityOptions, 'selectedQuality')}\n        </Drilldown.Page>\n      </Drilldown>\n    )\n  }\n}\n\nrender(<VideoSettingsExample\n  captionOptions={['Off', 'English', 'German', 'Spanish', 'Durtch']}\n  speedOptions={['0.5x', 'Normal', '1.25x', '1.5x', '2x']}\n  qualityOptions={['Auto', '360p', '480p', '720p', '1080p']}\n/>)\n```\n\n### Displaying Drilldown in a Popover\n\nJust like [Menu](#Menu), Drilldown accepts a `trigger` property: it will render a toggle button which, when clicked, shows or hides the Drilldown in a [Popover](#Popover). Drilldown passes many of its props to Popover in this case (`mountNode`, `shouldContainFocus`, `withArrow`, etc.).\n\n```js\n---\ntype: example\n---\n\nclass SelectContactsExample extends React.Component {\n  state = {\n    selected: []\n  }\n\n  getCategoryById(id) {\n    return this.props.contactsData.find(cat => cat.id === id)\n  }\n\n  selectContacts(values) {\n    this.setState({ selected: values })\n  }\n\n  renderContacts(contacts) {\n    return contacts.map((contact, idx) => {\n      const { id, name, email } = contact\n\n      return (\n        <Drilldown.Option\n          key={idx}\n          id={id}\n          value={name}\n          description={\n            <TruncateText>\n              #{idx + 1} | {email}\n            </TruncateText>\n          }\n          onOptionClick={() => {\n            this.selectContacts([contact])\n          }}\n        >\n          {name}\n        </Drilldown.Option>\n      )\n    })\n  }\n\n  renderSubCategoryOptions(subCategories = []) {\n    return subCategories.map((subCatId, idx) => {\n      const category = this.getCategoryById(subCatId)\n      const { id, title } = category\n\n      return (\n        <Drilldown.Option key={idx} id={id} subPageId={id}>\n          {title}\n        </Drilldown.Option>\n      )\n    })\n  }\n\n  renderPage(category, key) {\n    const { id, title, subCategories = [], options = [] } = category\n\n    const allContacts = this.getAllContactsFromCategory(category)\n\n    return (\n      <Drilldown.Page\n        key={key}\n        id={id}\n        renderTitle={title}\n        renderActionLabel={`Send to All (${allContacts.length})`}\n        onHeaderActionClicked={() => {\n          this.selectContacts(allContacts)\n        }}\n      >\n        {[\n          ...this.renderSubCategoryOptions(subCategories),\n          ...this.renderContacts(options)\n        ]}\n      </Drilldown.Page>\n    )\n  }\n\n  getAllContactsFromCategory(category) {\n    let allContacts = []\n\n    const addOptions = (cat) => {\n      const { subCategories = [], options = [] } = cat\n      allContacts.push(...options)\n\n\n      subCategories.forEach((subCatId) => {\n        addOptions(this.getCategoryById(subCatId))\n      })\n    }\n\n    addOptions(category)\n    return allContacts\n  }\n\n  render() {\n    const { contactsData } = this.props\n    const { selected = [] } = this.state\n\n    return (\n      <Flex alignItems='start'>\n        <Flex.Item width=\"20rem\" textAlign=\"center\" padding='x-small 0 0'>\n          <Drilldown\n            rootPageId=\"contacts\"\n            width=\"18.5rem\"\n            maxHeight=\"26.5rem\"\n            trigger={<Button>Select Contacts</Button>}\n            onToggle={(_event, args) => {\n              args.shown && this.selectContacts([])\n            }}\n          >\n            {contactsData.map((page, idx) => this.renderPage(page, idx))}\n          </Drilldown>\n        </Flex.Item>\n\n        <Flex.Item padding='0 0 0 large' shouldGrow shouldShrink>\n          <View as=\"div\" padding='small' background='primary'>\n            <div>\n              <Text weight='bold'>Selected ({selected ? selected.length : 0}):</Text>\n            </div>\n            <div>\n              {selected.map((a) => a.name).join(', ')}\n            </div>\n          </View>\n        </Flex.Item>\n      </Flex>\n    )\n  }\n}\n\nconst generateCategory = (name, count) => {\n  return Array(count)\n    .fill(name)\n    .map((category, idx) => {\n      const id = category.replace(/(-|\\s)/g, '').toLowerCase()\n      return {\n        id: `${id}${idx + 1}`,\n        category,\n        name: `${category} ${idx + 1}`,\n        email: `${id}${idx + 1}@randommail.com`\n      }\n    })\n}\n\nconst contactsData = [\n  {\n    id: 'contacts',\n    title: 'Contacts',\n    subCategories: ['administrators', 'teachers', 'students']\n  },\n  {\n    id: 'administrators',\n    title: 'Administrators',\n    subCategories: ['accountAdmins', 'subAccountAdmins']\n  },\n  {\n    id: 'accountAdmins',\n    title: 'Account Admins',\n    options: generateCategory('Account Admin', 8)\n  },\n  {\n    id: 'subAccountAdmins',\n    title: 'Sub-Account Admins',\n    options: generateCategory('Sub-Account Admin', 12)\n  },\n  {\n    id: 'teachers',\n    title: 'Teachers',\n    options: generateCategory('Teacher', 23)\n  },\n  {\n    id: 'students',\n    title: 'Students',\n    options: generateCategory('Student', 34)\n  }\n]\n\nrender(<SelectContactsExample contactsData={contactsData} />)\n```\n\n### Page header\n\nEach page can have a \"header\" with three optional items. The header and the Drilldown content are separated with a `<Drilldown.Separator>` (can be hidden with the `withoutHeaderSeparator` prop.)\n\n##### Title\n\nThe `renderTitle` prop sets the title of the Page.\n\n##### Action\n\nThe `renderActionLabel` displays an \"action\" option that can be used as e.g.: a \"Select all\" function. The action itself can be set with the `onHeaderActionClicked` prop.\n\n##### Back navigation\n\nOn every page (except the root page) a \"Back\" navigation option is displayed with an arrow.\n\nThe label can be changed with `renderBackButtonLabel` prop (defaults to \"Back\"). If a function is passed, it has a `prevPageTitle` parameter.\n\nThis option will always display on the page when needed and cannot be disabled.\n\n```js\n---\ntype: example\n---\nclass BackNavigationExample extends React.Component {\n  state = {\n    showTitle: true,\n    showAction: true,\n    showAlternativeBackLabel: false\n  }\n\n  render() {\n    const { showTitle, showAction, showAlternativeBackLabel } = this.state\n\n    return (\n      <Flex alignItems='start'>\n        <Flex.Item>\n          <Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n            <Drilldown.Page\n              id=\"root\"\n              renderTitle={showTitle && 'Root page'}\n              renderActionLabel={showAction && 'Action!'}\n            >\n              <Drilldown.Option id=\"BackNavigationRoot1\" subPageId='secondPage'>\n                Option\n              </Drilldown.Option>\n              <Drilldown.Option id=\"BackNavigationRoot2\" subPageId='secondPage'>\n                Option\n              </Drilldown.Option>\n              <Drilldown.Option id=\"BackNavigationRoot3\" subPageId='secondPage'>\n                Option\n              </Drilldown.Option>\n            </Drilldown.Page>\n\n            <Drilldown.Page\n              id=\"secondPage\"\n              renderTitle={showTitle && 'Second page'}\n              renderActionLabel={showAction && 'Action!'}\n              renderBackButtonLabel={showAlternativeBackLabel\n                ? ((prevPageTitle) => prevPageTitle ? `Back to ${prevPageTitle}` : 'Back')\n                : undefined}\n            >\n              <Drilldown.Option id=\"BackNavigationSecondPage1\">\n                Option\n              </Drilldown.Option>\n              <Drilldown.Option id=\"BackNavigationSecondPage2\">\n                Option\n              </Drilldown.Option>\n              <Drilldown.Option id=\"BackNavigationSecondPage3\">\n                Option\n              </Drilldown.Option>\n            </Drilldown.Page>\n          </Drilldown>\n        </Flex.Item>\n\n        <Flex.Item padding=\"0 0 0 large\" shouldGrow shouldShrink>\n          <FormFieldGroup description=\"Drilldown Group example settings\">\n            <Checkbox\n              checked={!this.state.showTitle ? false : this.state.showAlternativeBackLabel}\n              disabled={!this.state.showTitle}\n              label='Display previous page title in back navigation (\"Show page title\" needs to be turned on)'\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ showAlternativeBackLabel: !this.state.showAlternativeBackLabel })\n                }\n              }\n            />\n            <Checkbox\n              checked={this.state.showTitle}\n              label=\"Show page title\"\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ showTitle: !this.state.showTitle })\n                }\n              }\n            />\n            <Checkbox\n              checked={this.state.showAction}\n              label=\"Show action label\"\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ showAction: !this.state.showAction })\n                }\n              }\n            />\n          </FormFieldGroup>\n        </Flex.Item>\n      </Flex>\n    )\n  }\n}\n\nrender(<BackNavigationExample />)\n```\n\n### Option Groups\n\nWrapping the Options in `<Drilldown.Group>` will separate these options with separators. These separators can be hidden, and you can provide a label with the `renderGroupTitle` prop.\n\n```js\n---\ntype: example\n---\nclass GroupsExample extends React.Component {\n  state = {\n    showSeparators: true,\n    showTitles: true\n  }\n\n  render() {\n    return (\n      <Flex alignItems='start'>\n        <Flex.Item>\n          <Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n            <Drilldown.Page id=\"root\">\n              <Drilldown.Group\n                id=\"italy\"\n                renderGroupTitle={this.state.showTitles && 'Italy'}\n                withoutSeparators={!this.state.showSeparators}\n              >\n                <Drilldown.Option id=\"item11\">Milano</Drilldown.Option>\n                <Drilldown.Option id=\"item12\">Florence</Drilldown.Option>\n              </Drilldown.Group>\n\n              <Drilldown.Group\n                id=\"france\"\n                renderGroupTitle={this.state.showTitles && 'France'}\n                withoutSeparators={!this.state.showSeparators}\n              >\n                <Drilldown.Option id=\"item21\">Lyon</Drilldown.Option>\n                <Drilldown.Option id=\"item22\">Bordeaux</Drilldown.Option>\n              </Drilldown.Group>\n\n              <Drilldown.Group\n                id=\"germany\"\n                renderGroupTitle={this.state.showTitles && 'Germany'}\n                withoutSeparators={!this.state.showSeparators}\n              >\n                <Drilldown.Option id=\"item31\">Frankfurt</Drilldown.Option>\n                <Drilldown.Option id=\"item32\">Dortmund</Drilldown.Option>\n              </Drilldown.Group>\n            </Drilldown.Page>\n          </Drilldown>\n        </Flex.Item>\n\n        <Flex.Item padding=\"0 0 0 large\">\n          <FormFieldGroup description=\"Drilldown Group example settings\">\n            <Checkbox\n              checked={this.state.showSeparators}\n              label=\"Show separators\"\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ showSeparators: !this.state.showSeparators })\n                }\n              }\n            />\n            <Checkbox\n              checked={this.state.showTitles}\n              label=\"Show group titles\"\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ showTitles: !this.state.showTitles })\n                }\n              }\n            />\n          </FormFieldGroup>\n        </Flex.Item>\n      </Flex>\n    )\n  }\n}\n\nrender(<GroupsExample />)\n```\n\n#### Selectable Groups\n\nThe `selectableType` prop makes a group either a single-select (radio) or multi-select (checkbox) group. Selected options are indicated with a \"check\" icon.\n\nIt is recommended to set the `value` prop of the options in a group, because the `defaultSelected` and `onSelect` props are based on these values.\n\n##### Single-select Group\n\n```js\n---\ntype: example\n---\n<Drilldown rootPageId='root' width=\"20rem\" maxHeight=\"30rem\">\n  <Drilldown.Page id=\"root\">\n    <Drilldown.Group\n      id=\"group1\"\n      renderGroupTitle=\"Select one option\"\n      selectableType='single'\n    >\n      <Drilldown.Option id=\"+2\" value=\"+2\" defaultSelected>\n        Strongly agree\n      </Drilldown.Option>\n      <Drilldown.Option id=\"+1\" value=\"+1\">\n        Somewhat agree\n      </Drilldown.Option>\n      <Drilldown.Option id=\"0\" value=\"0\">\n        Neither agree nor disagree\n      </Drilldown.Option>\n      <Drilldown.Option id=\"-1\" value=\"-1\">\n        Somewhat disagree\n      </Drilldown.Option>\n      <Drilldown.Option id=\"-2\" value=\"-2\">\n        Strongly disagree\n      </Drilldown.Option>\n    </Drilldown.Group>\n  </Drilldown.Page>\n</Drilldown>\n```\n\n##### Multi-select Group\n\n```js\n---\ntype: example\n---\n\nclass SelectMembersExample extends React.Component {\n  state = {\n    selected: {}\n  }\n\n  selectMembers(groupValues) {\n    this.setState(({ selected }) => {\n      return { selected: { ...selected, ...groupValues }}\n    })\n  }\n\n  renderGroups(groups) {\n    return groups.map((group, idx) => {\n      const { id, label, members, selectableType } = group\n\n      return (\n        <Drilldown.Group\n          id={id}\n          key={idx}\n          renderGroupTitle={label}\n          selectableType={selectableType}\n          onSelect={(_e, { value }) => {\n            this.selectMembers({ [id]: value })\n          }}\n        >\n          {members.map((member, idx) => {\n            const { id, name } = member\n            return (\n              <Drilldown.Option key={idx} id={id} value={name}>\n                {name}\n              </Drilldown.Option>\n            )\n          })}\n\n        </Drilldown.Group>\n      )\n    })\n  }\n\n  renderSubPageOptions(subPages = []) {\n    return subPages.map((subPage, idx) => {\n      const { id, label } = subPage\n\n      return (\n        <Drilldown.Option key={idx} id={id} subPageId={id}>\n          {label}\n        </Drilldown.Option>\n      )\n    })\n  }\n\n  renderPage(category, key) {\n    const { id, subPages = [], groups = [] } = category\n\n    return (\n      <Drilldown.Page key={key} id={id}>\n        {subPages.length > 0 && this.renderSubPageOptions(subPages)}\n        {groups.length > 0 && this.renderGroups(groups)}\n      </Drilldown.Page>\n    )\n  }\n\n  render() {\n    const { pages } = this.props\n    const { selected = {} } = this.state\n\n    return (\n      <Flex alignItems='start'>\n        <Flex.Item width=\"20rem\" textAlign=\"center\" padding='x-small 0 0'>\n          <Drilldown\n            rootPageId=\"root\"\n            width=\"18.5rem\"\n            maxHeight=\"26.5rem\"\n            trigger={<Button>Select Members</Button>}\n            shouldHideOnSelect={false}\n            onToggle={(_event, { shown }) => {\n              shown && this.selectMembers({})\n            }}\n          >\n            {pages.map((page, idx) => this.renderPage(page, idx))}\n          </Drilldown>\n        </Flex.Item>\n\n        <Flex.Item padding='0 0 0 large' shouldGrow shouldShrink>\n          <View as=\"div\" padding='small' background='primary'>\n            <div>\n              <Text weight='bold'>Selected members:</Text>\n            </div>\n            <div>\n              <List>\n                {Object.entries(selected).map(([ groupId, values ], idx) => {\n                  return values.length > 0 ? (\n                    <List.Item key={idx}>\n                      <b>{groupId}</b>: {values.join(', ')}\n                    </List.Item>\n                  ) : null\n                })}\n              </List>\n            </div>\n          </View>\n        </Flex.Item>\n      </Flex>\n    )\n  }\n}\n\nconst pages = [\n  {\n    id: 'root',\n    subPages: [\n      { id: 'courses', label: 'Courses' },\n      { id: 'groups', label: 'Groups' },\n      { id: 'consortiums', label: 'Consortiums' }\n    ]\n  },\n  {\n    id: 'courses',\n    groups: [\n      {\n        id: 'course1',\n        label: 'Course 1',\n        selectableType: 'multiple',\n        members: [\n          { id: 'course1_1', name: 'Hanna Septimus' },\n          { id: 'course1_2', name: 'Kadin Press' },\n          { id: 'course1_3', name: 'Kaiya Botosh' },\n        ]\n      },\n      {\n        id: 'course2',\n        label: 'Course 2',\n        selectableType: 'multiple',\n        members: [\n          { id: 'course2_1', name: 'Leo Calzoni' },\n          { id: 'course2_2', name: 'Gretchen Gouse' },\n        ]\n      }\n    ]\n  },\n  {\n    id: 'groups',\n    groups: [\n      {\n        id: 'group1',\n        label: 'Group 1',\n        selectableType: 'multiple',\n        members: [\n          { id: 'groups1_1', name: 'Penka Okabe' },\n          { id: 'groups1_2', name: 'Ausma Meggyesfalvi' },\n          { id: 'groups1_3', name: 'Endrit Höfler' },\n          { id: 'groups1_4', name: 'Ryuu Carey' },\n          { id: 'groups1_5', name: 'Daphne Dioli' },\n        ]\n      }\n    ]\n  },\n  {\n    id: 'consortiums',\n    groups: [\n      {\n        id: 'consortium1',\n        label: 'Consortium 1',\n        selectableType: 'multiple',\n        members: [\n          { id: 'consortium1_1', name: 'Brahim Gustavsson' },\n          { id: 'consortium1_2', name: 'Elodia Dreschner' },\n        ]\n      },\n      {\n        id: 'consortium2',\n        label: 'Consortium 2',\n        selectableType: 'multiple',\n        members: [\n          { id: 'consortium2_1', name: 'Darwin Peter' },\n          { id: 'consortium2_2', name: 'Sukhrab Burnham' },\n        ]\n      },\n      {\n        id: 'consortium3',\n        label: 'Consortium 3',\n        selectableType: 'multiple',\n        members: [\n          { id: 'consortium3_1', name: 'Jeffry Antonise' },\n          { id: 'consortium3_2', name: 'Bia Regenbogen' },\n        ]\n      }\n    ]\n  }\n]\n\nrender(<SelectMembersExample pages={pages} />)\n```\n\n### Disabled prop\n\nYou can disable the whole Drilldown or its sub-components with the `disabled` prop. The only option that can not be disabled is the Back navigation.\n\n```js\n---\ntype: example\n---\nclass DisabledExample extends React.Component {\n  state = {\n    disabled: 'None',\n    withTrigger: false\n  }\n\n  render() {\n    const { disabled, withTrigger } = this.state\n\n    const disabledDrilldown = disabled === 'Drilldown'\n    const disabledPages = disabled === 'Pages'\n    const disabledGroups = disabled === 'Groups'\n    const disabledOptions = disabled === 'Options'\n\n    return (\n      <Flex alignItems='start'>\n        <Flex.Item width=\"20rem\" textAlign='center' padding='x-small 0 0'>\n          <View textAlign='start'>\n            <Drilldown\n              rootPageId='root'\n              width=\"20rem\"\n              maxHeight=\"30rem\"\n              trigger={withTrigger && <Button>Toggle button</Button>}\n              disabled={disabledDrilldown}\n            >\n              <Drilldown.Page\n                id=\"root\"\n                renderTitle=\"Root page\"\n                renderActionLabel=\"Action\"\n                disabled={disabledPages}\n              >\n                <Drilldown.Option\n                  id=\"disabledOption1\"\n                  subPageId='secondPage'\n                  disabled={disabledOptions}\n                >\n                  Option with subPage navigation\n                </Drilldown.Option>\n                <Drilldown.Option id=\"disabledOption2\" disabled={disabledOptions}>\n                  Option\n                </Drilldown.Option>\n                <Drilldown.Group\n                  id=\"group1\"\n                  renderGroupTitle=\"Selectable Group\"\n                  selectableType='multiple'\n                  disabled={disabledGroups}\n                >\n                  {['Apple', 'Orange', 'Banana', 'Strawberry'].map(\n                    item => (\n                      <Drilldown.Option\n                        id={item}\n                        key={item}\n                        value={item}\n                        defaultSelected={item === 'Apple'}\n                        disabled={disabledOptions}\n                      >\n                        {item}\n                      </Drilldown.Option>\n                    )\n                  )}\n                </Drilldown.Group>\n              </Drilldown.Page>\n\n              <Drilldown.Page\n                id=\"secondPage\"\n                renderTitle=\"Second page\"\n                disabled={disabledPages}\n              >\n                {['Option 1', 'Option 2', 'Option 3', 'Option 4'].map(\n                  item => (\n                    <Drilldown.Option\n                      id={item}\n                      key={item}\n                      disabled={disabledOptions}\n                    >\n                      {item}\n                    </Drilldown.Option>\n                  )\n                )}\n              </Drilldown.Page>\n            </Drilldown>\n          </View>\n        </Flex.Item>\n\n        <Flex.Item padding=\"0 0 0 large\" shouldGrow shouldShrink>\n          <FormFieldGroup\n            description={<ScreenReaderContent>Settings</ScreenReaderContent>}\n            colSpacing=\"medium\"\n            layout=\"columns\"\n            vAlign=\"top\"\n          >\n            <RadioInputGroup\n              onChange={(_event, value) => {\n                this.setState({ disabled: value })\n              }}\n              defaultValue=\"None\"\n              name=\"disabledPart\"\n              description=\"Select disabled\"\n            >\n              {['None', 'Drilldown', 'Pages', 'Groups', 'Options'].map(part => <RadioInput key={part} value={part} label={part} />)}\n            </RadioInputGroup>\n\n            <Checkbox\n              checked={this.state.withTrigger}\n              label=\"With toggle button\"\n              variant=\"toggle\"\n              onChange={\n                () => {\n                  this.setState({ withTrigger: !this.state.withTrigger })\n                }\n              }\n            />\n          </FormFieldGroup>\n        </Flex.Item>\n      </Flex>\n    )\n  }\n}\n\nrender(<DisabledExample />)\n```\n\n### shouldHideOnSelect\n\nBy default, if the Drilldown is in a Popover, it will hide if an option is selected (except on page navigation). You can disable this behavior by setting `shouldHideOnSelect={false}`.\n\nYou can still manually close the Popover on option click or select, calling the `.hide()` method on the `drilldown` parameter of the `onOptionClick` and `onSelect` callbacks.\n\n```js\n---\ntype: example\n---\n<Drilldown\n  rootPageId='root'\n  width=\"20rem\"\n  maxHeight=\"30rem\"\n  trigger={<Button>Toggle button</Button>}\n  shouldHideOnSelect={false}\n>\n  <Drilldown.Page id=\"root\" renderTitle='Should not hide on select'>\n    <Drilldown.Group id=\"group1\" selectableType='single'>\n      <Drilldown.Option value=\"1\" id=\"shouldHideOption1\">\n        Option 1\n      </Drilldown.Option>\n      <Drilldown.Option value=\"2\" id=\"shouldHideOption2\">\n        Option 2\n      </Drilldown.Option>\n      <Drilldown.Option value=\"3\" id=\"shouldHideOption3\">\n        Option 3\n      </Drilldown.Option>\n    </Drilldown.Group>\n    <Drilldown.Option\n      id=\"close\"\n      renderBeforeLabel={<IconXLine />}\n      onOptionClick={(_event, data) => {\n        data.drilldown.hide()\n      }}\n      themeOverride={(_componentTheme, currentTheme) => {\n        return { color: currentTheme.colors.textDanger }\n      }}\n    >\n      Close Popover\n    </Drilldown.Option>\n  </Drilldown.Page>\n</Drilldown>\n```\n\n### Page navigation\n\nThe recommended way to navigate between pages is to add the `subaPageId` prop to the `<Drilldown.Option>`-s. This will make an arrow display on the option to indicate that it navigates to another page.\n\nIf you have to manually navigate to another page on click or on Popover toggle, the `onOptionClick` and `onToggle` callbacks expose methods for page navigation and the current page history.\n\n- `pageHistory`: An array of the Page Id-s in \"breadcrumbs\" fashion.\n- `goToPreviousPage`: A method that navigates to the previous page (if not on root page).\n- `goToPage`: A method that navigates to a page, defined by the page id. If that page is already in the page history, it goes back to that level. If it is not in the history and the page exists, it adds it to the page history and goes there.\n\nThese two navigation methods are also available as public methods on the Drilldown component.\n\n```js\n---\ntype: example\n---\n<Drilldown\n  rootPageId='Root Page'\n  width=\"20rem\"\n  maxHeight=\"30rem\"\n>\n  <Drilldown.Page id=\"Root Page\" renderTitle='Root page'>\n    <Drilldown.Option id=\"navRootOption1\" subPageId='Page Two'>\n      Go to Page Two\n    </Drilldown.Option>\n    <Drilldown.Option id=\"navRootOption2\" subPageId='Page Three'>\n      Go to Page Three\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"navRootOption3\"\n      onOptionClick={(_event, args) => {\n        console.log(args.pageHistory)\n        const nav = args.goToPage('Page Two')\n        console.log(`Navigated from \"${nav.prevPageId}\" to \"${nav.newPageId}\"`)\n      }}\n      description='Navigates to Page Two on click and logs the pageHistory on the console.'\n    >\n      Manual navigation to Page Two\n    </Drilldown.Option>\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Page Two\" renderTitle='Page Two'>\n    <Drilldown.Option id=\"navPage2Option1\" subPageId='Page Three'>\n      Go to Page Three\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"navPage2Option2\"\n      onOptionClick={(_event, args) => {\n        console.log(args.pageHistory)\n        const nav = args.goToPreviousPage()\n        console.log(`Navigated back from \"${nav.prevPageId}\" to previous \"${nav.newPageId}\"`)\n      }}\n      description='Navigates to the previous page on click and logs the pageHistory on the console.'\n    >\n      Manual \"Back\" navigation\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"navPage2Option3\"\n      onOptionClick={(_event, args) => {\n        console.log(args.pageHistory)\n        const nav = args.goToPage('Page Three')\n        console.log(`Navigated from \"${nav.prevPageId}\" to \"${nav.newPageId}\"`)\n      }}\n      description='Navigates to Page Two on click and logs the pageHistory on the console.'\n    >\n      Manual navigation to Page Three\n    </Drilldown.Option>\n  </Drilldown.Page>\n\n  <Drilldown.Page id=\"Page Three\" renderTitle='Page Three'>\n    <Drilldown.Option\n      id=\"navPage3Option1\"\n      onOptionClick={(_event, args) => {\n        console.log(args.pageHistory)\n        const nav = args.goToPage(args.pageHistory[0])\n        console.log(`Navigated from \"${nav.prevPageId}\" to \"${nav.newPageId}\"`)\n      }}\n      description='Navigates to the first page on click and logs the pageHistory on the console.'\n    >\n      Manual \"Back\" navigation\n    </Drilldown.Option>\n    <Drilldown.Option\n      id=\"navPage3Option2\"\n      onOptionClick={(_event, args) => {\n        console.log(args.pageHistory)\n        const nav = args.goToPreviousPage()\n        console.log(`Navigated back from \"${nav.prevPageId}\" to previous \"${nav.newPageId}\"`)\n      }}\n      description='Navigates to the previous page on click and logs the pageHistory on the console.'\n    >\n      Manual \"Back\" navigation\n    </Drilldown.Option>\n  </Drilldown.Page>\n</Drilldown>\n```\n\n### Editable structures\n\nThe following example showcases an editable drilldown that can add or delete options.\n\n```js\n---\ntype: example\n---\n\nclass EditableStructureExample extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      districtsData: {\n        d1: {\n          label: 'District 1',\n          schools: ['s1']\n        }\n      },\n      schoolsData: {\n        s1: {\n          label: 'School 1',\n          districtId: 'd1',\n          isSelected: false\n        }\n      }\n    }\n\n    this.districtCounter = Object.keys(this.state.districtsData).length\n    this.schoolCounter = Object.keys(this.state.schoolsData).length\n  }\n\n  toggleSelectedSchool(id, school) {\n    this.setState({ schoolsData: {\n      ...this.state.schoolsData,\n        [id]: { ...school, isSelected: !school.isSelected }\n    } })\n  }\n\n  renderSelectedIcon(isSelected) {\n    return (\n      <IconCheckSolid\n        style={{ opacity: isSelected ? 1 : 0 }}\n      />\n    )\n  }\n\n  renderAddAction(label) {\n    return (\n      <span>\n        <IconAddSolid />\n        <View as=\"span\" margin=\"0 0 0 x-small\">New {label}</View>\n      </span>\n    )\n  }\n\n  addDistrict() {\n    const { districtsData } = this.state\n    this.districtCounter++\n    const districtNumber = this.districtCounter\n    const districtId = `d${districtNumber}`\n\n    this.setState({\n      districtsData: {\n        ...districtsData,\n        [districtId]: {\n          label: `District ${districtNumber}`,\n          schools: []\n        }\n      }\n    })\n  }\n\n  addSchool(districtId) {\n    const { districtsData, schoolsData } = this.state\n    const district = districtsData[districtId]\n\n    this.schoolCounter++\n    const schoolNumber = this.schoolCounter\n    const schoolId = `s${schoolNumber}`\n\n    this.setState({\n      districtsData: {\n        ...districtsData,\n        [districtId]: {\n          ...district,\n          schools: [...district.schools, schoolId]\n        }\n      },\n      schoolsData: {\n        ...schoolsData,\n        [schoolId]: {\n          label: `School ${schoolNumber}`,\n          districtId,\n          isSelected: false\n        }\n      }\n    })\n  }\n\n  renderDeleteOption(type, label, idToDelete) {\n    const id = type === 'school' ? \"deleteSchool\" : \"deleteDistrict\"\n    const callback = type === 'school' ? this.deleteSchool : this.deleteDistrict\n    const separatorId = `${idToDelete}__separator`\n\n    return [\n      <Drilldown.Separator id={separatorId} key={separatorId} />,\n      <Drilldown.Option\n        id={id}\n        key={`${idToDelete}__${id}`}\n        onOptionClick={() => { callback(idToDelete) }}\n        themeOverride={(_componentTheme, currentTheme) => {\n          return { color: currentTheme.colors.textDanger }\n        }}\n      >\n        <IconTrashLine />\n        <View as='span' margin='0 0 0 x-small'>\n          Delete {label}\n        </View>\n      </Drilldown.Option>\n    ]\n  }\n\n  deleteSchool = (id) => {\n    const { districtsData, schoolsData } = this.state\n    const { [id]: school, ...restSchools } = schoolsData\n    const { districtId } = school\n    const district = districtsData[districtId]\n\n    this.setState({\n      schoolsData: restSchools,\n      districtsData: {\n        ...districtsData,\n        [districtId]: {\n          ...district,\n          schools: district.schools.filter(schoolId => schoolId !== id)\n        }\n      }\n    })\n  }\n\n  deleteDistrict = (id) => {\n    const { districtsData, schoolsData } = this.state\n    const { [id]: district, ...restDistricts } = districtsData\n\n    const filteredSchools = {}\n\n    Object.entries(schoolsData).forEach(([schoolId, school]) => {\n      if (school.districtId !== id) {\n        filteredSchools[schoolId] = school\n      }\n    })\n\n    this.setState({\n      districtsData: restDistricts,\n      schoolsData: filteredSchools\n    })\n  }\n\n  render() {\n    const { districtsData, schoolsData } = this.state\n    const districts = Object.entries(districtsData)\n    const schools = Object.entries(schoolsData)\n\n    return (\n      <Drilldown\n        rootPageId=\"root\"\n        width=\"18.5rem\"\n        maxHeight=\"26.5rem\"\n      >\n        <Drilldown.Page\n          id=\"root\"\n          renderTitle=\"Districts\"\n          renderActionLabel={this.renderAddAction('District')}\n          onHeaderActionClicked={() => {\n            this.addDistrict()\n          }}\n        >\n          {districts.map(([id, district]) => {\n            const { label } = district\n            return (\n              <Drilldown.Option\n                key={`districtOption__${id}`}\n                id={id}\n                subPageId={id}\n              >\n                {label}\n              </Drilldown.Option>\n            )\n          })}\n        </Drilldown.Page>\n\n        {districts.map(([districtId , district]) => {\n          const { label, schools } = district\n          return (\n            <Drilldown.Page\n              key={`districtPage__${districtId}`}\n              id={districtId}\n              renderTitle={label}\n              renderActionLabel={this.renderAddAction('School')}\n              onHeaderActionClicked={() => {\n                this.addSchool(districtId)\n              }}\n            >\n              {schools.map((id) => {\n                const { label, isSelected } = this.state.schoolsData[id]\n                return (\n                  <Drilldown.Option\n                    key={`schoolOption__${districtId}--${id}`}\n                    id={id}\n                    subPageId={id}\n                    renderBeforeLabel={this.renderSelectedIcon(isSelected)}\n                  >\n                    {label}\n                  </Drilldown.Option>\n                )\n              })}\n              {this.renderDeleteOption('district', label, districtId)}\n            </Drilldown.Page>\n          )\n        })}\n\n        {schools.map(([id, school]) => {\n          const { label, isSelected } = school\n          return (\n            <Drilldown.Page\n              key={`schoolPage__${id}`}\n              id={id}\n              withoutHeaderSeparator\n            >\n              <Drilldown.Option\n                id=\"toggleSchool\"\n                renderBeforeLabel={this.renderSelectedIcon(isSelected)}\n                onOptionClick={() => {\n                  this.toggleSelectedSchool(id, school)\n                }}\n              >\n                {isSelected ? 'Deselect' : 'Select'} {label}\n              </Drilldown.Option>\n              {this.renderDeleteOption('school', label, id)}\n            </Drilldown.Page>\n          )\n        })}\n      </Drilldown>\n    )\n  }\n}\n\nrender(<EditableStructureExample />)\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>\n      Use to display tree structures (instead of the TreeBrowser)\n    </Figure.Item>\n    <Figure.Item>\n      Use instead of flyout menus\n    </Figure.Item>\n    <Figure.Item>\n      Use for radio or checkbox type interactions\n    </Figure.Item>\n    <Figure.Item>\n      Make the text within Drilldown options direct and self-evident so users can quickly decide on an action\n    </Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>\n      Include complex content\n    </Figure.Item>\n    <Figure.Item>\n      Use content that is not a Drilldown.Option (eg. buttons)\n    </Figure.Item>\n    <Figure.Item>\n      Use the “back” option to display group names\n    </Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"Drilldown","methods":[],"props":{"rootPageId":{"type":{"name":"string"},"required":true,"description":"The id of the root page","tsType":{"name":"string"}},"children":{"type":{"name":"custom","raw":"Children.oneOf([DrilldownPage])"},"required":false,"description":"Children of type `<Drilldown.Page />`","tsType":{"name":"union","raw":"PageChild | PageChild[]","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownPageProps, DrilldownPage>","elements":[{"name":"intersection","raw":"DrilldownPageOwnProps &\nOtherHTMLAttributes<DrilldownPageOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`, `<Drilldown.Group />`\n   */\n  children?: PageChildren | PageChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator, DrilldownGroup ])\n\n  /**\n   * The title of the page displayed in the header\n   */\n  renderTitle?: Renderable\n\n  /**\n   * Label for the optional \"action\" option in the header (e.g.: \"Select all\")\n   */\n  renderActionLabel?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Label for the \"back\" navigation in the header.\n   *\n   * If a function is provided, the first parameter of the function\n   * is the title of the previous page.\n   */\n  renderBackButtonLabel?:\n    | React.ReactNode\n    | ((prevPageTitle?: React.ReactNode) => React.ReactNode)\n\n  /**\n   * Callback fired when the \"action\" option is clicked in the header\n   */\n  onHeaderActionClicked?: (event: React.SyntheticEvent) => void\n\n  /**\n   * Callback fired when the \"back\" navigation option is clicked in the header\n   */\n  onBackButtonClicked?: (newPageId: string, prevPageId: string) => void\n\n  /**\n   * Hides the separator under the page header\n   */\n  withoutHeaderSeparator?: boolean\n\n  /**\n   * Is the page disabled\n   */\n  disabled?: boolean\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"PageChildren | PageChildren[]","elements":[{"name":"union","raw":"GroupChild | OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownGroupProps, DrilldownGroup>","elements":[{"name":"intersection","raw":"DrilldownGroupOwnProps &\nWithStyleProps<OptionsTheme, null> &\nOtherHTMLAttributes<DrilldownGroupOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`\n   */\n  children?: GroupChildren | GroupChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator])\n\n  /**\n   * The label of the option group.\n   */\n  renderGroupTitle?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Hides the separators around the group.\n   */\n  withoutSeparators?: boolean\n\n  /**\n   * Is the option group disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * The ARIA role of the element.\n   */\n  role?: string\n\n  /**\n   * Element type to render as. By default, it inherits Drilldown's `as` prop.\n   */\n  as?: AsElementType\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  // selection props\n  /**\n   * Makes the option group selectable (with \"check\" icon indicators).\n   * Can be set to a single-select (radio) or a multi-select (checkbox) group.\n   */\n  selectableType?: 'single' | 'multiple'\n\n  /**\n   * An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item.\n   */\n  defaultSelected?: DrilldownOptionValue[]\n\n  /**\n   * Callback fired when an option within the `<Drilldown.Group />` is selected\n   */\n  onSelect?: (\n    event: React.SyntheticEvent,\n    args: {\n      value: DrilldownOptionValue[]\n      isSelected: boolean\n      selectedOption: OptionChild\n      drilldown: Drilldown\n    }\n  ) => void\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"GroupChildren | GroupChildren[]","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"GroupChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`"},{"key":"renderGroupTitle","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"The label of the option group."},{"key":"withoutSeparators","value":{"name":"boolean","required":false},"description":"Hides the separators around the group."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option group disabled."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. By default, it inherits Drilldown's `as` prop."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"selectableType","value":{"name":"union","raw":"'single' | 'multiple'","elements":[{"name":"literal","value":"'single'"},{"name":"literal","value":"'multiple'"}],"required":false},"description":"Makes the option group selectable (with \"check\" icon indicators).\nCan be set to a single-select (radio) or a multi-select (checkbox) group."},{"key":"defaultSelected","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":false},"description":"An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item."},{"key":"onSelect","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when an option within the `<Drilldown.Group />` is selected"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  labelFontWeight: Typography['fontWeightBold']\n  background: Colors['backgroundLightest']\n  labelColor: Colors['textDarkest']\n  labelPadding: string | 0\n  nestedLabelPadding: string | 0\n}","signature":{"properties":[{"key":"labelFontWeight","value":{"name":"number","raw":"Typography['fontWeightBold']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"labelColor","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"labelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"nestedLabelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownGroup"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"GroupChild | OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownGroupProps, DrilldownGroup>","elements":[{"name":"intersection","raw":"DrilldownGroupOwnProps &\nWithStyleProps<OptionsTheme, null> &\nOtherHTMLAttributes<DrilldownGroupOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`\n   */\n  children?: GroupChildren | GroupChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator])\n\n  /**\n   * The label of the option group.\n   */\n  renderGroupTitle?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Hides the separators around the group.\n   */\n  withoutSeparators?: boolean\n\n  /**\n   * Is the option group disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * The ARIA role of the element.\n   */\n  role?: string\n\n  /**\n   * Element type to render as. By default, it inherits Drilldown's `as` prop.\n   */\n  as?: AsElementType\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  // selection props\n  /**\n   * Makes the option group selectable (with \"check\" icon indicators).\n   * Can be set to a single-select (radio) or a multi-select (checkbox) group.\n   */\n  selectableType?: 'single' | 'multiple'\n\n  /**\n   * An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item.\n   */\n  defaultSelected?: DrilldownOptionValue[]\n\n  /**\n   * Callback fired when an option within the `<Drilldown.Group />` is selected\n   */\n  onSelect?: (\n    event: React.SyntheticEvent,\n    args: {\n      value: DrilldownOptionValue[]\n      isSelected: boolean\n      selectedOption: OptionChild\n      drilldown: Drilldown\n    }\n  ) => void\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"GroupChildren | GroupChildren[]","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"GroupChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`"},{"key":"renderGroupTitle","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"The label of the option group."},{"key":"withoutSeparators","value":{"name":"boolean","required":false},"description":"Hides the separators around the group."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option group disabled."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. By default, it inherits Drilldown's `as` prop."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"selectableType","value":{"name":"union","raw":"'single' | 'multiple'","elements":[{"name":"literal","value":"'single'"},{"name":"literal","value":"'multiple'"}],"required":false},"description":"Makes the option group selectable (with \"check\" icon indicators).\nCan be set to a single-select (radio) or a multi-select (checkbox) group."},{"key":"defaultSelected","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":false},"description":"An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item."},{"key":"onSelect","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when an option within the `<Drilldown.Group />` is selected"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  labelFontWeight: Typography['fontWeightBold']\n  background: Colors['backgroundLightest']\n  labelColor: Colors['textDarkest']\n  labelPadding: string | 0\n  nestedLabelPadding: string | 0\n}","signature":{"properties":[{"key":"labelFontWeight","value":{"name":"number","raw":"Typography['fontWeightBold']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"labelColor","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"labelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"nestedLabelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownGroup"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"PageChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`, `<Drilldown.Group />`"},{"key":"renderTitle","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"The title of the page displayed in the header"},{"key":"renderActionLabel","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label for the optional \"action\" option in the header (e.g.: \"Select all\")"},{"key":"renderBackButtonLabel","value":{"name":"union","raw":"| React.ReactNode\n| ((prevPageTitle?: React.ReactNode) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label for the \"back\" navigation in the header.\n\nIf a function is provided, the first parameter of the function\nis the title of the previous page."},{"key":"onHeaderActionClicked","value":{"name":"signature","type":"function","raw":"(event: React.SyntheticEvent) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the \"action\" option is clicked in the header"},{"key":"onBackButtonClicked","value":{"name":"signature","type":"function","raw":"(newPageId: string, prevPageId: string) => void","signature":{"arguments":[{"type":{"name":"string"},"name":"newPageId"},{"type":{"name":"string"},"name":"prevPageId"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the \"back\" navigation option is clicked in the header"},{"key":"withoutHeaderSeparator","value":{"name":"boolean","required":false},"description":"Hides the separator under the page header"},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the page disabled"}]}},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownPage"}]},{"name":"Array","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownPageProps, DrilldownPage>","elements":[{"name":"intersection","raw":"DrilldownPageOwnProps &\nOtherHTMLAttributes<DrilldownPageOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`, `<Drilldown.Group />`\n   */\n  children?: PageChildren | PageChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator, DrilldownGroup ])\n\n  /**\n   * The title of the page displayed in the header\n   */\n  renderTitle?: Renderable\n\n  /**\n   * Label for the optional \"action\" option in the header (e.g.: \"Select all\")\n   */\n  renderActionLabel?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Label for the \"back\" navigation in the header.\n   *\n   * If a function is provided, the first parameter of the function\n   * is the title of the previous page.\n   */\n  renderBackButtonLabel?:\n    | React.ReactNode\n    | ((prevPageTitle?: React.ReactNode) => React.ReactNode)\n\n  /**\n   * Callback fired when the \"action\" option is clicked in the header\n   */\n  onHeaderActionClicked?: (event: React.SyntheticEvent) => void\n\n  /**\n   * Callback fired when the \"back\" navigation option is clicked in the header\n   */\n  onBackButtonClicked?: (newPageId: string, prevPageId: string) => void\n\n  /**\n   * Hides the separator under the page header\n   */\n  withoutHeaderSeparator?: boolean\n\n  /**\n   * Is the page disabled\n   */\n  disabled?: boolean\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"PageChildren | PageChildren[]","elements":[{"name":"union","raw":"GroupChild | OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownGroupProps, DrilldownGroup>","elements":[{"name":"intersection","raw":"DrilldownGroupOwnProps &\nWithStyleProps<OptionsTheme, null> &\nOtherHTMLAttributes<DrilldownGroupOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`\n   */\n  children?: GroupChildren | GroupChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator])\n\n  /**\n   * The label of the option group.\n   */\n  renderGroupTitle?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Hides the separators around the group.\n   */\n  withoutSeparators?: boolean\n\n  /**\n   * Is the option group disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * The ARIA role of the element.\n   */\n  role?: string\n\n  /**\n   * Element type to render as. By default, it inherits Drilldown's `as` prop.\n   */\n  as?: AsElementType\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  // selection props\n  /**\n   * Makes the option group selectable (with \"check\" icon indicators).\n   * Can be set to a single-select (radio) or a multi-select (checkbox) group.\n   */\n  selectableType?: 'single' | 'multiple'\n\n  /**\n   * An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item.\n   */\n  defaultSelected?: DrilldownOptionValue[]\n\n  /**\n   * Callback fired when an option within the `<Drilldown.Group />` is selected\n   */\n  onSelect?: (\n    event: React.SyntheticEvent,\n    args: {\n      value: DrilldownOptionValue[]\n      isSelected: boolean\n      selectedOption: OptionChild\n      drilldown: Drilldown\n    }\n  ) => void\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"GroupChildren | GroupChildren[]","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"GroupChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`"},{"key":"renderGroupTitle","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"The label of the option group."},{"key":"withoutSeparators","value":{"name":"boolean","required":false},"description":"Hides the separators around the group."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option group disabled."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. By default, it inherits Drilldown's `as` prop."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"selectableType","value":{"name":"union","raw":"'single' | 'multiple'","elements":[{"name":"literal","value":"'single'"},{"name":"literal","value":"'multiple'"}],"required":false},"description":"Makes the option group selectable (with \"check\" icon indicators).\nCan be set to a single-select (radio) or a multi-select (checkbox) group."},{"key":"defaultSelected","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":false},"description":"An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item."},{"key":"onSelect","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when an option within the `<Drilldown.Group />` is selected"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  labelFontWeight: Typography['fontWeightBold']\n  background: Colors['backgroundLightest']\n  labelColor: Colors['textDarkest']\n  labelPadding: string | 0\n  nestedLabelPadding: string | 0\n}","signature":{"properties":[{"key":"labelFontWeight","value":{"name":"number","raw":"Typography['fontWeightBold']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"labelColor","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"labelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"nestedLabelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownGroup"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"GroupChild | OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownGroupProps, DrilldownGroup>","elements":[{"name":"intersection","raw":"DrilldownGroupOwnProps &\nWithStyleProps<OptionsTheme, null> &\nOtherHTMLAttributes<DrilldownGroupOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Children of type:\n   * `<Drilldown.Option />`, `<Drilldown.Separator />`\n   */\n  children?: GroupChildren | GroupChildren[] // TODO: type Children.oneOf([DrilldownOption, DrilldownSeparator])\n\n  /**\n   * The label of the option group.\n   */\n  renderGroupTitle?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * Hides the separators around the group.\n   */\n  withoutSeparators?: boolean\n\n  /**\n   * Is the option group disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * The ARIA role of the element.\n   */\n  role?: string\n\n  /**\n   * Element type to render as. By default, it inherits Drilldown's `as` prop.\n   */\n  as?: AsElementType\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  // selection props\n  /**\n   * Makes the option group selectable (with \"check\" icon indicators).\n   * Can be set to a single-select (radio) or a multi-select (checkbox) group.\n   */\n  selectableType?: 'single' | 'multiple'\n\n  /**\n   * An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item.\n   */\n  defaultSelected?: DrilldownOptionValue[]\n\n  /**\n   * Callback fired when an option within the `<Drilldown.Group />` is selected\n   */\n  onSelect?: (\n    event: React.SyntheticEvent,\n    args: {\n      value: DrilldownOptionValue[]\n      isSelected: boolean\n      selectedOption: OptionChild\n      drilldown: Drilldown\n    }\n  ) => void\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"GroupChildren | GroupChildren[]","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]},{"name":"Array","elements":[{"name":"union","raw":"OptionChild | SeparatorChild","elements":[{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"GroupChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`"},{"key":"renderGroupTitle","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"The label of the option group."},{"key":"withoutSeparators","value":{"name":"boolean","required":false},"description":"Hides the separators around the group."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option group disabled."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. By default, it inherits Drilldown's `as` prop."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"selectableType","value":{"name":"union","raw":"'single' | 'multiple'","elements":[{"name":"literal","value":"'single'"},{"name":"literal","value":"'multiple'"}],"required":false},"description":"Makes the option group selectable (with \"check\" icon indicators).\nCan be set to a single-select (radio) or a multi-select (checkbox) group."},{"key":"defaultSelected","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":false},"description":"An array of the values for the selected items on initial render. Works only with \"selectableType\" set. If \"selectableType\" is \"single\", the array has to have 1 item."},{"key":"onSelect","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]","required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when an option within the `<Drilldown.Group />` is selected"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  labelFontWeight: Typography['fontWeightBold']\n  background: Colors['backgroundLightest']\n  labelColor: Colors['textDarkest']\n  labelPadding: string | 0\n  nestedLabelPadding: string | 0\n}","signature":{"properties":[{"key":"labelFontWeight","value":{"name":"number","raw":"Typography['fontWeightBold']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"labelColor","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"labelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"nestedLabelPadding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownGroup"}]},{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true},{"name":"ReactComponentElement","raw":"React.ComponentElement<\n  DrilldownSeparatorProps,\n  DrilldownSeparator\n>","elements":[{"name":"intersection","raw":"PickPropsWithExceptions<OptionsSeparatorProps, 'as'> &\nDrilldownSeparatorOwnProps &\nWithStyleProps<OptionsSeparatorTheme, null> &\nOtherHTMLAttributes<DrilldownSeparatorOwnProps>","elements":[{"name":"Omit","elements":[{"name":"OptionsSeparatorProps"},{"name":"literal","value":"'as'"}],"raw":"Omit<TargetProps, ExcludedProps>"},{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Element type to render as\n   */\n  as?: AsElementType\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  background: Colors['backgroundMedium']\n  height: Border['widthSmall']\n  margin: string | 0\n}","signature":{"properties":[{"key":"background","value":{"name":"string","raw":"Colors['backgroundMedium']","required":true}},{"key":"height","value":{"name":"union","raw":"Border['widthSmall']","required":true}},{"key":"margin","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsSeparatorTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownSeparator"}]}]}],"raw":"PageChildren[]"}],"required":false},"description":"Children of type:\n`<Drilldown.Option />`, `<Drilldown.Separator />`, `<Drilldown.Group />`"},{"key":"renderTitle","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"The title of the page displayed in the header"},{"key":"renderActionLabel","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label for the optional \"action\" option in the header (e.g.: \"Select all\")"},{"key":"renderBackButtonLabel","value":{"name":"union","raw":"| React.ReactNode\n| ((prevPageTitle?: React.ReactNode) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label for the \"back\" navigation in the header.\n\nIf a function is provided, the first parameter of the function\nis the title of the previous page."},{"key":"onHeaderActionClicked","value":{"name":"signature","type":"function","raw":"(event: React.SyntheticEvent) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the \"action\" option is clicked in the header"},{"key":"onBackButtonClicked","value":{"name":"signature","type":"function","raw":"(newPageId: string, prevPageId: string) => void","signature":{"arguments":[{"type":{"name":"string"},"name":"newPageId"},{"type":{"name":"string"},"name":"prevPageId"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the \"back\" navigation option is clicked in the header"},{"key":"withoutHeaderSeparator","value":{"name":"boolean","required":false},"description":"Hides the separator under the page header"},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the page disabled"}]}},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownPage"}]}],"raw":"PageChild[]"}]}},"id":{"type":{"name":"string"},"required":false,"description":"The id of the `<Drilldown />`","tsType":{"name":"string"}},"label":{"type":{"name":"string"},"required":false,"description":"Description of the `<Drilldown />` (used as `aria-label` attribute)","tsType":{"name":"string"}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Is the `<Drilldown />` disabled","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"rotateFocus":{"type":{"name":"bool"},"required":false,"description":"Whether the focus should rotate with keyboard navigation\nwhen reaching the first or last option","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"Element type to render as.","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'ul'","computed":false}},"role":{"type":{"name":"string"},"required":false,"description":"The ARIA role of the element","tsType":{"name":"string"},"defaultValue":{"value":"'menu'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to root HTML element","tsType":{"name":"signature","type":"function","raw":"(el: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"el"}],"return":{"name":"void"}}}},"drilldownRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to the `<Drilldown />`","tsType":{"name":"signature","type":"function","raw":"(el: HTMLDivElement | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLDivElement | null","elements":[{"name":"HTMLDivElement"},{"name":"null"}]},"name":"el"}],"return":{"name":"void"}}}},"overflowX":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'auto' | 'hidden' | 'visible'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'hidden'"},{"name":"literal","value":"'visible'"}]},"defaultValue":{"value":"'auto'","computed":false}},"overflowY":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'auto' | 'hidden' | 'visible'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'hidden'"},{"name":"literal","value":"'visible'"}]},"defaultValue":{"value":"'auto'","computed":false}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"minWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"trigger":{"type":{"name":"node"},"required":false,"description":"The trigger element, if the `<Drilldown />` is to render as a popover","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"If a trigger is supplied, where should the `<Drilldown />` be placed (relative to the trigger)","tsType":{"name":"PlacementPropValues"},"defaultValue":{"value":"'bottom center'","computed":false}},"defaultShow":{"type":{"name":"bool"},"required":false,"description":"Should the `<Drilldown />` be open for the initial render","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"show":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultShow')"},"required":false,"description":"Is the `<Drilldown />` open (should be accompanied by `onToggle` and `trigger`)","tsType":{"name":"boolean"}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Callback fired when the `<Drilldown />` is toggled open/closed.\nWhen used with `show`, the component will not control its own state.","tsType":{"name":"signature","type":"function","raw":"(\n  event: React.UIEvent | React.FocusEvent,\n  args: {\n    shown: boolean\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"union","raw":"React.UIEvent | React.FocusEvent","elements":[{"name":"ReactUIEvent","raw":"React.UIEvent"},{"name":"ReactFocusEvent","raw":"React.FocusEvent"}]},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  shown: boolean\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"shown","value":{"name":"boolean","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}}}},"onSelect":{"type":{"name":"func"},"required":false,"description":"Callback fired when an item within the `<Drilldown />` is selected","tsType":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    value: DrilldownOptionValue | DrilldownOptionValue[]\n    isSelected: boolean\n    selectedOption: OptionChild\n    drilldown: Drilldown\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  value: DrilldownOptionValue | DrilldownOptionValue[]\n  isSelected: boolean\n  selectedOption: OptionChild\n  drilldown: Drilldown\n}","signature":{"properties":[{"key":"value","value":{"name":"union","raw":"DrilldownOptionValue | DrilldownOptionValue[]","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},{"name":"Array","elements":[{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false}],"raw":"DrilldownOptionValue[]"}],"required":true}},{"key":"isSelected","value":{"name":"boolean","required":true}},{"key":"selectedOption","value":{"name":"ReactComponentElement","raw":"React.ComponentElement<DrilldownOptionProps, DrilldownOption>","elements":[{"name":"intersection","raw":"DrilldownOptionOwnProps &\nWithStyleProps<OptionsItemTheme, null> &\nOtherHTMLAttributes<DrilldownOptionOwnProps>","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"WithStyleProps","elements":[{"name":"signature","type":"object","raw":"{\n  fontSize: Typography['fontSizeMedium']\n  fontFamily: Typography['fontFamily']\n  fontWeight: Typography['fontWeightNormal']\n  lineHeight: Typography['lineHeightCondensed']\n  color: Colors['textDarkest']\n  background: Colors['backgroundLightest']\n  highlightedLabelColor: Colors['textLightest']\n  highlightedBackground: Colors['backgroundBrand']\n  selectedLabelColor: Colors['textLightest']\n  selectedBackground: Colors['backgroundDark']\n  padding: string | 0\n  iconPadding: Spacing['small']\n  nestedPadding: Spacing['medium']\n  beforeLabelContentVOffset: string | 0\n  afterLabelContentVOffset: string | 0\n  descriptionFontSize: Typography['fontSizeSmall']\n  descriptionFontWeight: Typography['fontWeightNormal']\n  descriptionLineHeight: Typography['lineHeight']\n  descriptionPaddingStart: string | 0\n  descriptionColor: Colors['textDark']\n}","signature":{"properties":[{"key":"fontSize","value":{"name":"union","raw":"Typography['fontSizeMedium']","required":true}},{"key":"fontFamily","value":{"name":"string","raw":"Typography['fontFamily']","required":true}},{"key":"fontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"lineHeight","value":{"name":"union","raw":"Typography['lineHeightCondensed']","required":true}},{"key":"color","value":{"name":"string","raw":"Colors['textDarkest']","required":true}},{"key":"background","value":{"name":"string","raw":"Colors['backgroundLightest']","required":true}},{"key":"highlightedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"highlightedBackground","value":{"name":"string","raw":"Colors['backgroundBrand']","required":true}},{"key":"selectedLabelColor","value":{"name":"string","raw":"Colors['textLightest']","required":true}},{"key":"selectedBackground","value":{"name":"string","raw":"Colors['backgroundDark']","required":true}},{"key":"padding","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"iconPadding","value":{"name":"union","raw":"Spacing['small']","required":true}},{"key":"nestedPadding","value":{"name":"union","raw":"Spacing['medium']","required":true}},{"key":"beforeLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"afterLabelContentVOffset","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionFontSize","value":{"name":"union","raw":"Typography['fontSizeSmall']","required":true}},{"key":"descriptionFontWeight","value":{"name":"number","raw":"Typography['fontWeightNormal']","required":true}},{"key":"descriptionLineHeight","value":{"name":"union","raw":"Typography['lineHeight']","required":true}},{"key":"descriptionPaddingStart","value":{"name":"union","raw":"string | 0","elements":[{"name":"string"},{"name":"literal","value":"0"}],"required":true}},{"key":"descriptionColor","value":{"name":"string","raw":"Colors['textDark']","required":true}}]}},{"name":"null"}],"raw":"WithStyleProps<OptionsItemTheme, null>"},{"name":"intersection","raw":"Omit<Attributes, keyof Props | 'dir'> & { dir?: 'ltr' | 'rtl' }","elements":[{"name":"Omit","elements":[{"name":"unknown"},{"name":"union","raw":"keyof Props | 'dir'","elements":[{"name":"signature","type":"object","raw":"{\n  id: string\n\n  /**\n   * Label of the Drilldown option.\n   */\n  children?:\n    | React.ReactNode\n    | ((props: {\n        id: string\n        variant: DrilldownOptionVariant\n        isSelected: boolean\n      }) => React.ReactNode)\n\n  /**\n   * The id of the sub-page the option navigates to.\n   */\n  subPageId?: string\n\n  /**\n   * Is the option disabled.\n   */\n  disabled?: boolean\n\n  /**\n   * Whether the option is selected or not. (Setting this property assumes controlled behaviour)\n   */\n  selected?: boolean\n\n  /**\n   * The value of the option. Should be set for options in selectable groups.\n   */\n  value?: DrilldownOptionValue\n\n  /**\n   * Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group.\n   */\n  href?: string\n\n  /**\n   * Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element.\n   */\n  as?: AsElementType\n\n  /**\n   * The ARIA role of the element\n   */\n  role?: string\n\n  /**\n   * Info content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderLabelInfo?: Renderable<RenderContentProps>\n\n  /**\n   * Content to render before the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderBeforeLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Content to render after the label.\n   *\n   * If a function is provided, it has a `props` parameter.\n   */\n  renderAfterLabel?: Renderable<OptionsItemRenderProps>\n\n  /**\n   * Sets the vAlign of renderBeforeLabel content\n   */\n  beforeLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Sets the vAlign of renderAfterLabel content and renderLabelInfo\n   */\n  afterLabelContentVAlign?: RenderContentVAlign\n\n  /**\n   * Additional \"secondary\" description text\n   */\n  description?: React.ReactNode | (() => React.ReactNode)\n\n  /**\n   * The ARIA role of the description element\n   */\n  descriptionRole?: string\n\n  /**\n   * Callback fired when the option is clicked.\n   */\n  onOptionClick?: (\n    event: React.SyntheticEvent,\n    args: {\n      optionId: string\n      drilldown: Drilldown\n      pageHistory: string[]\n      goToPage: (\n        pageId: string\n      ) => { prevPageId: string; newPageId: string } | undefined\n      goToPreviousPage: () =>\n        | { prevPageId: string; newPageId: string }\n        | undefined\n    }\n  ) => void\n\n  /**\n   * Whether the option is selected by default.\n   */\n  defaultSelected?: boolean\n\n  /**\n   * Provides a reference to the underlying html root element\n   */\n  elementRef?: (element: Element | null) => void\n\n  /**\n   * Should close the container menu component, if clicked on the option marked with this prop\n   */\n  shouldCloseOnClick?: ShouldCloseOnClick\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true}},{"key":"children","value":{"name":"union","raw":"| React.ReactNode\n| ((props: {\n    id: string\n    variant: DrilldownOptionVariant\n    isSelected: boolean\n  }) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Label of the Drilldown option."},{"key":"subPageId","value":{"name":"string","required":false},"description":"The id of the sub-page the option navigates to."},{"key":"disabled","value":{"name":"boolean","required":false},"description":"Is the option disabled."},{"key":"selected","value":{"name":"boolean","required":false},"description":"Whether the option is selected or not. (Setting this property assumes controlled behaviour)"},{"key":"value","value":{"name":"union","raw":"string | number | undefined","elements":[{"name":"string"},{"name":"number"},{"name":"undefined"}],"required":false},"description":"The value of the option. Should be set for options in selectable groups."},{"key":"href","value":{"name":"string","required":false},"description":"Providing href will render the option as `<a>`. Doesn't work, if subPageId is provided or is in a selectable group."},{"key":"as","value":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}],"required":false},"description":"Element type to render as. Will be set to `<a>` if href is provided. If the parent is \"ul\" or \"ol\", the option is forced to be \"li\" element."},{"key":"role","value":{"name":"string","required":false},"description":"The ARIA role of the element"},{"key":"renderLabelInfo","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Info content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderBeforeLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render before the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"renderAfterLabel","value":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  as: DrilldownOptionOwnProps['as']\n  role: DrilldownOptionOwnProps['role']\n  variant: DrilldownOptionVariant\n  vAlign?: RenderContentVAlign\n  isSelected: boolean\n}","signature":{"properties":[{"key":"as","value":{"name":"DrilldownOptionOwnProps['as']","raw":"DrilldownOptionOwnProps['as']","required":true}},{"key":"role","value":{"name":"DrilldownOptionOwnProps['role']","raw":"DrilldownOptionOwnProps['role']","required":true}},{"key":"variant","value":{"name":"Exclude","elements":[{"name":"OptionsItemProps['variant']","raw":"OptionsItemProps['variant']"},{"name":"literal","value":"'selected'"}],"raw":"Exclude<OptionsItemProps['variant'], 'selected'>","required":true}},{"key":"vAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false}},{"key":"isSelected","value":{"name":"boolean","required":true}}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}],"required":false},"description":"Content to render after the label.\n\nIf a function is provided, it has a `props` parameter."},{"key":"beforeLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderBeforeLabel content"},{"key":"afterLabelContentVAlign","value":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}],"required":false},"description":"Sets the vAlign of renderAfterLabel content and renderLabelInfo"},{"key":"description","value":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}],"required":false},"description":"Additional \"secondary\" description text"},{"key":"descriptionRole","value":{"name":"string","required":false},"description":"The ARIA role of the description element"},{"key":"onOptionClick","value":{"name":"signature","type":"function","raw":"(\n  event: React.SyntheticEvent,\n  args: {\n    optionId: string\n    drilldown: Drilldown\n    pageHistory: string[]\n    goToPage: (\n      pageId: string\n    ) => { prevPageId: string; newPageId: string } | undefined\n    goToPreviousPage: () =>\n      | { prevPageId: string; newPageId: string }\n      | undefined\n  }\n) => void","signature":{"arguments":[{"type":{"name":"ReactSyntheticEvent","raw":"React.SyntheticEvent"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{\n  optionId: string\n  drilldown: Drilldown\n  pageHistory: string[]\n  goToPage: (\n    pageId: string\n  ) => { prevPageId: string; newPageId: string } | undefined\n  goToPreviousPage: () =>\n    | { prevPageId: string; newPageId: string }\n    | undefined\n}","signature":{"properties":[{"key":"optionId","value":{"name":"string","required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}},{"key":"pageHistory","value":{"name":"Array","elements":[{"name":"string"}],"raw":"string[]","required":true}},{"key":"goToPage","value":{"name":"signature","type":"function","raw":"(\n  pageId: string\n) => { prevPageId: string; newPageId: string } | undefined","signature":{"arguments":[{"type":{"name":"string"},"name":"pageId"}],"return":{"name":"union","raw":"{ prevPageId: string; newPageId: string } | undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}},{"key":"goToPreviousPage","value":{"name":"signature","type":"function","raw":"() =>\n| { prevPageId: string; newPageId: string }\n| undefined","signature":{"arguments":[],"return":{"name":"union","raw":"| { prevPageId: string; newPageId: string }\n| undefined","elements":[{"name":"signature","type":"object","raw":"{ prevPageId: string; newPageId: string }","signature":{"properties":[{"key":"prevPageId","value":{"name":"string","required":true}},{"key":"newPageId","value":{"name":"string","required":true}}]}},{"name":"undefined"}]}},"required":true}}]}},"name":"args"}],"return":{"name":"void"}},"required":false},"description":"Callback fired when the option is clicked."},{"key":"defaultSelected","value":{"name":"boolean","required":false},"description":"Whether the option is selected by default."},{"key":"elementRef","value":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}},"required":false},"description":"Provides a reference to the underlying html root element"},{"key":"shouldCloseOnClick","value":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}],"required":false},"description":"Should close the container menu component, if clicked on the option marked with this prop"}]}},{"name":"literal","value":"'dir'"}]}],"raw":"Omit<Attributes, keyof Props | 'dir'>"},{"name":"signature","type":"object","raw":"{ dir?: 'ltr' | 'rtl' }","signature":{"properties":[{"key":"dir","value":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}],"required":false}}]}}]}]},{"name":"DrilldownOption"}],"required":true}},{"key":"drilldown","value":{"name":"Drilldown","required":true}}]}},"name":"args"}],"return":{"name":"void"}}}},"onDismiss":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired when the `<Drilldown />` is closed","tsType":{"name":"signature","type":"function","raw":"(\n  event: React.UIEvent | React.FocusEvent,\n  documentClick: boolean\n) => void","signature":{"arguments":[{"type":{"name":"union","raw":"React.UIEvent | React.FocusEvent","elements":[{"name":"ReactUIEvent","raw":"React.UIEvent"},{"name":"ReactFocusEvent","raw":"React.FocusEvent"}]},"name":"event"},{"type":{"name":"boolean"},"name":"documentClick"}],"return":{"name":"void"}}}},"onFocus":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired when the `<Drilldown />` trigger is focused","tsType":{"name":"signature","type":"function","raw":"(event: React.FocusEvent) => void","signature":{"arguments":[{"type":{"name":"ReactFocusEvent","raw":"React.FocusEvent"},"name":"event"}],"return":{"name":"void"}}}},"onMouseOver":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, callback fired onMouseOver for the `<Drilldown />` trigger","tsType":{"name":"signature","type":"function","raw":"(event: React.MouseEvent) => void","signature":{"arguments":[{"type":{"name":"ReactMouseEvent","raw":"React.MouseEvent"},"name":"event"}],"return":{"name":"void"}}}},"popoverRef":{"type":{"name":"func"},"required":false,"description":"If a trigger is supplied, A function that returns a reference to the `<Popover />`","tsType":{"name":"signature","type":"function","raw":"(el: Popover | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Popover | null","elements":[{"name":"Popover"},{"name":"null"}]},"name":"el"}],"return":{"name":"void"}}}},"mountNode":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"If a trigger is supplied, an element or a function returning an element\nto use as the mount node for the `<Drilldown />` (defaults to `document.body`)","tsType":{"name":"PositionMountNode"}},"positionTarget":{"type":{"name":"custom","raw":"PositionPropTypes.mountNode"},"required":false,"description":"Target element for positioning the Popover (if it differs from the trigger)","tsType":{"name":"PositionMountNode"}},"positionContainerDisplay":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"If a trigger is supplied, this prop can set the CSS `display` property on the `<span>` container element of the underlying Position component","tsType":{"name":"union","raw":"'inline-block' | 'block'","elements":[{"name":"literal","value":"'inline-block'"},{"name":"literal","value":"'block'"}]}},"constrain":{"type":{"name":"custom","raw":"PositionPropTypes.constrain"},"required":false,"description":"The parent in which to constrain the placement.","tsType":{"name":"PositionConstraint"}},"shouldHideOnSelect":{"type":{"name":"bool"},"required":false,"description":"If a trigger is supplied, should the `<Drilldown />` hide when an item is selected","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"shouldContainFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be contained within the `<Drilldown/>` when it is open.\nWorks only if `trigger` is provided.","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"shouldReturnFocus":{"type":{"name":"bool"},"required":false,"description":"Whether focus should be returned to the trigger\nwhen the `<Drilldown/>` is closed.\nWorks only if `trigger` is provided.","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"withArrow":{"type":{"name":"bool"},"required":false,"description":"Whether or not an arrow pointing to the trigger should be rendered.\nWorks only if `trigger` is provided.","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"offsetX":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The horizontal offset for the positioned content.\nWorks only if `trigger` is provided.","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]},"defaultValue":{"value":"0","computed":false}},"offsetY":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The vertical offset for the positioned content.\nWorks only if `trigger` is provided.","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]},"defaultValue":{"value":"0","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-drilldown/src/Drilldown/index.tsx","extension":".tsx","srcPath":"packages/ui-drilldown/src/Drilldown/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drilldown/src/Drilldown/index.tsx","packageName":"@instructure/ui-drilldown","requirePath":"@instructure/ui-drilldown/lib/Drilldown/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drilldown/src/Drilldown/index.tsx').default","esPath":"@instructure/ui-drilldown/es/Drilldown/index","themePath":"packages/ui-drilldown/src/Drilldown/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drilldown/src/Drilldown/theme.ts","id":"Drilldown","title":"Drilldown"}