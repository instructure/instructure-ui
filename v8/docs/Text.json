{"description":"\nA component for styling textual content\n\n### Font sizes\n\n```js\n---\ntype: example\n---\n<div>\n  <Text size=\"x-small\">I&#39;m extra small</Text><br/>\n  <Text size=\"small\">I&#39;m small</Text><br/>\n  <Text>I&#39;m medium</Text><br/>\n  <Text size=\"large\">I&#39;m large</Text><br/>\n  <Text size=\"x-large\">I&#39;m extra large</Text><br/>\n  <Text size=\"xx-large\">I&#39;m extra extra large</Text>\n</div>\n```\n\n### Font weights\n\n```js\n---\ntype: example\n---\n<div>\n  <Text weight=\"light\">I&#39;m light text</Text><br/>\n  <Text>I&#39;m normal text</Text><br/>\n  <Text weight=\"bold\">I&#39;m bold text</Text>\n</div>\n```\n\n### Font styles\n\n```js\n---\ntype: example\n---\n<div>\n  <Text fontStyle=\"italic\">I&#39;m italic text</Text><br/>\n  <Text>I&#39;m normal text</Text>\n</div>\n```\n\n### Line heights\n\n```js\n---\ntype: example\n---\n<div>\n  <Text lineHeight=\"fit\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text>\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"condensed\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"double\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n</div>\n```\n\n### Text transform\n\n```js\n---\ntype: example\n---\n<div>\n  <Text transform=\"capitalize\">I&#39;m capitalized text</Text><br/>\n  <Text transform=\"uppercase\">I&#39;m uppercase text</Text><br/>\n  <Text transform=\"lowercase\">I&#39;M LOWERCASE TEXT</Text><br/>\n</div>\n```\n\n### Letter-spacing\n\n```js\n---\ntype: example\n---\n<div>\n  <Text letterSpacing=\"normal\">I&#39;m normal text</Text><br/>\n  <Text letterSpacing=\"condensed\">I&#39;m condensed text</Text><br/>\n  <Text letterSpacing=\"expanded\" transform=\"uppercase\">I&#39;m expanded uppercase text</Text><br/>\n</div>\n```\n\n### Wrap\n\nUse `wrap=\"break-word\"` to force breaking in long strings that would otherwise\nexceed the bounds of their containers.\n\n```js\n---\ntype: example\n---\n<div>\n  <View as=\"div\" maxWidth=\"300px\" margin=\"none none small\" debug>\n    <Text>\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n  <View as=\"div\" maxWidth=\"300px\" debug>\n    <Text wrap=\"break-word\">\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n</div>\n```\n\n### Text colors\n\n```js\n---\ntype: example\n---\n<div>\n  <Text color=\"primary\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary\">I&#39;m secondary text</Text><br/>\n  <Text color=\"brand\">I&#39;m brand text</Text><br />\n  <Text color=\"success\">I&#39;m success text</Text><br/>\n  <Text color=\"danger\">I&#39;m danger text</Text><br />\n  <Text color=\"alert\">I&#39;m alert text</Text>\n</div>\n```\n\n```js\n---\ntype: example\n---\n<View background=\"primary-inverse\" as=\"div\">\n    <Text color=\"primary-inverse\">I&#39;m primary text</Text><br/>\n    <Text color=\"secondary-inverse\">I&#39;m secondary text</Text>\n</View>\n```\n\n### Element styles\n\n```js\n---\ntype: example\n---\n<Text>\n  <b>bold </b>\n  <strong>strong </strong>\n  <i>italic </i>\n  <em>emphasis </em>\n  <pre>preformatted</pre>\n  <code>code</code>\n  This<sup>is</sup> some<sub>text</sub>.\n</Text>\n```\n","displayName":"Text","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"defaultValue":{"value":"null","computed":false}},"color":{"type":{"name":"custom","raw":"deprecated.deprecatePropValues(\n  PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'brand',\n    'success',\n    'warning',\n    'danger',\n    'alert',\n    'primary-inverse',\n    'secondary-inverse'\n  ]),\n  ['warning'],\n  \"The `warning` color variant will be removed in version 9.0.0, because it doesn't have sufficient color contrast with the background (4.5:1) required for text.\"\n)"},"required":false,"description":"Color of the text\n\n__Deprecated__: The `warning` color variant will be removed in version 9.0.0, because it doesn't have sufficient color contrast with the background (4.5:1) required for text.","tsType":{"name":"union","raw":"| 'primary'\n| 'secondary'\n| 'brand'\n| 'success'\n| 'danger'\n| 'alert'\n| 'primary-inverse'\n| 'secondary-inverse'\n| 'warning'","elements":[{"name":"literal","value":"'primary'"},{"name":"literal","value":"'secondary'"},{"name":"literal","value":"'brand'"},{"name":"literal","value":"'success'"},{"name":"literal","value":"'danger'"},{"name":"literal","value":"'alert'"},{"name":"literal","value":"'primary-inverse'"},{"name":"literal","value":"'secondary-inverse'"},{"name":"literal","value":"'warning'"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying HTML element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"fontStyle":{"type":{"name":"enum","value":[{"value":"'italic'","computed":false},{"value":"'normal'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'italic' | 'normal'","elements":[{"name":"literal","value":"'italic'"},{"name":"literal","value":"'normal'"}]}},"letterSpacing":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'condensed'","computed":false},{"value":"'expanded'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'condensed' | 'expanded'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'condensed'"},{"name":"literal","value":"'expanded'"}]},"defaultValue":{"value":"'normal'","computed":false}},"lineHeight":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'fit'","computed":false},{"value":"'condensed'","computed":false},{"value":"'double'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'default' | 'fit' | 'condensed' | 'double'","elements":[{"name":"literal","value":"'default'"},{"name":"literal","value":"'fit'"},{"name":"literal","value":"'condensed'"},{"name":"literal","value":"'double'"}]}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'x-small' | 'small' | 'medium' | 'large' | 'x-large' | 'xx-large'","elements":[{"name":"literal","value":"'x-small'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"},{"name":"literal","value":"'x-large'"},{"name":"literal","value":"'xx-large'"}]},"defaultValue":{"value":"'medium'","computed":false}},"transform":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'capitalize'","computed":false},{"value":"'uppercase'","computed":false},{"value":"'lowercase'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'none' | 'capitalize' | 'uppercase' | 'lowercase'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'capitalize'"},{"name":"literal","value":"'uppercase'"},{"name":"literal","value":"'lowercase'"}]}},"weight":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'light'","computed":false},{"value":"'bold'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'light' | 'bold'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'light'"},{"name":"literal","value":"'bold'"}]}},"wrap":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'break-word'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'break-word'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'break-word'"}]},"defaultValue":{"value":"'normal'","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-text/src/Text/index.tsx","extension":".tsx","srcPath":"packages/ui-text/src/Text/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/index.tsx","packageName":"@instructure/ui-text","requirePath":"@instructure/ui-text/lib/Text/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text/src/Text/index.tsx').default","esPath":"@instructure/ui-text/es/Text/index","themePath":"packages/ui-text/src/Text/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/theme.ts","id":"Text","title":"Text"}