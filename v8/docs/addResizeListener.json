{"comment":"/**\n * ---\n * category: utilities/DOM\n * ---\n * ### This utility is deprecated since version __8.0__ and will be permanently deleted in version 9.0.\n * *Please use the native [DOM ResizeObserver API](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead of this.*\n *\n *\n * Example usage of the `ResizeObserver`:\n * ```js-code\n *  const observer = new ResizeObserver((entries) => {\n *   for (let entry of entries) {\n *     const size = {\n *       width: entry.contentRect.width\n *     }\n *\n *     if (size.width !== origSize.width) {\n *       // call your handler function here\n *        this._debounced(size)\n *     }\n *    }\n *  })\n *\n *   observer.observe(content)\n * ```\n *\n * Adds a listener to an element and calls a specified handler function whenever the size changes.\n * @deprecated since version 8.0\n * @module\n *\n *\n * @param { Node | Window | React.ReactElement | React.Component | function } el - component or DOM node\n * @param {function} handler - function to run when resize occurs\n * @param dimensions\n * @returns {function} remove - cancel the listener and no longer execute the handler function\n */","meta":{"filename":"ooo7ca78zk9l0cjcffhdil.js","lineno":1,"columnno":0,"path":"/tmp","code":{}},"description":"### This utility is deprecated since version __8.0__ and will be permanently deleted in version 9.0.\n*Please use the native [DOM ResizeObserver API](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver) instead of this.*\n\n\nExample usage of the `ResizeObserver`:\n```js-code\n const observer = new ResizeObserver((entries) => {\n  for (let entry of entries) {\n    const size = {\n      width: entry.contentRect.width\n    }\n\n    if (size.width !== origSize.width) {\n      // call your handler function here\n       this._debounced(size)\n    }\n   }\n })\n\n  observer.observe(content)\n```\n\nAdds a listener to an element and calls a specified handler function whenever the size changes.","deprecated":"since version 8.0","kind":"module","name":"ooo7ca78zk9l0cjcffhdil","params":[{"type":{"names":["Node","Window","React.ReactElement","React.Component","function"]},"description":"component or DOM node","name":"el"},{"type":{"names":["function"]},"description":"function to run when resize occurs","name":"handler"},{"name":"dimensions"}],"returns":[{"type":{"names":["function"]},"description":"remove - cancel the listener and no longer execute the handler function"}],"longname":"module:ooo7ca78zk9l0cjcffhdil","undocumented":false,"category":"utilities/DOM","relativePath":"packages/ui-dom-utils/src/addResizeListener.ts","extension":".ts","srcPath":"packages/ui-dom-utils/src/addResizeListener.ts","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/addResizeListener.ts","packageName":"@instructure/ui-dom-utils","requirePath":"@instructure/ui-dom-utils/lib/addResizeListener","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-dom-utils/src/addResizeListener.ts').default","esPath":"@instructure/ui-dom-utils/es/addResizeListener","themePath":"packages/ui-dom-utils/src/addResizeListener.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-dom-utils/src/addResizeListener.ts","id":"addResizeListener","title":"addResizeListener"}