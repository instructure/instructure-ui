{"description":"\nTextArea renders a standard HTML `textarea` element. By default, TextArea will\nresize to fit its content. Use the `maxHeight` property to set a limit on the\ncomponent's height.\n\n```js\n---\ntype: example\n---\n<div>\n  <TextArea\n    label=\"Enter/delete text to see TextArea resize\"\n  />\n  <br />\n  <TextArea\n    label=\"I can't go any higher than 10rem (160px)\"\n    maxHeight=\"10rem\"\n  />\n</div>\n```\n\nTo allow the user to manually resize TextArea (in supported browsers), use the\n`resize` property.\n\n```js\n---\ntype: example\n---\n<TextArea label=\"Description\" resize=\"vertical\" />\n```\n\nA `TextArea` with errors:\n\n```js\n---\ntype: example\n---\n<TextArea messages={[{ text: 'Invalid description', type: 'error' }]} label=\"Description\" />\n```\n\nA disabled `TextArea`:\n\n```js\n---\ntype: example\n---\n<TextArea label=\"Description\" disabled />\n```\n\nA `TextArea` with a screenreader only label:\n\n```js\n---\ntype: example\n---\n<TextArea\n  label={<ScreenReaderContent>Description</ScreenReaderContent>}\n  placeholder=\"describe something\"\n/>\n```\n\nAn inline `TextArea` with a fixed width, initial height and maxHeight.\n\n```js\n---\ntype: example\n---\n<div style={{ display: 'flex', alignItems: 'center' }}>\n  <TextArea\n    label={<ScreenReaderContent>Label</ScreenReaderContent>}\n    inline\n    width=\"10em\"\n    height=\"10em\"\n    maxHeight=\"250px\"\n  />\n</div>\n```\n\nA 'controlled' TextArea:\n\n```js\n---\ntype: example\n---\n\nclass Example extends React.Component {\n  state = { description: 'Hello World' };\n\n  handleChange = (e) => this.setState({ description: e.target.value});\n\n  render () {\n    return (\n      <TextArea\n        label=\"Description\"\n        value={this.state.description}\n        onChange={this.handleChange}\n      />\n    )\n  }\n}\n\nrender(<Example/>)\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Align text to the left</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Repeat label text if using placeholder text</Figure.Item>\n    <Figure.Item>Use for rich text editing</Figure.Item>\n    <Figure.Item>Allow resizing of the TextArea to break the layout of a page</Figure.Item>\n    <Figure.Item>Place labels to the right of the TextArea</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Alert\n    variant=\"info\"\n    margin=\"small\"\n  >\n    Every non-listed prop will be passed down to the underlying 'textarea' element, such as 'onBlur' and any other prop\n  </Alert>\n</Guidelines>\n```\n","displayName":"TextArea","methods":[],"props":{"label":{"type":{"name":"node"},"required":true,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"id":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"sets the font-size for the textarea","tsType":{"name":"union","raw":"'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'stacked' | 'inline'","elements":[{"name":"literal","value":"'stacked'"},{"name":"literal","value":"'inline'"}]},"defaultValue":{"value":"'stacked'","computed":false}},"autoGrow":{"type":{"name":"bool"},"required":false,"description":"the textarea will expand vertically to fit the height of the content,\nunless its content exceeds `maxHeight`","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"resize":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'both'","computed":false},{"value":"'horizontal'","computed":false},{"value":"'vertical'","computed":false}]},"required":false,"description":"is the textarea resizable (in supported browsers)","tsType":{"name":"union","raw":"'none' | 'both' | 'horizontal' | 'vertical'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'both'"},{"name":"literal","value":"'horizontal'"},{"name":"literal","value":"'vertical'"}]},"defaultValue":{"value":"'none'","computed":false}},"width":{"type":{"name":"string"},"required":false,"description":"a fixed width for the textarea","tsType":{"name":"string"}},"height":{"type":{"name":"string"},"required":false,"description":"Initial height for the textarea (if autoGrow is true it will grow vertically)\nAccepts CSS units, e.g. '55px'","tsType":{"name":"string"}},"maxHeight":{"type":{"name":"union","value":[{"name":"number"},{"name":"string"}]},"required":false,"description":"when autoGrow is true, the textarea will never grow beyond this value","tsType":{"name":"union","raw":"number | string","elements":[{"name":"number"},{"name":"string"}]}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Array of objects with shape: `{\n  text: React.ReactNode,\n  type: One of: ['error', 'hint', 'success', 'screenreader-only']\n}`","tsType":{"name":"Array","elements":[{"name":"FormMessage"}],"raw":"FormMessage[]"},"defaultValue":{"value":"[]","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"Html placeholder text to display when the input has no value. This should be hint text, not a label\nreplacement.","tsType":{"name":"string"}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether or not to disable the textarea","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"Works just like disabled but keeps the same styles as if it were active","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"required":{"type":{"name":"bool"},"required":false,"description":"Sets the required property on the underlying native textArea","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"textareaRef":{"type":{"name":"func"},"required":false,"description":"a function that provides a reference to the actual textarea element","tsType":{"name":"signature","type":"function","raw":"(textarea: HTMLTextAreaElement | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLTextAreaElement | null","elements":[{"name":"HTMLTextAreaElement"},{"name":"null"}]},"name":"textarea"}],"return":{"name":"void"}}}},"defaultValue":{"type":{"name":"string"},"required":false,"description":"value to set on initial render","tsType":{"name":"string"}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.string)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","tsType":{"name":"string"}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","tsType":{"name":"signature","type":"function","raw":"(event: React.ChangeEvent<HTMLTextAreaElement>) => void","signature":{"arguments":[{"type":{"name":"ReactChangeEvent","raw":"React.ChangeEvent<HTMLTextAreaElement>","elements":[{"name":"HTMLTextAreaElement"}]},"name":"event"}],"return":{"name":"void"}}}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-text-area/src/TextArea/index.tsx","extension":".tsx","srcPath":"packages/ui-text-area/src/TextArea/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-area/src/TextArea/index.tsx","packageName":"@instructure/ui-text-area","requirePath":"@instructure/ui-text-area/lib/TextArea/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text-area/src/TextArea/index.tsx').default","esPath":"@instructure/ui-text-area/es/TextArea/index","themePath":"packages/ui-text-area/src/TextArea/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text-area/src/TextArea/theme.ts","id":"TextArea","title":"TextArea"}