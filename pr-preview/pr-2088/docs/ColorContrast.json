{"description":"\nA component for displaying color contrast between two colors. It will perform checks according to the [WCAG 2.1 standard](https://webaim.org/articles/contrast/#ratio), determining if a given contrast ratio is acceptable for `normal`, `large` or `graphics` texts. `normal` needs to be `4.5`, the other two `3`.\n\n### Color Contrast\n\n```js\n---\ntype: example\n---\n<ColorContrast\n  firstColor=\"#FF0000\"\n  secondColor=\"#FFFF00\"\n  label=\"Color Contrast Ratio\"\n  successLabel=\"PASS\"\n  failureLabel=\"FAIL\"\n  normalTextLabel=\"Normal text\"\n  largeTextLabel=\"Large text\"\n  graphicsTextLabel=\"Graphics text\"\n  firstColorLabel=\"Background\"\n  secondColorLabel=\"Foreground\"\n/>\n```\n\n### In-line Color setting\n\n- ```js\n  class Example extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        selectedForeGround: '#0CBF94',\n        selectedBackGround: '#35423A',\n        validationLevel: 'AA'\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          <RadioInputGroup\n            onChange={(_e, value) => this.setState({ validationLevel: value })}\n            name=\"example1\"\n            defaultValue=\"AA\"\n            description=\"validationLevel\"\n          >\n            <RadioInput key=\"AA\" value=\"AA\" label=\"AA\" />\n            <RadioInput key=\"AAA\" value=\"AAA\" label=\"AAA\" />\n          </RadioInputGroup>\n          <ColorPreset\n            label=\"Background\"\n            colors={[\n              '#ffffff',\n              '#0CBF94',\n              '#0C89BF',\n              '#BF0C6D',\n              '#BF8D0C',\n              '#ff0000',\n              '#576A66',\n              '#35423A',\n              '#35423F'\n            ]}\n            selected={this.state.selectedBackGround}\n            onSelect={(selectedBackGround) =>\n              this.setState({ selectedBackGround })\n            }\n          />\n          <ColorPreset\n            label=\"Foreground\"\n            colors={[\n              '#ffffff',\n              '#0CBF94',\n              '#0C89BF',\n              '#BF0C6D',\n              '#BF8D0C',\n              '#ff0000',\n              '#576A66',\n              '#35423A',\n              '#35423F'\n            ]}\n            selected={this.state.selectedForeGround}\n            onSelect={(selectedForeGround) =>\n              this.setState({ selectedForeGround })\n            }\n          />\n          <hr style={{ width: '272px', marginLeft: 0 }} />\n          <ColorContrast\n            withoutColorPreview\n            firstColor={this.state.selectedBackGround}\n            secondColor={this.state.selectedForeGround}\n            label=\"Contrast Ratio\"\n            successLabel=\"PASS\"\n            failureLabel=\"FAIL\"\n            normalTextLabel=\"Normal text\"\n            largeTextLabel=\"Large text\"\n            graphicsTextLabel=\"Graphics text\"\n            validationLevel={this.state.validationLevel}\n            onContrastChange={(contrastData) => console.log(contrastData)}\n          />\n        </div>\n      )\n    }\n  }\n\n  render(<Example />)\n  ```\n\n- ```js\n  const Example = () => {\n    const [selectedForeGround, setSelectedForeGround] = useState('#0CBF94')\n    const [selectedBackGround, setSelectedBackGround] = useState('#35423A')\n    const [validationLevel, setValidationLevel] = useState('AA')\n\n    return (\n      <div>\n        <RadioInputGroup\n          onChange={(_e, value) => setValidationLevel(value)}\n          name=\"example1\"\n          defaultValue=\"AA\"\n          description=\"validationLevel\"\n        >\n          <RadioInput key=\"AA\" value=\"AA\" label=\"AA\" />\n          <RadioInput key=\"AAA\" value=\"AAA\" label=\"AAA\" />\n        </RadioInputGroup>\n        <ColorPreset\n          label=\"Background\"\n          colors={[\n            '#ffffff',\n            '#0CBF94',\n            '#0C89BF',\n            '#BF0C6D',\n            '#BF8D0C',\n            '#ff0000',\n            '#576A66',\n            '#35423A',\n            '#35423F'\n          ]}\n          selected={selectedBackGround}\n          onSelect={(selectedBackGround) =>\n            setSelectedBackGround(selectedBackGround)\n          }\n        />\n        <ColorPreset\n          label=\"Foreground\"\n          colors={[\n            '#ffffff',\n            '#0CBF94',\n            '#0C89BF',\n            '#BF0C6D',\n            '#BF8D0C',\n            '#ff0000',\n            '#576A66',\n            '#35423A',\n            '#35423F'\n          ]}\n          selected={selectedForeGround}\n          onSelect={(selectedForeGround) =>\n            setSelectedForeGround(selectedForeGround)\n          }\n        />\n        <hr style={{ width: '272px', marginLeft: 0 }} />\n        <ColorContrast\n          withoutColorPreview\n          firstColor={selectedBackGround}\n          secondColor={selectedForeGround}\n          label=\"Contrast Ratio\"\n          successLabel=\"PASS\"\n          failureLabel=\"FAIL\"\n          normalTextLabel=\"Normal text\"\n          largeTextLabel=\"Large text\"\n          graphicsTextLabel=\"Graphics text\"\n          validationLevel={validationLevel}\n          onContrastChange={(contrastData) => console.log(contrastData)}\n        />\n      </div>\n    )\n  }\n\n  render(<Example />)\n  ```\n","displayName":"ColorContrast","methods":[{"name":"handleRef","docblock":null,"modifiers":[],"params":[{"name":"el","optional":false,"type":{"name":"union","raw":"HTMLDivElement | null","elements":[{"name":"HTMLDivElement"},{"name":"null"}]}}],"returns":null},{"name":"renderStatus","docblock":null,"modifiers":[],"params":[{"name":"pass","optional":false,"type":{"name":"boolean"}},{"name":"description","optional":false,"type":{"name":"string"}}],"returns":null},{"name":"renderColorIndicator","docblock":null,"modifiers":[],"params":[{"name":"color","optional":false,"type":{"name":"string"}},{"name":"label","optional":false,"type":{"name":"string"}}],"returns":null},{"name":"renderPreview","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"calcState","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the component's underlying html element.","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"failureLabel":{"type":{"name":"string"},"required":true,"description":"Text of the failure indicator (Suggested english text: FAIL)","tsType":{"name":"string"}},"firstColor":{"type":{"name":"string"},"required":true,"description":"The first color to compare (HEX code)","tsType":{"name":"string"}},"firstColorLabel":{"type":{"name":"string"},"required":false,"description":"The name of the first color which will be compared","tsType":{"name":"string"}},"graphicsTextLabel":{"type":{"name":"string"},"required":true,"description":"Text of the third check (Suggested english text: Graphics text)","tsType":{"name":"string"}},"withoutColorPreview":{"type":{"name":"bool"},"required":false,"description":"Toggles the color preview part of the component.\n\nIf true, firstColorLabel and secondColorLabel is not necessary.\nOtherwise, it is required.","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"label":{"type":{"name":"string"},"required":true,"description":"Label of the component","tsType":{"name":"string"}},"largeTextLabel":{"type":{"name":"string"},"required":true,"description":"Text of the second check (Suggested english text: Large text)","tsType":{"name":"string"}},"normalTextLabel":{"type":{"name":"string"},"required":true,"description":"Text of the first check (Suggested english text: Normal text)","tsType":{"name":"string"}},"secondColor":{"type":{"name":"string"},"required":true,"description":"The second color to compare (HEX code)","tsType":{"name":"string"}},"secondColorLabel":{"type":{"name":"string"},"required":false,"description":"The name of the second color which will be compared","tsType":{"name":"string"}},"successLabel":{"type":{"name":"string"},"required":true,"description":"Text of the success indicator (Suggested english text: PASS)","tsType":{"name":"string"}},"onContrastChange":{"type":{"name":"func"},"required":false,"description":"Triggers a callback whenever the contrast changes, due to a changing color input.\nCommunicates the contrast and the success/fail state of the contrast, depending on\nthe situation:\n\nisValidNormalText true if at least 4.5:1\n\nisValidLargeText true if at least 3:1\n\nisValidGraphicsText true if at least 3:1","tsType":{"name":"signature","type":"function","raw":"(conrastData: {\n  contrast: number\n  isValidNormalText: boolean\n  isValidLargeText: boolean\n  isValidGraphicsText: boolean\n  firstColor: string\n  secondColor: string\n}) => null","signature":{"arguments":[{"type":{"name":"signature","type":"object","raw":"{\n  contrast: number\n  isValidNormalText: boolean\n  isValidLargeText: boolean\n  isValidGraphicsText: boolean\n  firstColor: string\n  secondColor: string\n}","signature":{"properties":[{"key":"contrast","value":{"name":"number","required":true}},{"key":"isValidNormalText","value":{"name":"boolean","required":true}},{"key":"isValidLargeText","value":{"name":"boolean","required":true}},{"key":"isValidGraphicsText","value":{"name":"boolean","required":true}},{"key":"firstColor","value":{"name":"string","required":true}},{"key":"secondColor","value":{"name":"string","required":true}}]}},"name":"conrastData"}],"return":{"name":"null"}}}},"validationLevel":{"type":{"name":"enum","value":[{"value":"'AA'","computed":false},{"value":"'AAA'","computed":false}]},"required":false,"description":"According to WCAG 2.2\n\nAA level (https://www.w3.org/TR/WCAG22/#contrast-minimum)\n\ntext: 4.5:1\n\nlarge text: 3:1\n\nnon-text: 3:1 (https://www.w3.org/TR/WCAG22/#non-text-contrast)\n\n\nAAA level (https://www.w3.org/TR/WCAG22/#contrast-enhanced)\n\ntext: 7:1\n\nlarge text: 4.5:1\n\nnon-text: 3:1 (https://www.w3.org/TR/WCAG22/#non-text-contrast)","tsType":{"name":"union","raw":"'AA' | 'AAA'","elements":[{"name":"literal","value":"'AA'"},{"name":"literal","value":"'AAA'"}]},"defaultValue":{"value":"'AA'","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-color-picker/src/ColorContrast/index.tsx","extension":".tsx","srcPath":"packages/ui-color-picker/src/ColorContrast/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-picker/src/ColorContrast/index.tsx","packageName":"@instructure/ui-color-picker","requirePath":"@instructure/ui-color-picker/lib/ColorContrast/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-color-picker/src/ColorContrast/index.tsx').default","esPath":"@instructure/ui-color-picker/es/ColorContrast/index","themePath":"packages/ui-color-picker/src/ColorContrast/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-color-picker/src/ColorContrast/theme.ts","id":"ColorContrast","title":"ColorContrast"}