{"description":"@module TopNavBarMenuItems","displayName":"TopNavBarMenuItems","methods":[],"props":{"children":{"type":{"name":"custom","raw":"ChildrenPropTypes.oneOf([TopNavBarItem])"},"required":false,"description":"Children of type: `<TopNavBar.Item>`.\n\nIn __desktop__ mode the items are listed on the navbar. See `renderHiddenItemsMenuTriggerLabel` prop description for overflow logic.\n\nIn __smallViewport__ mode the items are accessible under the main \"hamburger\" menu.","tsType":{"name":"union","raw":"| T\n| undefined\n| null\n| ChildrenOfType<T>[]","elements":[{"name":"unknown"},{"name":"undefined"},{"name":"null"},{"name":"Array","elements":[{"name":"ChildrenOfType"}],"raw":"ChildrenOfType<T>[]"}]}},"currentPageId":{"type":{"name":"string"},"required":false,"description":"The `id` of the link to the current page. Marks the item by setting `aria-current=\"page\"` attribute on it and setting its status to 'active'.\n\n(Note: only non-disabled, `variant=\"default\"` items can be set to current/active.)","tsType":{"name":"string"}},"renderHiddenItemsMenuTriggerLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"string"}]},"required":true,"description":"In __desktop__ mode, required label for the trigger item of the hidden list items menu.\n\nWhen there is not enough room to list all the menu items,\nthey will be accessible via a dropdown menu at the end of the list.","tsType":{"name":"signature","type":"function","raw":"(\n  hiddenChildrenCount: number\n) => React.ReactNode","signature":{"arguments":[{"type":{"name":"number"},"name":"hiddenChildrenCount"}],"return":{"name":"ReactReactNode","raw":"React.ReactNode"}}}},"listLabel":{"type":{"name":"string"},"required":false,"description":"In __desktop__ mode, 'aria-label' for the `<ul>` container.","tsType":{"name":"string"}},"elementRef":{"type":{"name":"func"},"required":false,"description":"A function that returns a reference to root HTML element","tsType":{"name":"signature","type":"function","raw":"(el: HTMLUListElement | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLUListElement | null","elements":[{"name":"HTMLUListElement"},{"name":"null"}]},"name":"el"}],"return":{"name":"void"}}}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"TopNavBar","id":"TopNavBar.MenuItems","relativePath":"packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/index.tsx","extension":".tsx","srcPath":"packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/index.tsx","packageName":"@instructure/ui-top-nav-bar","requirePath":"@instructure/ui-top-nav-bar/lib/TopNavBar/TopNavBarMenuItems/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/index.tsx').default","esPath":"@instructure/ui-top-nav-bar/es/TopNavBar/TopNavBarMenuItems/index","themePath":"packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-top-nav-bar/src/TopNavBar/TopNavBarMenuItems/theme.ts","title":"TopNavBar.MenuItems"}