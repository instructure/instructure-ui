{"description":"\nAn html5 range input/slider component.\n\n```js\n---\ntype: example\n---\nclass Example extends React.Component {\n  state = {\n    size: \"small\",\n    thumbVariant: \"accessible\",\n  }\n\n  handleSizeChange = (event, value) => {\n    this.setState({ size: value })\n  }\n\n  handleThumbVariantChange = (event, value) => {\n    this.setState({ thumbVariant: value })\n  }\n\n  render() {\n    return (\n      <div>\n        <View\n          as=\"div\"\n          padding=\"medium\"\n          background=\"primary\"\n        >\n          <RangeInput\n            label=\"Grading range\"\n            defaultValue={30}\n            max={100}\n            min={0}\n            size={this.state.size}\n            thumbVariant={this.state.thumbVariant}\n          />\n        </View>\n\n        <View as=\"div\" margin='medium 0 0'>\n          <FormFieldGroup\n            description={\n              <ScreenReaderContent>RangeInput Example Settings</ScreenReaderContent>\n            }\n            layout='columns'\n            vAlign='top'\n          >\n            <RadioInputGroup\n              onChange={this.handleSizeChange}\n              name=\"labelSize\"\n              value={this.state.size}\n              description=\"Label size\"\n            >\n              <RadioInput label=\"small\" value=\"small\" />\n              <RadioInput label=\"medium\" value=\"medium\" />\n              <RadioInput label=\"large\" value=\"large\" />\n            </RadioInputGroup>\n\n            <RadioInputGroup\n              onChange={this.handleThumbVariantChange}\n              name=\"thumbVariant\"\n              value={this.state.thumbVariant}\n              description=\"Thumb variant\"\n            >\n              <RadioInput label=\"accessible\" value=\"accessible\" />\n              <RadioInput label=\"deprecated\" value=\"deprecated\" />\n            </RadioInputGroup>\n          </FormFieldGroup>\n        </View>\n      </div>\n    )\n  }\n}\nrender(<Example />)\n```\n","displayName":"RangeInput","methods":[],"props":{"min":{"type":{"name":"number"},"required":false,"description":"","tsType":{"name":"number"},"defaultValue":{"value":"0","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"","tsType":{"name":"number"},"defaultValue":{"value":"0","computed":false}},"defaultValue":{"type":{"name":"number"},"required":false,"description":"value to set on initial render","tsType":{"name":"number"}},"value":{"type":{"name":"custom","raw":"controllable(PropTypes.number)"},"required":false,"description":"the selected value (must be accompanied by an `onChange` prop)","tsType":{"name":"number"}},"onChange":{"type":{"name":"func"},"required":false,"description":"when used with the `value` prop, the component will not control its own state","tsType":{"name":"signature","type":"function","raw":"(value: number | string) => void","signature":{"arguments":[{"type":{"name":"union","raw":"number | string","elements":[{"name":"number"},{"name":"string"}]},"name":"value"}],"return":{"name":"void"}}}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"","tsType":{"name":"Array","elements":[{"name":"FormMessage"}],"raw":"FormMessage[]"}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"The size of the value label","tsType":{"name":"union","raw":"'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"defaultValue":{"value":"'medium'","computed":false}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'stacked' | 'inline'","elements":[{"name":"literal","value":"'stacked'"},{"name":"literal","value":"'inline'"}]},"defaultValue":{"value":"'stacked'","computed":false}},"id":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"}},"label":{"type":{"name":"node"},"required":true,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"displayValue":{"type":{"name":"bool"},"required":false,"description":"whether to display the current value","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"step":{"type":{"name":"number"},"required":false,"description":"","tsType":{"name":"number"},"defaultValue":{"value":"1","computed":false}},"formatValue":{"type":{"name":"func"},"required":false,"description":"A function to format the displayed value","tsType":{"name":"signature","type":"function","raw":"(value?: number, max?: number) => string","signature":{"arguments":[{"type":{"name":"number"},"name":"value"},{"type":{"name":"number"},"name":"max"}],"return":{"name":"string"}}},"defaultValue":{"value":"(val?: number) => val","computed":false}},"inline":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"readOnly":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"thumbVariant":{"type":{"name":"custom","raw":"deprecated.deprecatePropValues(\n  PropTypes.oneOf(['deprecated', 'accessible']),\n  ['deprecated'],\n  'The `deprecated` variant is not fully accessible and will be removed in V9. The connected theme variables will be removed as well: `handleShadowColor`, `handleFocusOutlineColor`, `handleFocusOutlineWidth`. Please use the `accessible` variant.'\n)"},"required":false,"description":"The \"default\" variant has an outer shadow on focus.\nThe \"accessible\" variant has better color contrast, border and inset focus ring for better accessibility.","tsType":{"name":"union","raw":"| 'deprecated' // TODO: deprecated, remove in V9.\n| 'accessible'","elements":[{"name":"literal","value":"'deprecated'"},{"name":"literal","value":"'accessible'"}]},"defaultValue":{"value":"'deprecated'","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-range-input/src/RangeInput/index.tsx","extension":".tsx","srcPath":"packages/ui-range-input/src/RangeInput/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-range-input/src/RangeInput/index.tsx","packageName":"@instructure/ui-range-input","requirePath":"@instructure/ui-range-input/lib/RangeInput/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-range-input/src/RangeInput/index.tsx').default","esPath":"@instructure/ui-range-input/es/RangeInput/index","themePath":"packages/ui-range-input/src/RangeInput/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-range-input/src/RangeInput/theme.ts","id":"RangeInput","title":"RangeInput"}