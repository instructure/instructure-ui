{"description":"","displayName":"DrawerTray","methods":[{"name":"_content","docblock":null,"modifiers":["get"],"params":[],"returns":null},{"name":"makeStyleProps","docblock":null,"modifiers":[],"params":[],"returns":{"type":{"name":"signature","type":"object","raw":"{\n  placement: DrawerTrayPlacement\n}","signature":{"properties":[{"key":"placement","value":{"name":"union","raw":"'start' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'end'"}],"required":true}}]}}}},{"name":"placement","docblock":null,"modifiers":["get"],"params":[],"returns":null},{"name":"transition","docblock":null,"modifiers":["get"],"params":[],"returns":{"type":{"name":"TransitionType"}}},{"name":"handleContentRef","docblock":null,"modifiers":[],"params":[{"name":"node","optional":false,"type":{"name":"union","raw":"HTMLDivElement | null","elements":[{"name":"HTMLDivElement"},{"name":"null"}]}}],"returns":null},{"name":"handleTransitionEntered","docblock":null,"modifiers":[],"params":[{"name":"_transitionType","optional":true,"type":{"name":"TransitionType","alias":"TransitionType"}}],"returns":null},{"name":"handleTransitionExited","docblock":null,"modifiers":[],"params":[{"name":"_transitionType","optional":true,"type":{"name":"TransitionType","alias":"TransitionType"}}],"returns":null},{"name":"handlePortalOpen","docblock":null,"modifiers":[],"params":[{"name":"DOMNode","optional":false,"type":{"name":"PortalNode","alias":"PortalNode"}}],"returns":null},{"name":"DOMNode","docblock":null,"modifiers":["get"],"params":[],"returns":null},{"name":"DOMNode","docblock":null,"modifiers":["set"],"params":[{"name":"el","optional":false,"type":{"name":"PortalNode","alias":"PortalNode"}}],"returns":null},{"name":"renderContent","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"label":{"required":true,"tsType":{"name":"string"},"description":""},"children":{"required":false,"tsType":{"name":"union","raw":"React.ReactNode | (() => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}]},"description":""},"render":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => React.ReactNode","signature":{"arguments":[],"return":{"name":"ReactReactNode","raw":"React.ReactNode"}}},"description":""},"placement":{"required":false,"tsType":{"name":"union","raw":"'start' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'end'"}]},"description":"Placement of the `<DrawerLayout.Tray />`","defaultValue":{"value":"'start'","computed":false}},"open":{"required":false,"tsType":{"name":"boolean"},"description":"If the tray is open or closed.","defaultValue":{"value":"false","computed":false}},"onOpen":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(transitionType?: TransitionType) => void","signature":{"arguments":[{"type":{"name":"union","raw":"| 'fade'\n| 'scale'\n| 'slide-down'\n| 'slide-up'\n| 'slide-left'\n| 'slide-right'","elements":[{"name":"literal","value":"'fade'"},{"name":"literal","value":"'scale'"},{"name":"literal","value":"'slide-down'"},{"name":"literal","value":"'slide-up'"},{"name":"literal","value":"'slide-left'"},{"name":"literal","value":"'slide-right'"}]},"name":"transitionType"}],"return":{"name":"void"}}},"description":"Called when the `<DrawerLayout.Tray />` is opened"},"onClose":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(transitionType?: TransitionType) => void","signature":{"arguments":[{"type":{"name":"union","raw":"| 'fade'\n| 'scale'\n| 'slide-down'\n| 'slide-up'\n| 'slide-left'\n| 'slide-right'","elements":[{"name":"literal","value":"'fade'"},{"name":"literal","value":"'scale'"},{"name":"literal","value":"'slide-down'"},{"name":"literal","value":"'slide-up'"},{"name":"literal","value":"'slide-left'"},{"name":"literal","value":"'slide-right'"}]},"name":"transitionType"}],"return":{"name":"void"}}},"description":"Called when the `<DrawerLayout.Tray />` is closed"},"border":{"required":false,"tsType":{"name":"boolean"},"description":"Should the `<DrawerLayout.Tray />` have a border","defaultValue":{"value":"true","computed":false}},"shadow":{"required":false,"tsType":{"name":"boolean"},"description":"Should the `<DrawerLayout.Tray />` have a shadow","defaultValue":{"value":"true","computed":false}},"contentRef":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(element: HTMLDivElement | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLDivElement | null","elements":[{"name":"HTMLDivElement"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}},"description":"Ref function for the `<DrawerLayout.Tray />` content"},"mountNode":{"required":false,"tsType":{"name":"PositionMountNode"},"description":"An element or a function returning an element to use as the mount node\nfor the `<DrawerLayout.Tray />` when tray is overlaying content"},"defaultFocusElement":{"required":false,"tsType":{"name":"union","raw":"| Node\n| Window\n| ReactElement\n| Component\n| (() => Node | Window | null | undefined)\n| null","elements":[{"name":"Node"},{"name":"Window"},{"name":"ReactElement"},{"name":"Component"},{"name":"unknown"},{"name":"null"}]},"description":"An element or a function returning an element to focus by default"},"liveRegion":{"required":false,"tsType":{"name":"union","raw":"| (() => (Element | null)[])\n| (() => Element | null)\n| (Element | null)[]\n| Element\n| null","elements":[{"name":"unknown"},{"name":"unknown"},{"name":"Array","elements":[{"name":"unknown"}],"raw":"(Element | null)[]"},{"name":"Element"},{"name":"null"}]},"description":"An element, function returning an element, or array of elements that will not be hidden from\nthe screen reader when the `<DrawerLayout.Tray />` is open"},"onDismiss":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(\n  event: React.UIEvent | React.FocusEvent,\n  documentClick?: boolean\n) => void","signature":{"arguments":[{"type":{"name":"union","raw":"React.UIEvent | React.FocusEvent","elements":[{"name":"ReactUIEvent","raw":"React.UIEvent"},{"name":"ReactFocusEvent","raw":"React.FocusEvent"}]},"name":"event"},{"type":{"name":"boolean"},"name":"documentClick"}],"return":{"name":"void"}}},"description":""},"shouldContainFocus":{"required":false,"tsType":{"name":"boolean"},"description":"","defaultValue":{"value":"true","computed":false}},"shouldReturnFocus":{"required":false,"tsType":{"name":"boolean"},"description":"","defaultValue":{"value":"true","computed":false}},"shouldCloseOnDocumentClick":{"required":false,"tsType":{"name":"boolean"},"description":"","defaultValue":{"value":"true","computed":false}},"shouldCloseOnEscape":{"required":false,"tsType":{"name":"boolean"},"description":"Should the `<DrawerLayout.Tray />` close when ESC is pressed.\nNote that it will only close if it's in the overlay mode (if there is\nless space for the content than `DrawerLayout.props.minWidth`)","defaultValue":{"value":"true","computed":false}},"onTransition":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(\n  toState: BaseTransitionStatesType,\n  fromState: BaseTransitionStatesType\n) => void","signature":{"arguments":[{"type":{"name":"union","raw":"-2 | -1 | 1 | 2","elements":[{"name":"literal","value":"-2"},{"name":"literal","value":"-1"},{"name":"literal","value":"1"},{"name":"literal","value":"2"}]},"name":"toState"},{"type":{"name":"union","raw":"-2 | -1 | 1 | 2","elements":[{"name":"literal","value":"-2"},{"name":"literal","value":"-1"},{"name":"literal","value":"1"},{"name":"literal","value":"2"}]},"name":"fromState"}],"return":{"name":"void"}}},"description":"Callback fired when the `<DrawerLayout.Tray />` transitions in/out"},"onEnter":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Callback fired before the `<DrawerLayout.Tray />` transitions in"},"onEntering":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Callback fired as the `<DrawerLayout.Tray />` begins to transition in"},"onEntered":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(type?: TransitionType) => void","signature":{"arguments":[{"type":{"name":"union","raw":"| 'fade'\n| 'scale'\n| 'slide-down'\n| 'slide-up'\n| 'slide-left'\n| 'slide-right'","elements":[{"name":"literal","value":"'fade'"},{"name":"literal","value":"'scale'"},{"name":"literal","value":"'slide-down'"},{"name":"literal","value":"'slide-up'"},{"name":"literal","value":"'slide-left'"},{"name":"literal","value":"'slide-right'"}]},"name":"type"}],"return":{"name":"void"}}},"description":"Callback fired after the `<DrawerLayout.Tray />` finishes transitioning in"},"onExit":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Callback fired right before the `<DrawerLayout.Tray />` transitions out"},"onExiting":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Callback fired as the `<DrawerLayout.Tray />` begins to transition out"},"onExited":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(type?: TransitionType) => void","signature":{"arguments":[{"type":{"name":"union","raw":"| 'fade'\n| 'scale'\n| 'slide-down'\n| 'slide-up'\n| 'slide-left'\n| 'slide-right'","elements":[{"name":"literal","value":"'fade'"},{"name":"literal","value":"'scale'"},{"name":"literal","value":"'slide-down'"},{"name":"literal","value":"'slide-up'"},{"name":"literal","value":"'slide-left'"},{"name":"literal","value":"'slide-right'"}]},"name":"type"}],"return":{"name":"void"}}},"description":"Callback fired after the `<DrawerLayout.Tray />` finishes transitioning out"},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"DrawerLayout","id":"DrawerLayout.Tray","relativePath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.tsx","extension":".tsx","srcPath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.tsx","packageName":"@instructure/ui-drawer-layout","requirePath":"@instructure/ui-drawer-layout/lib/DrawerLayout/DrawerTray/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/index.tsx').default","esPath":"@instructure/ui-drawer-layout/es/DrawerLayout/DrawerTray/index","themePath":"packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-drawer-layout/src/DrawerLayout/DrawerTray/theme.ts","title":"DrawerLayout.Tray"}