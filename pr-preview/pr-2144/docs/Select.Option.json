{"description":"@module Option","displayName":"Option","methods":[],"props":{"id":{"required":true,"tsType":{"name":"string"},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},"isHighlighted":{"required":false,"tsType":{"name":"boolean"},"description":"Whether or not this option is highlighted.","defaultValue":{"value":"false","computed":false}},"isSelected":{"required":false,"tsType":{"name":"boolean"},"description":"Whether or not this option is selected.","defaultValue":{"value":"false","computed":false}},"isDisabled":{"required":false,"tsType":{"name":"boolean"},"description":"Whether or not this option is disabled.","defaultValue":{"value":"false","computed":false}},"children":{"required":false,"tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"description":"Content to display as the option label."},"renderBeforeLabel":{"required":false,"tsType":{"name":"union","raw":"| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]},"description":"Content to display before the option label, such as an icon."},"renderAfterLabel":{"required":false,"tsType":{"name":"union","raw":"| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ClassType","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}},{"name":"ClassicComponent","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"signature","type":"object","raw":"{\n  /**\n   * The id for the option. **Must be globally unique**, it will be translated\n   * to an `id` prop in the DOM.\n   */\n  id: string\n  /**\n   * Whether or not this option is highlighted.\n   */\n  isHighlighted?: boolean\n  /**\n   * Whether or not this option is selected.\n   */\n  isSelected?: boolean\n  /**\n   * Whether or not this option is disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * Content to display as the option label.\n   */\n  children?: React.ReactNode\n}","signature":{"properties":[{"key":"id","value":{"name":"string","required":true},"description":"The id for the option. **Must be globally unique**, it will be translated\nto an `id` prop in the DOM."},{"key":"isHighlighted","value":{"name":"boolean","required":false},"description":"Whether or not this option is highlighted."},{"key":"isSelected","value":{"name":"boolean","required":false},"description":"Whether or not this option is selected."},{"key":"isDisabled","value":{"name":"boolean","required":false},"description":"Whether or not this option is disabled."},{"key":"children","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":false},"description":"Content to display as the option label."}]}}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]},"description":"Content to display after the option label, such as an icon."},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"Select","id":"Select.Option","relativePath":"packages/ui-select/src/Select/Option/index.tsx","extension":".tsx","srcPath":"packages/ui-select/src/Select/Option/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-select/src/Select/Option/index.tsx","packageName":"@instructure/ui-select","requirePath":"@instructure/ui-select/lib/Select/Option/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-select/src/Select/Option/index.tsx').default","esPath":"@instructure/ui-select/es/Select/Option/index","title":"Select.Option"}