{"comment":"/**\n * ---\n * category: utilities/layout\n * ---\n *\n * Given a valid json query object, converts it to a standard media query\n * string. Valid queries should be an object consisting of condition:breakpoint\n * pairs with the following condition types `minWidth`, `maxWidth`, `minHeight`,\n * or `maxHeight` where breakpoint value is either a string or a number.\n *\n * Example input\n * ```js-code\n * { minWidth: 350, maxWidth: 600 }\n * ```\n * Example output\n * ```js-code\n * '(min-width: 350px) and (max-Width: 600px)'\n * ```\n * @module jsonToMediaQuery\n * @param {Object} query - an object consisting of the query type and value\n * @param {Document | Window | Node | React.ReactElement | React.Component} el - component or DOM node which will be passed to the pixel conversion if the unit type is `em`\n * @returns {string} media query string\n */","meta":{"filename":"h5w747ki369tsmf6a9ppxn.js","lineno":1,"columnno":0,"path":"/tmp","code":{}},"description":"\nGiven a valid json query object, converts it to a standard media query\nstring. Valid queries should be an object consisting of condition:breakpoint\npairs with the following condition types `minWidth`, `maxWidth`, `minHeight`,\nor `maxHeight` where breakpoint value is either a string or a number.\n\nExample input\n```js-code\n{ minWidth: 350, maxWidth: 600 }\n```\nExample output\n```js-code\n'(min-width: 350px) and (max-Width: 600px)'\n```","kind":"module","name":"jsonToMediaQuery","params":[{"type":{"names":["Object"]},"description":"an object consisting of the query type and value","name":"query"},{"type":{"names":["Document","Window","Node","React.ReactElement","React.Component"]},"description":"component or DOM node which will be passed to the pixel conversion if the unit type is `em`","name":"el"}],"returns":[{"type":{"names":["string"]},"description":"media query string"}],"longname":"module:jsonToMediaQuery","undocumented":false,"category":"utilities/layout","relativePath":"packages/ui-responsive/src/jsonToMediaQuery.ts","extension":".ts","srcPath":"packages/ui-responsive/src/jsonToMediaQuery.ts","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/jsonToMediaQuery.ts","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/jsonToMediaQuery","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/jsonToMediaQuery.ts').default","esPath":"@instructure/ui-responsive/es/jsonToMediaQuery","themePath":"packages/ui-responsive/src/jsonToMediaQuery.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/jsonToMediaQuery.ts","id":"jsonToMediaQuery","title":"jsonToMediaQuery"}