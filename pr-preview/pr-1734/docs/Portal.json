{"description":"@module Portal\nThe `<Portal/>` component allows you to render a subtree into a DOM element.\n\n```js\n---\ntype: example\n---\nclass Example extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isPortalOpen: false\n    }\n  }\n\n  handleButtonClick = () => {\n    this.setState(state => {\n      return { isPortalOpen: !state.isPortalOpen }\n    })\n  };\n\n  render () {\n    const firstParagraph = lorem.paragraph()\n    const secondParagraph = lorem.paragraph()\n    return (\n      <div>\n        <Button onClick={this.handleButtonClick}>\n          {this.state.isPortalOpen ? 'Close' : 'Open'} the Portal\n        </Button>\n        <Portal\n          mountNode={this._mountNode}\n          open={this.state.isPortalOpen}\n        >\n          <ContextView placement=\"center start\" padding=\"0 x-small\">\n            <p>Greetings from the portal!</p>\n          </ContextView>\n        </Portal>\n        <Text>\n          <p>{firstParagraph}</p>\n          <div ref={(c) => this._mountNode = c}></div>\n          <p>{secondParagraph}</p>\n        </Text>\n      </div>\n    )\n  }\n}\n\nrender(<Example />)\n```\n","displayName":"Portal","methods":[],"props":{"open":{"type":{"name":"bool"},"required":false,"description":"Whether or not the `<Portal />` is open","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"onOpen":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` content has been mounted in the DOM. Ha the Portal DOMNode as parameter.","tsType":{"name":"signature","type":"function","raw":"(DOMNode: PortalNode) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLSpanElement | null","elements":[{"name":"HTMLSpanElement"},{"name":"null"}]},"name":"DOMNode"}],"return":{"name":"void"}}},"defaultValue":{"value":"() => {}","computed":false}},"onClose":{"type":{"name":"func"},"required":false,"description":"Callback fired when `<Portal />` has been unmounted from the DOM","tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"defaultValue":{"value":"() => {}","computed":false}},"mountNode":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":false,"description":"An element or a function returning an element to use as the mount node\nfor the `<Portal />` (defaults to `document.body`)","tsType":{"name":"union","raw":"Element | (() => Element | null) | null","elements":[{"name":"Element"},{"name":"unknown"},{"name":"null"}]},"defaultValue":{"value":"null","computed":false}},"insertAt":{"type":{"name":"enum","value":[{"value":"'bottom'","computed":false},{"value":"'top'","computed":false}]},"required":false,"description":"Insert the element at the 'top' of the mountNode or at the 'bottom'","tsType":{"name":"union","raw":"'bottom' | 'top'","elements":[{"name":"literal","value":"'bottom'"},{"name":"literal","value":"'top'"}]},"defaultValue":{"value":"'bottom'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"The children to be rendered within the `<Portal />`","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"defaultValue":{"value":"null","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying html element. Has the Portal DOMNode as parameter.","tsType":{"name":"signature","type":"function","raw":"(el?: PortalNode) => void","signature":{"arguments":[{"type":{"name":"union","raw":"HTMLSpanElement | null","elements":[{"name":"HTMLSpanElement"},{"name":"null"}]},"name":"el"}],"return":{"name":"void"}}},"defaultValue":{"value":"() => {}","computed":false}},"dir":{"type":{"name":"enum","computed":true,"value":"Object.values(textDirectionContextConsumer.DIRECTION)"},"required":false,"description":"","tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]}}},"category":"components/utilities","relativePath":"packages/ui-portal/src/Portal/index.tsx","extension":".tsx","srcPath":"packages/ui-portal/src/Portal/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-portal/src/Portal/index.tsx","packageName":"@instructure/ui-portal","requirePath":"@instructure/ui-portal/lib/Portal/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-portal/src/Portal/index.tsx').default","esPath":"@instructure/ui-portal/es/Portal/index","id":"Portal","title":"Portal"}