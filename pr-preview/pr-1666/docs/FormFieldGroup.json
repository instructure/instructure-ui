{"description":"\nThis is a helper component that is used by most of the custom form\ncomponents. Perfect if you need to wrap a complex group of form fields\n(Play with the different properties inside the code editor\nto see how they affect the overall look and feel). The first example\nsets the `layout to inline` and sets the `vAlign to middle` and `small rowSpacing`\n\n```js\n---\ntype: example\n---\n  <FormFieldGroup\n    description=\"Breakfast\"\n    rowSpacing=\"small\"\n    layout=\"inline\"\n    vAlign=\"middle\"\n  >\n    <TextInput renderLabel=\"Favorite Breakfast Eatery\"\n      messages={[\n      { text: 'Invalid name', type: 'error' }\n      ]}\n    />\n    <TextInput renderLabel=\"Favorite Side Dish\" />\n    <RadioInputGroup\n      name=\"beverage\"\n      description=\"Beverage of Choice\"\n      defaultValue=\"coffee\"\n      layout=\"columns\"\n    >\n      <RadioInput label=\"Juice\" value=\"juice\" />\n      <RadioInput label=\"Water\" value=\"water\" />\n      <RadioInput label=\"Coffee\" value=\"coffee\" />\n      <RadioInput label=\"Milk\" value=\"milk\" />\n      <RadioInput label=\"Soda\" value=\"soda\" />\n      <RadioInput label=\"Hot Tea\" value=\"tea\" />\n    </RadioInputGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to columns` and sets the `vAlign to top`\nand the `colSpacing to medium`\n\n```js\n---\ntype: example\n---\n  <FormFieldGroup\n    description=\"Lunch\"\n    colSpacing=\"medium\"\n    layout=\"columns\"\n    vAlign=\"top\"\n  >\n    <TextInput renderLabel=\"Dining Style\" />\n    <TextInput renderLabel=\"Favorite Lunch Outing\"/>\n    <CheckboxGroup name=\"times\"\n      layout=\"stacked\"\n      onChange={function (value) { console.log(value) }}\n      defaultValue={['afternoon']}\n      description=\"Best Time to Head Out for Lunch\"\n    >\n      <Checkbox label=\"Between 11:00 and 11:30\" value=\"morning\" />\n      <Checkbox label=\"Between 11:30 and Noon\" value=\"early-afternoon\" />\n      <Checkbox label=\"Between Noon and 1:00\" value=\"afternoon\" />\n      <Checkbox label=\"Between 1:00 and 2:00\" value=\"late-afternoon\" />\n    </CheckboxGroup>\n  </FormFieldGroup>\n```\n\nThis example sets the `layout to stacked` and sets the `rowSpacing to large`\n\n```js\n---\ntype: example\n---\n  <FormFieldGroup\n    description=\"Dinner\"\n    layout=\"stacked\"\n    rowSpacing=\"large\"\n    messages={[\n    { text: 'Complete All Fields', type: 'error' }\n    ]}\n  >\n    <RadioInputGroup\n      name=\"diningstyle\"\n      description=\"Size of Your Meal\"\n      defaultValue=\"grill\"\n      layout=\"stacked\"\n    >\n      <RadioInput label=\"Keep it light\" value=\"light\" />\n      <RadioInput label=\"Anything cooked on the grill\" value=\"grill\" />\n      <RadioInput label=\"Bring it on... Ready for the full course\" value=\"full-course\" />\n      <RadioInput label=\"Breakfast for dinner\" value=\"breakfast\" />\n    </RadioInputGroup>\n    <TextInput renderLabel=\"If Not At Home - I'd Like To Eat Dinner At\"\n      />\n    <Checkbox label=\"Love to Eat Dessert After Dinner\" value=\"medium\" variant=\"toggle\" />\n  </FormFieldGroup>\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Avoid placeholder text (it creates usability problems by increasing cognitive load, low contrast, lack of screen reader compatibility, etc.)</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"FormFieldGroup","methods":[],"props":{"description":{"type":{"name":"node"},"required":true,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'fieldset'","computed":false}},"messages":{"type":{"name":"arrayOf","value":{"name":"custom","raw":"FormPropTypes.message"}},"required":false,"description":"Array of objects with shape: `{\n  text: React.ReactNode,\n  type: One of: ['error', 'hint', 'success', 'screenreader-only']\n}`","tsType":{"name":"Array","elements":[{"name":"signature","type":"object","raw":"{\n  type: FormMessageType\n  text: FormMessageChild\n}","signature":{"properties":[{"key":"type","value":{"name":"union","raw":"'error' | 'hint' | 'success' | 'screenreader-only'","elements":[{"name":"literal","value":"'error'"},{"name":"literal","value":"'hint'"},{"name":"literal","value":"'success'"},{"name":"literal","value":"'screenreader-only'"}],"required":true}},{"key":"text","value":{"name":"ReactReactNode","raw":"React.ReactNode","required":true}}]}}],"raw":"FormMessage[]"}},"messagesId":{"type":{"name":"string"},"required":false,"description":"id for the form field messages","tsType":{"name":"string"}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"layout":{"type":{"name":"enum","value":[{"value":"'stacked'","computed":false},{"value":"'columns'","computed":false},{"value":"'inline'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'stacked' | 'columns' | 'inline'","elements":[{"name":"literal","value":"'stacked'"},{"name":"literal","value":"'columns'"},{"name":"literal","value":"'inline'"}]}},"rowSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'none' | 'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"defaultValue":{"value":"'medium'","computed":false}},"colSpacing":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'none' | 'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"defaultValue":{"value":"'small'","computed":false}},"vAlign":{"type":{"name":"enum","value":[{"value":"'top'","computed":false},{"value":"'middle'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'top' | 'middle' | 'bottom'","elements":[{"name":"literal","value":"'top'"},{"name":"literal","value":"'middle'"},{"name":"literal","value":"'bottom'"}]},"defaultValue":{"value":"'middle'","computed":false}},"startAt":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"null","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'small' | 'medium' | 'large' | 'x-large' | null","elements":[{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"},{"name":"literal","value":"'x-large'"},{"name":"null"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-form-field/src/FormFieldGroup/index.tsx","extension":".tsx","srcPath":"packages/ui-form-field/src/FormFieldGroup/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldGroup/index.tsx","packageName":"@instructure/ui-form-field","requirePath":"@instructure/ui-form-field/lib/FormFieldGroup/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-form-field/src/FormFieldGroup/index.tsx').default","esPath":"@instructure/ui-form-field/es/FormFieldGroup/index","themePath":"packages/ui-form-field/src/FormFieldGroup/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-form-field/src/FormFieldGroup/theme.ts","id":"FormFieldGroup","title":"FormFieldGroup"}