{"description":"\nThe avatar component can be used to display a user's avatar. When an image src is not supplied the user's initials will display.\n\nInstead of the initials, an SVG icon can be displayed with the `renderIcon` property. **Note: If both `src` and `renderIcon` are provided, the image (`src`) takes priority.**\n\nThe avatar can be `circle` _(default)_ or `rectangle`. The component uses flexbox layout and can be displayed as `inline` _(default)_ or `block` using the `display` prop.\n\n```js\n---\ntype: example\nreadonly: true\n---\n\n<div>\n  <InstUISettingsProvider theme={canvas}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" />\n    <Avatar name=\"James Arias\" color=\"accent2\" />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar name=\"David Herbert\" color=\"accent6\" />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n</div>\n</InstUISettingsProvider>\n<InstUISettingsProvider theme={rebrandDark}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" />\n    <Avatar name=\"James Arias\" color=\"accent2\" />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar name=\"David Herbert\" color=\"accent6\" />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n</div>\n</InstUISettingsProvider>\n  <InstUISettingsProvider theme={rebrandLight}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" />\n    <Avatar name=\"James Arias\" color=\"accent2\" />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar name=\"David Herbert\" color=\"accent6\" />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n</div>\n</InstUISettingsProvider>\n<InstUISettingsProvider theme={canvasHighContrast}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" />\n    <Avatar name=\"James Arias\" color=\"accent2\" />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar name=\"David Herbert\" color=\"accent6\" />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n</div>\n</InstUISettingsProvider>\n<InstUISettingsProvider theme={canvas}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n</div>\n</InstUISettingsProvider>\n<InstUISettingsProvider theme={rebrandDark}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n</div>\n</InstUISettingsProvider>\n  <InstUISettingsProvider theme={rebrandLight}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n</div>\n</InstUISettingsProvider>\n<InstUISettingsProvider theme={canvasHighContrast}>\n <div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n</div>\n</InstUISettingsProvider>\n  </div>\n```\n\n### AI Avatar\n\nThere is a need for special, `ai avatars`. These have a specific look. You can achieve it the following way\n\n```js\n---\ntype: example\nreadonly: true\n---\n<View display=\"block\" padding=\"small medium\" background=\"primary\">\n  <Avatar size=\"xx-small\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"x-small\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"small\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"medium\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"large\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"x-large\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n  <Avatar size=\"xx-large\" color=\"ai\" name=\"AI Assistant\" renderIcon={IconAiSolid} />\n</View>\n```\n\n### Size\n\nThe `size` prop allows you to select from `xx-small`, `x-small`, `small`, `medium` _(default)_, `large`, `x-large`, and `xx-large`. Each size has predefined dimensions and typography scales.\n\n```js\n---\ntype: example\n---\n<div>\n  <View display=\"block\" padding=\"small medium\">\n    <Avatar name=\"Arthur C. Clarke\" size=\"xx-small\" />\n    <Avatar name=\"James Arias\" size=\"x-small\" />\n    <Avatar name=\"Charles Kimball\" size=\"small\" />\n    <Avatar name=\"Melissa Reed\" size=\"medium\" />\n    <Avatar name=\"Heather Wheeler\" size=\"large\" />\n    <Avatar name=\"David Herbert\" size=\"x-large\" />\n    <Avatar name=\"Isaac Asimov\" size=\"xx-large\" />\n  </View>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" size=\"xx-small\" src={avatarSquare} />\n    <Avatar name=\"James Arias\" size=\"x-small\" src={avatarSquare} />\n    <Avatar name=\"Charles Kimball\" size=\"small\" src={avatarSquare} />\n    <Avatar name=\"Melissa Reed\" size=\"medium\" src={avatarSquare} />\n    <Avatar name=\"Heather Wheeler\" size=\"large\" src={avatarSquare} />\n    <Avatar name=\"David Herbert\" size=\"x-large\" src={avatarSquare} />\n    <Avatar name=\"Isaac Asimov\" size=\"xx-large\" src={avatarSquare} />\n  </View>\n  <View display=\"block\" padding=\"small medium\">\n    <Avatar name=\"Arthur C. Clarke\" renderIcon={<IconGroupLine />} size=\"xx-small\" />\n    <Avatar name=\"James Arias\" renderIcon={<IconGroupLine />} size=\"x-small\" />\n    <Avatar name=\"Charles Kimball\" renderIcon={<IconGroupLine />} size=\"small\" />\n    <Avatar name=\"Melissa Reed\" renderIcon={<IconGroupLine />} size=\"medium\" />\n    <Avatar name=\"Heather Wheeler\" renderIcon={<IconGroupLine />} size=\"large\" />\n    <Avatar name=\"David Herbert\" renderIcon={<IconGroupLine />} size=\"x-large\" />\n    <Avatar name=\"Isaac Asimov\" renderIcon={<IconGroupLine />} size=\"xx-large\" />\n  </View>\n</div>\n```\n\n### Colors\n\nThe color of the initials and icons can be set with the `color` prop, and it allows you to select from `accent1` _(default)_, `accent2`, `accent3`, `accent4`, `accent5`, `accent6`, and `ai` _(for AI avatars with gradient background)_.\n\n```js\n---\ntype: example\n---\n<div>\n  <View display=\"block\" padding=\"small medium\">\n    <Avatar name=\"Arthur C. Clarke\" />\n    <Avatar name=\"James Arias\" color=\"accent2\" />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar name=\"David Herbert\" color=\"accent6\" />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n  <View display=\"block\" padding=\"small medium\">\n    <Avatar renderIcon={<IconGroupLine />} name=\"Arthur C. Clarke\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"James Arias\" color=\"accent2\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Charles Kimball\" color=\"accent3\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Melissa Reed\" color=\"accent4\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Heather Wheeler\" color=\"accent5\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"David Herbert\" color=\"accent6\" />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Isaac Asimov\" color=\"accent1\" />\n  </View>\n</div>\n```\n\nThe `hasInverseColor` prop inverts the background color and the text/icon color.\n\nInverted Avatars have **no border**.\n\n```js\n---\ntype: example\n---\n<div>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n  <View display=\"block\" padding=\"small medium\" background=\"primary\">\n    <Avatar renderIcon={<IconGroupLine />} name=\"Arthur C. Clarke\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"James Arias\" color=\"accent2\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Charles Kimball\" color=\"accent3\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Melissa Reed\" color=\"accent4\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Heather Wheeler\" color=\"accent5\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"David Herbert\" color=\"accent6\" hasInverseColor />\n    <Avatar renderIcon={<IconGroupLine />} name=\"Isaac Asimov\" color=\"accent1\" hasInverseColor />\n  </View>\n</div>\n```\n\nIn case you need more control over the color, feel free to use the `themeOverride` prop, and override the default theme variables.\n\n```js\n---\ntype: example\n---\n<div>\n  <Avatar name=\"Isaac Asimov\" renderIcon={<IconGroupLine />} themeOverride={{ accent1TextColor: '#efb410' }} />\n  <Avatar name=\"Heather Wheeler\" color=\"accent5\" themeOverride={{ accent5TextColor: 'magenta' }} />\n  <Avatar name=\"Charles Kimball\" renderIcon={<IconGroupLine />} hasInverseColor themeOverride={{ textOnColor: 'lightblue', backgroundColor: 'black' }} />\n  <Avatar name=\"David Herbert\" hasInverseColor color=\"accent5\" themeOverride={{ accent5BackgroundColor: '#efb410' }} />\n</div>\n```\n\n### Display\n\nThe `display` prop controls whether the avatar is displayed as `inline` _(default)_ or `block`. This affects the CSS display property and layout behavior.\n\n```js\n---\ntype: example\n---\n<div>\n  <Text>Inline avatars: </Text>\n  <Avatar name=\"John Doe\" size=\"small\" display=\"inline\" />\n  <Avatar name=\"Jane Smith\" size=\"small\" display=\"inline\" />\n  <Text> are displayed inline with text.</Text>\n\n  <div style={{ marginTop: '1rem' }}>\n    <Text>Block avatars:</Text>\n    <Avatar name=\"John Doe\" size=\"small\" display=\"block\" />\n    <Avatar name=\"Jane Smith\" size=\"small\" display=\"block\" />\n    <Text>stack vertically.</Text>\n  </div>\n</div>\n```\n\n### Border\n\nBy default only avatars without an image have borders but you can force it to `always` or `never` show with the `showBorder` prop however you should only use it rarely in very specific occasions (e.g. displaying an avatar in the [SideNavBar](/#SideNavBar))\n\n```js\n---\ntype: example\n---\n<div>\n  <Avatar name=\"Sarah Robinson\" src={avatarSquare} showBorder=\"always\"/>\n  <Avatar name=\"Sarah Robinson\" renderIcon={<IconGroupLine />} showBorder=\"never\"/>\n</div>\n```\n\n### Priority and Behavior\n\nWhen both `src` and `renderIcon` props are provided, the **image (`src`) takes priority** and will be displayed instead of the icon. The icon will only be shown as a fallback while the image is loading or if the image fails to load.\n\n```js\n---\ntype: example\n---\n<div>\n  <Avatar\n    name=\"John Doe\"\n    src={avatarSquare}\n    renderIcon={<IconGroupLine />}\n  />\n  <Text>Image takes priority over icon</Text>\n</div>\n```\n\n### Accessibility\n\nAvatars use the `aria-hidden=\"true\"` property and therefore are hidden from screenreaders. Make sure if you are using them stand-alone it's accompanied with [ScreenReaderContent](ScreenReaderContent).\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"yes\" title=\"Do\">\n    <Figure.Item>Ensure the appropriate size is being used for its placement (in a table, stand-alone, etc…)</Figure.Item>\n    <Figure.Item>Use circle variant in Canvas</Figure.Item>\n  </Figure>\n  <Figure recommendation=\"no\" title=\"Don't\">\n    <Figure.Item>Use inline in sentence</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"Avatar","methods":[],"props":{"name":{"required":true,"tsType":{"name":"string"},"description":"The name to display. It will be automatically converted to initials."},"src":{"required":false,"tsType":{"name":"string"},"description":"URL of the image to display as the background image"},"alt":{"required":false,"tsType":{"name":"string"},"description":"Accessible label"},"size":{"required":false,"tsType":{"name":"union","raw":"| 'xx-small'\n| 'x-small'\n| 'small'\n| 'medium'\n| 'large'\n| 'x-large'\n| 'xx-large'","elements":[{"name":"literal","value":"'xx-small'"},{"name":"literal","value":"'x-small'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"},{"name":"literal","value":"'x-large'"},{"name":"literal","value":"'xx-large'"}]},"description":""},"color":{"required":false,"tsType":{"name":"union","raw":"| 'accent1'\n| 'accent2'\n| 'accent3'\n| 'accent4'\n| 'accent5'\n| 'accent6'\n| 'ai'","elements":[{"name":"literal","value":"'accent1'"},{"name":"literal","value":"'accent2'"},{"name":"literal","value":"'accent3'"},{"name":"literal","value":"'accent4'"},{"name":"literal","value":"'accent5'"},{"name":"literal","value":"'accent6'"},{"name":"literal","value":"'ai'"}]},"description":""},"hasInverseColor":{"required":false,"tsType":{"name":"boolean"},"description":"In inverse color mode the background and text/icon colors are inverted"},"showBorder":{"required":false,"tsType":{"name":"union","raw":"'auto' | 'always' | 'never'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'always'"},{"name":"literal","value":"'never'"}]},"description":"`auto` only shows a border when there is no source image. This prop can force to always or never show that border."},"shape":{"required":false,"tsType":{"name":"union","raw":"'circle' | 'rectangle'","elements":[{"name":"literal","value":"'circle'"},{"name":"literal","value":"'rectangle'"}]},"description":""},"display":{"required":false,"tsType":{"name":"union","raw":"'inline' | 'block'","elements":[{"name":"literal","value":"'inline'"},{"name":"literal","value":"'block'"}]},"description":""},"margin":{"required":false,"tsType":{"name":"Spacing"},"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`."},"onImageLoaded":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(event?: SyntheticEvent) => void","signature":{"arguments":[{"type":{"name":"SyntheticEvent"},"name":"event"}],"return":{"name":"void"}}},"description":"Callback fired when the avatar image has loaded.\n`event` can be `undefined`, if its already loaded when the page renders\n(can happen in SSR)"},"as":{"required":false,"tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"description":"The element type to render as"},"elementRef":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}},"description":"provides a reference to the underlying html root element"},"renderIcon":{"required":false,"tsType":{"name":"union","raw":"| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]},"description":"An icon, or function that returns an icon that gets displayed. If the `src` prop is provided, `src` will have priority."},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-avatar/src/Avatar/index.tsx","extension":".tsx","srcPath":"packages/ui-avatar/src/Avatar/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-avatar/src/Avatar/index.tsx","packageName":"@instructure/ui-avatar","requirePath":"@instructure/ui-avatar/lib/Avatar/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-avatar/src/Avatar/index.tsx').default","esPath":"@instructure/ui-avatar/es/Avatar/index","themePath":"packages/ui-avatar/src/Avatar/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-avatar/src/Avatar/theme.ts","id":"Avatar","title":"Avatar"}