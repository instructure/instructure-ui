{"description":"\nThe Metric component displays 'value' and 'label'. The default alignment is 'center'.\n\n```javascript\n---\ntype: example\n---\n  <Metric textAlign=\"start\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'start'.\n\n```javascript\n---\ntype: example\n---\n  <Metric renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n\nThe Metric component can be set to align 'end'.\n\n```javascript\n---\ntype: example\n---\n  <Metric textAlign=\"end\" renderLabel=\"Grade\" renderValue=\"80%\" />\n```\n","displayName":"Metric","methods":[],"props":{"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}]},"defaultValue":{"value":"'center'","computed":false}},"renderLabel":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"renderValue":{"type":{"name":"union","value":[{"name":"func"},{"name":"node"}]},"required":false,"description":"","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"isGroupChild":{"type":{"name":"bool"},"required":false,"description":"Set to true when a child of MetricGroup so the appropriate\naria labels get set","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-metric/src/Metric/index.tsx","extension":".tsx","srcPath":"packages/ui-metric/src/Metric/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/Metric/index.tsx","packageName":"@instructure/ui-metric","requirePath":"@instructure/ui-metric/lib/Metric/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-metric/src/Metric/index.tsx').default","esPath":"@instructure/ui-metric/es/Metric/index","themePath":"packages/ui-metric/src/Metric/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-metric/src/Metric/theme.ts","id":"Metric","title":"Metric"}