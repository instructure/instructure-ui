{"description":"\n`<ContextView/>` is a container that can be rendered inline in the document flow (vs as a [Popover](#Popover)) but with an arrow pointing to something. See [RangeInput](#RangeInput) for an example of how ContextView can be used to display contextual information in conjunction with another component. It is used internally in [Popover](#Popover).\n\n- Defaults to no padding around its content. To add padding, use the `padding` prop.\n\n- Use the `textAlign` prop to change the alignment of the text inside `<ContextView />`.\n\n- In use cases where `<ContextView/>` is not absolutely positioned, use the `margin` prop to set margin around the component.\n\n```js\n---\ntype: example\n---\n<div>\n  <ContextView\n    padding=\"small\"\n    margin=\"large\"\n    placement=\"end top\"\n    shadow=\"resting\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    placement=\"top\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">Some informational text that is helpful</Text>\n  </ContextView>\n  <ContextView\n    margin=\"0 large 0 0\"\n    padding=\"small\"\n    textAlign=\"end\"\n    placement=\"start\"\n  >\n    <Heading level=\"h3\">Hello World</Heading>\n    <Text size=\"small\">This ContextView is end-text-aligned</Text>\n  </ContextView>\n  <ContextView\n    placement=\"end bottom\"\n    padding=\"medium\"\n    background=\"inverse\"\n    width=\"30rem\"\n    margin=\"x-large 0 0\"\n  >\n    <Text size=\"small\">\n      This ContextView uses the inverse background and medium padding. Its width prop is set to `30rem`, which causes long strings like this to wrap. It also has top margin to separate it from the ContextViews above it.\n    </Text>\n  </ContextView>\n</div>\n```\n","displayName":"ContextView","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"The element to render as the component root","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}},"defaultValue":{"value":"() => {}","computed":false}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","tsType":{"name":"Spacing"}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","tsType":{"name":"Spacing"}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]},"defaultValue":{"value":"'auto'","computed":false}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]},"defaultValue":{"value":"'auto'","computed":false}},"maxHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"maxWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"minHeight":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"minWidth":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"children":{"type":{"name":"node"},"required":false,"description":"The children to render inside the `<ContextView />`","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"defaultValue":{"value":"null","computed":false}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment within the `<ContextView />`","tsType":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}]},"defaultValue":{"value":"'start'","computed":false}},"shadow":{"type":{"name":"custom","raw":"ThemeablePropTypes.shadow"},"required":false,"description":"Controls the shadow depth for the `<ContextView />`","tsType":{"name":"Shadow"},"defaultValue":{"value":"'resting'","computed":false}},"stacking":{"type":{"name":"custom","raw":"ThemeablePropTypes.stacking"},"required":false,"description":"Controls the z-index depth for the `<ContextView />`","tsType":{"name":"Stacking"}},"background":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'inverse'","computed":false}]},"required":false,"description":"Designates the background style of the `<ContextView />`","tsType":{"name":"union","raw":"'default' | 'inverse'","elements":[{"name":"literal","value":"'default'"},{"name":"literal","value":"'inverse'"}]},"defaultValue":{"value":"'default'","computed":false}},"placement":{"type":{"name":"custom","raw":"PositionPropTypes.placement"},"required":false,"description":"Specifies how the arrow for `<ContextView />` will be rendered.\nEx. `placement=\"top\"` will render with an arrow pointing down.","tsType":{"name":"PlacementPropValues"},"defaultValue":{"value":"'center end'","computed":false}},"debug":{"type":{"name":"bool"},"required":false,"description":"Activate an outline around the component to make building your\nlayout easier","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-view/src/ContextView/index.tsx","extension":".tsx","srcPath":"packages/ui-view/src/ContextView/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/ContextView/index.tsx","packageName":"@instructure/ui-view","requirePath":"@instructure/ui-view/lib/ContextView/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-view/src/ContextView/index.tsx').default","esPath":"@instructure/ui-view/es/ContextView/index","themePath":"packages/ui-view/src/ContextView/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-view/src/ContextView/theme.ts","id":"ContextView","title":"ContextView"}