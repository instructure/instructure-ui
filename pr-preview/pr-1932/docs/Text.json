{"description":"\nA component for styling textual content\n\n## Variant\n\nVariant takes care of - almost - all use-cases when it comes to texts on pages. Their name reflects the places they meant to be used. It sets `size`, `weight`, `fontStyle` and `lineHeight`\nWe recommend using `variants` instead of the aforementioned props.\n\nNOTE: when `variant` is set, `size`, `weight`, `fontStyle` and `lineHeight` props are ignored\n\n```js\n---\ntype: example\n---\n<div>\n  <Text variant=\"descriptionPage\"> descriptionPage </Text><br/>\n  <Text variant=\"descriptionSection\"> descriptionSection </Text><br/>\n  <Text variant=\"content\"> content </Text><br/>\n  <Text variant=\"contentImportant\"> contentImportant </Text><br/>\n  <Text variant=\"contentQuote\"> contentQuote </Text><br/>\n  <Text variant=\"contentSmall\"> contentSmall </Text><br/>\n  <Text variant=\"legend\"> legend </Text><br/>\n</div>\n```\n\n### Text colors\n\n```js\n---\ntype: example\n---\n<div>\n  <Text color=\"primary\">I&#39;m primary text</Text><br/>\n  <Text color=\"secondary\">I&#39;m secondary text</Text><br/>\n  <Text color=\"brand\">I&#39;m brand text</Text><br />\n  <Text color=\"success\">I&#39;m success text</Text><br/>\n  <Text color=\"warning\">I&#39;m warning text</Text><br />\n  <Text color=\"danger\">I&#39;m danger text</Text><br />\n  <Text color=\"ai-highlight\">I&#39;m a highlighted text (by AI)</Text><br />\n  <Text color=\"alert\">I&#39;m alert text - DEPRECATED - DO NOT USE</Text>\n</div>\n```\n\n### Font sizes\n\n```js\n---\ntype: example\n---\n<div>\n  <Text size='descriptionPage'>descriptionPage</Text><br/>\n  <Text size='descriptionSection'>descriptionSection</Text><br/>\n  <Text size='content'>content</Text><br/>\n  <Text size='contentSmall'>contentSmall</Text><br/>\n  <Text size='legend'>legend</Text>\n</div>\n```\n\n### Font weights\n\n```js\n---\ntype: example\n---\n<div>\n  <Text weight=\"weightRegular\">weightRegular</Text><br/>\n  <Text weight=\"weightImportant\">weightImportant</Text>\n</div>\n```\n\n### Font styles\n\n```js\n---\ntype: example\n---\n<div>\n  <Text fontStyle=\"italic\">I&#39;m italic text</Text><br/>\n  <Text>I&#39;m normal text</Text>\n</div>\n```\n\n### Line heights\n\n```js\n---\ntype: example\n---\n<div>\n  <br/><br/>\n  <Text lineHeight=\"lineHeight100\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"lineHeight125\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n  <Text lineHeight=\"lineHeight150\">\n    <p>{lorem.paragraph()}</p>\n  </Text>\n</div>\n```\n\n### Text transform\n\n```js\n---\ntype: example\n---\n<div>\n  <Text transform=\"capitalize\">I&#39;m capitalized text</Text><br/>\n  <Text transform=\"uppercase\">I&#39;m uppercase text</Text><br/>\n  <Text transform=\"lowercase\">I&#39;M LOWERCASE TEXT</Text><br/>\n</div>\n```\n\n### Letter-spacing\n\n```js\n---\ntype: example\n---\n<div>\n  <Text letterSpacing=\"normal\">I&#39;m normal text</Text><br/>\n  <Text letterSpacing=\"condensed\">I&#39;m condensed text</Text><br/>\n  <Text letterSpacing=\"expanded\" transform=\"uppercase\">I&#39;m expanded uppercase text</Text><br/>\n</div>\n```\n\n### Wrap\n\nUse `wrap=\"break-word\"` to force breaking in long strings that would otherwise\nexceed the bounds of their containers.\n\n```js\n---\ntype: example\n---\n<div>\n  <View as=\"div\" maxWidth=\"300px\" margin=\"none none small\" debug>\n    <Text>\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n  <View as=\"div\" maxWidth=\"300px\" debug>\n    <Text wrap=\"break-word\">\n      superlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstringsuperlongstring\n    </Text>\n  </View>\n</div>\n```\n\n```js\n---\ntype: example\n---\n<View background=\"primary-inverse\" as=\"div\">\n    <Text color=\"primary-inverse\">I&#39;m primary text</Text><br/>\n    <Text color=\"secondary-inverse\">I&#39;m secondary text</Text>\n</View>\n```\n\n### Element styles\n\n```js\n---\ntype: example\n---\n<Text>\n  <b>bold </b>\n  <strong>strong </strong>\n  <i>italic </i>\n  <em>emphasis </em>\n  <pre>preformatted</pre>\n  <code>code</code>\n  This<sup>is</sup> some<sub>text</sub>.\n</Text>\n```\n\n### DEPRECATED legacy values\n\nMultiple values from `size`, `weight` and `lineHeight` are deprecated, but still supported for backward compatibility reasons. Please only use the above listed, semantic values.\n\nDeprecated `size` values:\n\n- x-small\n- small\n- medium\n- large\n- x-large\n- xx-large\n\nDeprecated `weight` values:\n\n- normal\n- light\n- bold\n\nDeprecated `lineHeight` values:\n\n- default\n- fit\n- condensed\n- double\n","displayName":"Text","methods":[],"props":{"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'span'","computed":false}},"children":{"type":{"name":"node"},"required":false,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"defaultValue":{"value":"null","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'brand'","computed":false},{"value":"'success'","computed":false},{"value":"'danger'","computed":false},{"value":"'warning'","computed":false},{"value":"'alert'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false},{"value":"'ai-highlight'","computed":false}]},"required":false,"description":"Color of the text","tsType":{"name":"union","raw":"| 'primary'\n| 'secondary'\n| 'brand'\n| 'success'\n| 'danger'\n| 'alert'\n| 'warning'\n| 'primary-inverse'\n| 'secondary-inverse'\n| 'ai-highlight'","elements":[{"name":"literal","value":"'primary'"},{"name":"literal","value":"'secondary'"},{"name":"literal","value":"'brand'"},{"name":"literal","value":"'success'"},{"name":"literal","value":"'danger'"},{"name":"literal","value":"'alert'"},{"name":"literal","value":"'warning'"},{"name":"literal","value":"'primary-inverse'"},{"name":"literal","value":"'secondary-inverse'"},{"name":"literal","value":"'ai-highlight'"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a reference to the underlying HTML element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"fontStyle":{"type":{"name":"enum","value":[{"value":"'italic'","computed":false},{"value":"'normal'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'italic' | 'normal'","elements":[{"name":"literal","value":"'italic'"},{"name":"literal","value":"'normal'"}]}},"letterSpacing":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'condensed'","computed":false},{"value":"'expanded'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'condensed' | 'expanded'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'condensed'"},{"name":"literal","value":"'expanded'"}]},"defaultValue":{"value":"'normal'","computed":false}},"lineHeight":{"type":{"name":"enum","value":[{"value":"'default'","computed":false},{"value":"'fit'","computed":false},{"value":"'condensed'","computed":false},{"value":"'double'","computed":false},{"value":"'lineHeight100'","computed":false},{"value":"'lineHeight125'","computed":false},{"value":"'lineHeight150'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"| 'default'\n| 'fit'\n| 'condensed'\n| 'double'\n| 'lineHeight100'\n| 'lineHeight125'\n| 'lineHeight150'","elements":[{"name":"literal","value":"'default'"},{"name":"literal","value":"'fit'"},{"name":"literal","value":"'condensed'"},{"name":"literal","value":"'double'"},{"name":"literal","value":"'lineHeight100'"},{"name":"literal","value":"'lineHeight125'"},{"name":"literal","value":"'lineHeight150'"}]}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false},{"value":"'xx-large'","computed":false},{"value":"'descriptionPage'","computed":false},{"value":"'descriptionSection'","computed":false},{"value":"'content'","computed":false},{"value":"'contentSmall'","computed":false},{"value":"'legend'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"| 'x-small'\n| 'small'\n| 'medium'\n| 'large'\n| 'x-large'\n| 'xx-large'\n| 'descriptionPage'\n| 'descriptionSection'\n| 'content'\n| 'contentSmall'\n| 'legend'","elements":[{"name":"literal","value":"'x-small'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"},{"name":"literal","value":"'x-large'"},{"name":"literal","value":"'xx-large'"},{"name":"literal","value":"'descriptionPage'"},{"name":"literal","value":"'descriptionSection'"},{"name":"literal","value":"'content'"},{"name":"literal","value":"'contentSmall'"},{"name":"literal","value":"'legend'"}]},"defaultValue":{"value":"'medium'","computed":false}},"transform":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'capitalize'","computed":false},{"value":"'uppercase'","computed":false},{"value":"'lowercase'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'none' | 'capitalize' | 'uppercase' | 'lowercase'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'capitalize'"},{"name":"literal","value":"'uppercase'"},{"name":"literal","value":"'lowercase'"}]}},"variant":{"type":{"name":"enum","value":[{"value":"'descriptionPage'","computed":false},{"value":"'descriptionSection'","computed":false},{"value":"'content'","computed":false},{"value":"'contentImportant'","computed":false},{"value":"'contentQuote'","computed":false},{"value":"'contentSmall'","computed":false},{"value":"'legend'","computed":false}]},"required":false,"description":"Sets multiple props at once. (size, fontStyle, lineHeight, weight)\nIf set, these props are not allowed.\nNOTE: this is the recommended way of setting these values","tsType":{"name":"union","raw":"| 'descriptionPage'\n| 'descriptionSection'\n| 'content'\n| 'contentImportant'\n| 'contentQuote'\n| 'contentSmall'\n| 'legend'","elements":[{"name":"literal","value":"'descriptionPage'"},{"name":"literal","value":"'descriptionSection'"},{"name":"literal","value":"'content'"},{"name":"literal","value":"'contentImportant'"},{"name":"literal","value":"'contentQuote'"},{"name":"literal","value":"'contentSmall'"},{"name":"literal","value":"'legend'"}]}},"weight":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'light'","computed":false},{"value":"'bold'","computed":false},{"value":"'weightRegular'","computed":false},{"value":"'weightImportant'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'light' | 'bold' | 'weightRegular' | 'weightImportant'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'light'"},{"name":"literal","value":"'bold'"},{"name":"literal","value":"'weightRegular'"},{"name":"literal","value":"'weightImportant'"}]}},"wrap":{"type":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'break-word'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'normal' | 'break-word'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'break-word'"}]},"defaultValue":{"value":"'normal'","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-text/src/Text/index.tsx","extension":".tsx","srcPath":"packages/ui-text/src/Text/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/index.tsx","packageName":"@instructure/ui-text","requirePath":"@instructure/ui-text/lib/Text/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-text/src/Text/index.tsx').default","esPath":"@instructure/ui-text/es/Text/index","themePath":"packages/ui-text/src/Text/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-text/src/Text/theme.ts","id":"Text","title":"Text"}