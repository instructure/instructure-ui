{"name":"registerTheme","description":"Registers the passed theme into the ThemeRegistry.","params":[{"name":"theme","type":"T","optional":false,"description":"- the theme object to register into the ThemeRegistry"}],"genericParameters":[{"name":"T","constraint":"BaseTheme"}],"returns":{"description":"If the given theme is already in the ThemeRegistry then simply return that theme.\nOtherwise, returns the theme with a wrapper around it, so it can be `.use()`-ed to activate the given theme from the registry.\nThis function also adds a `variables` prop for backwards compatibility (deprecated).","type":"RegisteredTheme<T>"},"relativePath":"packages/theme-registry/src/ThemeRegistry.ts","extension":".ts","srcPath":"packages/theme-registry/src/ThemeRegistry.ts","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/theme-registry/src/ThemeRegistry.ts","packageName":"@instructure/theme-registry","requirePath":"@instructure/theme-registry/lib/ThemeRegistry","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/theme-registry/src/ThemeRegistry.ts').default","esPath":"@instructure/theme-registry/es/ThemeRegistry","themePath":"packages/theme-registry/src/ThemeRegistry.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/theme-registry/src/ThemeRegistry.ts","id":"ThemeRegistry","title":"ThemeRegistry"}