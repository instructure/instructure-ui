{"description":"\nAn accessible image component\n\n```js\n---\ntype: example\n---\n<Img src={placeholderImage(250, 250)} />\n```\n\n### Margin and display\n\nUse the `margin` prop to add space around `<Img />`. Setting the `display` prop to `block` makes\nthe image a block-level element.\n\n```js\n---\ntype: example\n---\n<View textAlign=\"center\" as=\"div\">\n  <Img margin=\"small\" alt=\"A placeholder image\" src={placeholderImage(300, 200)} />\n  <Img margin=\"small\" src={placeholderImage(200, 200)} />\n  <Img display=\"block\" margin=\"small auto\" src={placeholderImage(400, 200)} />\n</View>\n```\n\n### Color overlay\n\nThe `overlay` prop accepts parameters for `color`, `opacity`, and `blend`.\n\n```js\n---\ntype: example\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#0374B5', opacity: 9, blend: 'overlay'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#0374B5', opacity: 6, blend: 'multiply'}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      src={placeholderImage(200, 200)}\n      overlay={{color: '#0374B5', opacity: 3}}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Cover\n\nWhen the `constrain` prop is set to `cover` the image fills the _full_ width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\ntype: example\n---\n<div style={{width: '66%', height: '11rem'}}>\n  <Img src={avatarSquare} constrain=\"cover\" />\n</div>\n```\n\n### Contain\n\nWhen the `constrain` prop is set to `contain` the image fits within the width and height of its\ncontaining element, while maintaining the aspect ratio of the source image.\n\n```js\n---\ntype: example\n---\n<View as=\"div\" background=\"primary-inverse\" width=\"200px\" height=\"200px\" textAlign=\"center\">\n  <Img src={avatarPortrait} constrain=\"contain\" />\n</View>\n```\n\n### Grayscale and blur filters\n\nPlease note: these should only be used for presentational effects.\n\n```js\n---\ntype: example\n---\n  <View textAlign=\"center\" as=\"div\">\n    <Img\n      withGrayscale\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n    <Img\n      withBlur\n      src={avatarSquare}\n      alt=\"A placeholder image\"\n      margin=\"x-small\"\n    />\n  </View>\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Contextual images must have alternative text that describes the information or function represented by them</Figure.Item>\n    <Figure.Item>Decorative images that do not present important content, are used for layout or non-informative purposes, and do not appear within a link do not need to be presented to screen readers.  Decorative and spacer images should have null alternative text (alt=\"\")</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"Img","methods":[],"props":{"src":{"type":{"name":"string"},"required":true,"description":"","tsType":{"name":"string"}},"alt":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"},"defaultValue":{"value":"''","computed":false}},"display":{"type":{"name":"enum","value":[{"value":"'inline-block'","computed":false},{"value":"'block'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'inline-block' | 'block'","elements":[{"name":"literal","value":"'inline-block'"},{"name":"literal","value":"'block'"}]},"defaultValue":{"value":"'inline-block'","computed":false}},"loading":{"type":{"name":"enum","value":[{"value":"'eager'","computed":false},{"value":"'lazy'","computed":false}]},"required":false,"description":"Gets passed down to  the img component. Same as the native HTML img's loading attribute","tsType":{"name":"union","raw":"'eager' | 'lazy'","elements":[{"name":"literal","value":"'eager'"},{"name":"literal","value":"'lazy'"}]}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","tsType":{"name":"Spacing"}},"overlay":{"type":{"name":"shape","value":{"color":{"name":"string","required":true},"opacity":{"name":"enum","value":[{"value":"0","computed":false},{"value":"1","computed":false},{"value":"2","computed":false},{"value":"3","computed":false},{"value":"4","computed":false},{"value":"5","computed":false},{"value":"6","computed":false},{"value":"7","computed":false},{"value":"8","computed":false},{"value":"9","computed":false},{"value":"10","computed":false}],"required":true},"blend":{"name":"enum","value":[{"value":"'normal'","computed":false},{"value":"'multiply'","computed":false},{"value":"'screen'","computed":false},{"value":"'overlay'","computed":false},{"value":"'color-burn'","computed":false}],"required":false}}},"required":false,"description":"Valid values for `opacity` are `0` - `10`. Valid values for `blend` are\n`normal` (default), `multiply`, `screen`, `overlay`, and `color-burn`.","tsType":{"name":"signature","type":"object","raw":"{\n  color: string\n  opacity: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n  blend?: 'normal' | 'multiply' | 'screen' | 'overlay' | 'color-burn'\n}","signature":{"properties":[{"key":"color","value":{"name":"string","required":true}},{"key":"opacity","value":{"name":"union","raw":"0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10","elements":[{"name":"literal","value":"0"},{"name":"literal","value":"1"},{"name":"literal","value":"2"},{"name":"literal","value":"3"},{"name":"literal","value":"4"},{"name":"literal","value":"5"},{"name":"literal","value":"6"},{"name":"literal","value":"7"},{"name":"literal","value":"8"},{"name":"literal","value":"9"},{"name":"literal","value":"10"}],"required":true}},{"key":"blend","value":{"name":"union","raw":"'normal' | 'multiply' | 'screen' | 'overlay' | 'color-burn'","elements":[{"name":"literal","value":"'normal'"},{"name":"literal","value":"'multiply'"},{"name":"literal","value":"'screen'"},{"name":"literal","value":"'overlay'"},{"name":"literal","value":"'color-burn'"}],"required":false}}]}}},"withGrayscale":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"withBlur":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"constrain":{"type":{"name":"enum","value":[{"value":"'cover'","computed":false},{"value":"'contain'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'cover' | 'contain'","elements":[{"name":"literal","value":"'cover'"},{"name":"literal","value":"'contain'"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-img/src/Img/index.tsx","extension":".tsx","srcPath":"packages/ui-img/src/Img/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-img/src/Img/index.tsx","packageName":"@instructure/ui-img","requirePath":"@instructure/ui-img/lib/Img/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-img/src/Img/index.tsx').default","esPath":"@instructure/ui-img/es/Img/index","themePath":"packages/ui-img/src/Img/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-img/src/Img/theme.ts","id":"Img","title":"Img"}