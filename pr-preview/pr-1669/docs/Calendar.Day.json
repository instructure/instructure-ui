{"description":"","displayName":"Day","methods":[],"props":{"children":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The rendered representation of the corresponding date.","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"date":{"type":{"name":"custom","raw":"I18nPropTypes.iso8601.isRequired"},"required":true,"description":"An ISO 8601 formatted string representing the date corresponding to\nthis `<Calendar.Day />`","tsType":{"name":"string"}},"label":{"type":{"name":"string"},"required":true,"description":"Accessible label to provide more context for the date to assistive\ntechnologies. This should consist of more than just a numerical date value.\nIt should also include the month and the year. Ex. instead of just `1`,\nprovide `1 August 2019`.","tsType":{"name":"string"}},"interaction":{"type":{"name":"enum","value":[{"value":"'enabled'","computed":false},{"value":"'disabled'","computed":false}]},"required":false,"description":"Is the `<Calendar.Day />` disabled","tsType":{"name":"union","raw":"'enabled' | 'disabled'","elements":[{"name":"literal","value":"'enabled'"},{"name":"literal","value":"'disabled'"}]},"defaultValue":{"value":"'enabled'","computed":false}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` selected","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"isToday":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` today","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"isOutsideMonth":{"type":{"name":"bool"},"required":false,"description":"Is the `<Calendar.Day />` located outside the current rendered month","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"Callback fired on click.\n@param {Object} event - the click event\n@param {Object} data - additional data\n@param data.date - the date of the corresponding `<Calendar.Day />`","tsType":{"name":"signature","type":"function","raw":"(\n  event: MouseEvent<ViewProps & Element>,\n  date: { date: string }\n) => void","signature":{"arguments":[{"type":{"name":"MouseEvent","elements":[{"name":"intersection","raw":"ViewProps & Element","elements":[{"name":"ViewProps"},{"name":"Element"}]}],"raw":"MouseEvent<ViewProps & Element>"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{ date: string }","signature":{"properties":[{"key":"date","value":{"name":"string","required":true}}]}},"name":"date"}],"return":{"name":"void"}}}},"onKeyDown":{"type":{"name":"func"},"required":false,"description":"Callback fired on key down.\n@param {Object} event - the key down event\n@param {Object} data - additional data\n@param data.date - the date of the corresponding `<Calendar.Day />`","tsType":{"name":"signature","type":"function","raw":"(\n  event: KeyboardEvent<ViewProps & Element>,\n  data: { date: string }\n) => void","signature":{"arguments":[{"type":{"name":"KeyboardEvent","elements":[{"name":"intersection","raw":"ViewProps & Element","elements":[{"name":"ViewProps"},{"name":"Element"}]}],"raw":"KeyboardEvent<ViewProps & Element>"},"name":"event"},{"type":{"name":"signature","type":"object","raw":"{ date: string }","signature":{"properties":[{"key":"date","value":{"name":"string","required":true}}]}},"name":"data"}],"return":{"name":"void"}}}},"elementRef":{"type":{"name":"func"},"required":false,"description":"A ref function for the underlying DOM element.","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"Calendar","id":"Calendar.Day","relativePath":"packages/ui-calendar/src/Calendar/Day/index.tsx","extension":".tsx","srcPath":"packages/ui-calendar/src/Calendar/Day/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/src/Calendar/Day/index.tsx","packageName":"@instructure/ui-calendar","requirePath":"@instructure/ui-calendar/lib/Calendar/Day/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-calendar/src/Calendar/Day/index.tsx').default","esPath":"@instructure/ui-calendar/es/Calendar/Day/index","themePath":"packages/ui-calendar/src/Calendar/Day/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-calendar/src/Calendar/Day/theme.ts","title":"Calendar.Day"}