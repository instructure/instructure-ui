{"description":"\nSVGIcon renders an accessible SVG icon inline in the HTML document.\n\nIn this example `iconExample` is the SVG source loaded as a string. You can use a webpack\nloader like [svg-inline-loader](https://github.com/webpack-contrib/svg-inline-loader) to import\nthe SVG source into your react component.\n\nThe SVGIcon component will add title and description elements for you if you set the `title`\nand `description` props. See the [InlineSVG](#InlineSVG) component for more props and\nexamples.\n\n_A11y note:_ By default the role is set to `presentation`. However, when the `title` prop is set, the `role`\nattribute is set to `img`. Include the `description` prop to further describe the image.\n\n### Default icon size\n\nBy default SVGIcon is set to a size of `1em`, so it will scale to match the `font-size` of\nits parent element.\n\n```js\n---\ntype: example\n---\n<div>\n  <div>I <SVGIcon src={iconExample} title=\"love\" /> New York!</div>\n  <Heading>I <SVGIcon src={iconExample} title=\"love\" /> New York!</Heading>\n</div>\n```\n\n### Changing icon size\n\nTo change the size of the icon, use one of the predefined options for the `size` prop.\n\n```js\n---\ntype: example\n---\n<div>\n  <SVGIcon src={iconExample} size=\"x-small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"small\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"medium\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon src={iconExample} size=\"x-large\" title=\"Icon Example\" />\n</div>\n```\n\nIf you need a size that is not offered via the `size` prop, adjust the\n`font-size` on the icon's parent element.\n\n```js\n---\ntype: example\n---\n<div style={{fontSize: '15rem', lineHeight: 1}}>\n  <SVGIcon src={iconExample} title=\"Icon Example\" />\n</div>\n```\n\n### Changing icon color\n\nBy default SVGIcon inherits the color of its parent element. However,\n[InlineSVG](#InlineSVG), the child component of SVGIcon, supports setting\nthe icon to one of the theme colors via the `color` property.\n\n> Setting `color` to `auto` will make SVGIcon not set\n> any color fill. If you are setting the icon color via the `className` prop,\n> use this option &#151; otherwise the `color` value set by your class\n> could be overwritten.\n\n```js\n---\ntype: example\n---\n<div>\n  <SVGIcon color=\"primary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"secondary\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"brand\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"success\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"warning\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"error\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n  <SVGIcon color=\"alert\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</div>\n```\n\n```js\n---\ntype: example\n---\n<View background=\"primary-inverse\" as=\"div\">\n    <SVGIcon color=\"primary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n    <SVGIcon color=\"secondary-inverse\" src={iconExample} size=\"large\" title=\"Icon Example\" />\n</View>\n```\n\n### Changing icon rotation\n\nSVGIcon can be rotated by adding a `rotate` prop of 0 (default), 90, 180, or 270.\n\n```js\n---\ntype: example\n---\n<SVGIcon src={iconExample} size=\"medium\" rotate=\"90\" />\n```\n\n### Changing the icon's display property\n\nSVGIcon defaults to displaying `inline-block`, which can result in some space\nappearing beneath the icon, as it will inherit its parent's `line-height`.\nIn situations where this is undesirable, you can set `inline` to `false` to make\nthe icon display as a block-level element.\n\n```js\n---\ntype: example\n---\n<SVGIcon src={iconExample} size=\"medium\" inline={false} />\n```\n\n### Children\n\nThe SVGIcon component also accepts SVG content as jsx via the children prop. Note: if passing the path via the children prop, do not forget to include the **viewBox** attribute (see example).\n\n```js\n---\ntype: example\n---\n<SVGIcon size=\"small\" viewBox=\"0 0 2000 2000\">\n  <path d=\"M1692.48 910.647l-732.762 687.36-731.182-685.779c-154.616-156.875-154.616-412.122 0-568.997 74.542-75.558 173.704-117.233 279.304-117.233h.113c105.487 0 204.65 41.675 279.078 117.233l.113.113c74.767 75.783 116.103 176.865 116.103 284.385h112.941c0-107.52 41.224-208.602 116.104-284.498 74.428-75.558 173.59-117.233 279.19-117.233h.113c105.487 0 204.763 41.675 279.19 117.233 154.617 156.875 154.617 412.122 1.695 567.416m78.833-646.701c-95.887-97.355-223.737-150.89-359.718-150.89h-.113c-136.094 0-263.83 53.535-359.604 150.777-37.61 38.061-68.443 80.979-92.16 127.398-23.718-46.42-54.664-89.337-92.16-127.285-95.774-97.355-223.51-150.89-359.605-150.89h-.113c-135.981 0-263.83 53.535-359.83 150.89-197.648 200.696-197.648 526.983 1.694 729.035l810.014 759.868L1771.313 991.4c197.647-200.47 197.647-526.758 0-727.454\" stroke=\"none\" strokeWidth=\"1\" fillRule=\"evenodd\"/>\n</SVGIcon>\n```\n","displayName":"SVGIcon","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"src":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"}},"title":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"}},"description":{"type":{"name":"string"},"required":false,"description":"","tsType":{"name":"string"}},"focusable":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"}},"width":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"To let the SVG expand to fill its container, use \"`auto`\"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"height":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"To let the SVG expand to fill its container, use \"`auto`\"","tsType":{"name":"union","raw":"string | number","elements":[{"name":"string"},{"name":"number"}]}},"inline":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"}},"color":{"type":{"name":"enum","value":[{"value":"'inherit'","computed":false},{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false},{"value":"'success'","computed":false},{"value":"'error'","computed":false},{"value":"'alert'","computed":false},{"value":"'warning'","computed":false},{"value":"'brand'","computed":false},{"value":"'auto'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"| 'inherit'\n| 'primary'\n| 'secondary'\n| 'primary-inverse'\n| 'secondary-inverse'\n| 'success'\n| 'error'\n| 'alert'\n| 'warning'\n| 'brand'\n| 'auto'","elements":[{"name":"literal","value":"'inherit'"},{"name":"literal","value":"'primary'"},{"name":"literal","value":"'secondary'"},{"name":"literal","value":"'primary-inverse'"},{"name":"literal","value":"'secondary-inverse'"},{"name":"literal","value":"'success'"},{"name":"literal","value":"'error'"},{"name":"literal","value":"'alert'"},{"name":"literal","value":"'warning'"},{"name":"literal","value":"'brand'"},{"name":"literal","value":"'auto'"}]}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"rotate":{"type":{"name":"enum","value":[{"value":"'0'","computed":false},{"value":"'90'","computed":false},{"value":"'180'","computed":false},{"value":"'270'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'0' | '90' | '180' | '270'","elements":[{"name":"literal","value":"'0'"},{"name":"literal","value":"'90'"},{"name":"literal","value":"'180'"},{"name":"literal","value":"'270'"}]},"defaultValue":{"value":"'0'","computed":false}},"size":{"type":{"name":"enum","value":[{"value":"'x-small'","computed":false},{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false},{"value":"'x-large'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'x-small' | 'small' | 'medium' | 'large' | 'x-large'","elements":[{"name":"literal","value":"'x-small'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"},{"name":"literal","value":"'x-large'"}]}},"bidirectional":{"type":{"name":"bool"},"required":false,"description":"","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components/utilities","relativePath":"packages/ui-svg-images/src/SVGIcon/index.tsx","extension":".tsx","srcPath":"packages/ui-svg-images/src/SVGIcon/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/SVGIcon/index.tsx","packageName":"@instructure/ui-svg-images","requirePath":"@instructure/ui-svg-images/lib/SVGIcon/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-svg-images/src/SVGIcon/index.tsx').default","esPath":"@instructure/ui-svg-images/es/SVGIcon/index","themePath":"packages/ui-svg-images/src/SVGIcon/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-svg-images/src/SVGIcon/theme.ts","id":"SVGIcon","title":"SVGIcon"}