{"description":"\nHeading is a component for creating typographic headings.\n\n```js\n---\ntype: example\n---\n<Heading>Default Heading</Heading>\n```\n\n### Heading level\n\nGenerate content headings, from h1 to h5. Use the `margin` prop to add margin.\n\n- The `as` prop controls what html element is output. _(if not defined it will default to level)._\n- The `level` prop sets its appearance.\n\n```js\n---\ntype: example\n---\n<div>\n  <Heading level=\"h1\" as=\"h2\" margin=\"0 0 x-small\">Heading level One</Heading>\n  <Heading level=\"h2\" as=\"h1\" margin=\"0 0 x-small\">Heading level Two</Heading>\n  <Heading level=\"h3\" margin=\"0 0 x-small\">Heading level Three</Heading>\n  <Heading level=\"h4\" margin=\"0 0 x-small\">Heading level Four</Heading>\n  <Heading level=\"h5\" margin=\"0 0 x-small\">Heading level Five</Heading>\n  <Heading level=\"reset\" as=\"h2\">Heading level reset as a Two</Heading>\n</div>\n```\n\n### Heading colors\n\nThe default is for the color to inherit, but it can be set to `primary` or `secondary` via the `color` prop. Note there is an inverse option available as well: `primary-inverse` or `secondary-inverse` (_see inverse example below_).\n\n```js\n---\ntype: example\n---\n<div>\n  <Heading>I inherit my color via the CSS cascade (default)</Heading>\n  <Heading color=\"primary\">I am primary color</Heading>\n  <Heading color=\"secondary\">I am secondary color</Heading>\n</div>\n```\n\n```js\n---\ntype: example\n---\n<View background=\"primary-inverse\" as=\"div\">\n  <Heading color=\"primary-inverse\">I am primary-inverse color</Heading>\n  <Heading color=\"secondary-inverse\">I am secondary-inverse color</Heading>\n</View>\n```\n\n### Heading borders\n\nThe default is no borders. However, using the `border` prop, you can\nadd either `top` or `bottom` borders to your heading.\n\n```js\n---\ntype: example\n---\n<div>\n  <Heading margin=\"0 0 medium\" border=\"bottom\">I have a bottom border</Heading>\n  <Heading border=\"top\">I have a top border</Heading>\n</div>\n```\n\n### Ellipsis text overflow\n\nUse [TruncateText](#TruncateText) if you need to constrain your\nHeading to a single line (or certain number of lines).\n\n```js\n---\ntype: example\n---\n<Heading level=\"h2\">\n  <TruncateText>{lorem.paragraph()}</TruncateText>\n</Heading>\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Each page should always contain one and only one H1</Figure.Item>\n    <Figure.Item>Headings should be used in logical order</Figure.Item>\n    <Figure.Item>Headings should not be used to format text</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"Heading","methods":[],"props":{"border":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'top'","computed":false},{"value":"'bottom'","computed":false}]},"required":false,"description":"Add a top- or bottom-border to the Heading","tsType":{"name":"union","raw":"'none' | 'top' | 'bottom'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'top'"},{"name":"literal","value":"'bottom'"}]},"defaultValue":{"value":"'none'","computed":false}},"children":{"type":{"name":"custom","raw":"import { childrenOrValue } from '@instructure/ui-prop-types'"},"required":false,"description":"The text content of the Heading","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"defaultValue":{"value":"null","computed":false}},"color":{"type":{"name":"enum","value":[{"value":"'primary'","computed":false},{"value":"'secondary'","computed":false},{"value":"'primary-inverse'","computed":false},{"value":"'secondary-inverse'","computed":false},{"value":"'inherit'","computed":false}]},"required":false,"description":"The font color to render","tsType":{"name":"union","raw":"| 'primary'\n| 'secondary'\n| 'primary-inverse'\n| 'secondary-inverse'\n| 'inherit'","elements":[{"name":"literal","value":"'primary'"},{"name":"literal","value":"'secondary'"},{"name":"literal","value":"'primary-inverse'"},{"name":"literal","value":"'secondary-inverse'"},{"name":"literal","value":"'inherit'"}]},"defaultValue":{"value":"'inherit'","computed":false}},"level":{"type":{"name":"enum","value":[{"value":"'h1'","computed":false},{"value":"'h2'","computed":false},{"value":"'h3'","computed":false},{"value":"'h4'","computed":false},{"value":"'h5'","computed":false},{"value":"'reset'","computed":false}]},"required":false,"description":"The *visual* appearance of the Heading: h1 is largest; h5 is smallest.","tsType":{"name":"union","raw":"HeadingLevel<'h1' | 'h2' | 'h3' | 'h4' | 'h5'> | 'reset'","elements":[{"name":"union","raw":"'h1' | 'h2' | 'h3' | 'h4' | 'h5'","elements":[{"name":"literal","value":"'h1'"},{"name":"literal","value":"'h2'"},{"name":"literal","value":"'h3'"},{"name":"literal","value":"'h4'"},{"name":"literal","value":"'h5'"}]},{"name":"literal","value":"'reset'"}]},"defaultValue":{"value":"'h2'","computed":false}},"as":{"type":{"name":"elementType"},"required":false,"description":"Choose the element Heading should render as. Will default to the `level` prop\nif not specified.","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","tsType":{"name":"Spacing"}},"elementRef":{"type":{"name":"func"},"required":false,"description":"Provides a ref to the underlying HTML element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-heading/src/Heading/index.tsx","extension":".tsx","srcPath":"packages/ui-heading/src/Heading/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-heading/src/Heading/index.tsx","packageName":"@instructure/ui-heading","requirePath":"@instructure/ui-heading/lib/Heading/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-heading/src/Heading/index.tsx').default","esPath":"@instructure/ui-heading/es/Heading/index","themePath":"packages/ui-heading/src/Heading/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-heading/src/Heading/theme.ts","id":"Heading","title":"Heading"}