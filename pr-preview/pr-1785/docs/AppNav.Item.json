{"description":"@module Item","displayName":"Item","methods":[],"props":{"renderLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"string"},{"name":"func"}]},"required":true,"description":"The text to display. If the `icon` prop is used, label text must be wrapped\nin `ScreenReaderContent`.","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"renderAfter":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"Content to display after the renderLabel text, such as a badge","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"renderIcon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The visual to display (ex. an Image, Logo, Avatar, or Icon)","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]}},"href":{"type":{"name":"string"},"required":false,"description":"If the item goes to a new page, pass an href","tsType":{"name":"string"}},"onClick":{"type":{"name":"func"},"required":false,"description":"If the item does not go to a new page, pass an onClick","tsType":{"name":"signature","type":"function","raw":"(event: React.MouseEvent) => void","signature":{"arguments":[{"type":{"name":"ReactMouseEvent","raw":"React.MouseEvent"},"name":"event"}],"return":{"name":"void"}}}},"isSelected":{"type":{"name":"bool"},"required":false,"description":"Denotes which item is currently selected","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying focusable (`button` or `a`) element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"as":{"type":{"name":"elementType"},"required":false,"description":"The element type to render as (will default to `<a>` if href is provided)","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]}},"cursor":{"type":{"name":"string"},"required":false,"description":"Specify the mouse cursor to use on :hover.\nThe `pointer` cursor is used by default.","tsType":{"name":"Cursor"},"defaultValue":{"value":"'pointer'","computed":false}},"isDisabled":{"type":{"name":"bool"},"required":false,"description":"Disables the link or button visually and functionally","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""},"children":{"defaultValue":{"value":"null","computed":false},"required":false}},"parent":"AppNav","id":"AppNav.Item","relativePath":"packages/ui-navigation/src/AppNav/Item/index.tsx","extension":".tsx","srcPath":"packages/ui-navigation/src/AppNav/Item/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/AppNav/Item/index.tsx","packageName":"@instructure/ui-navigation","requirePath":"@instructure/ui-navigation/lib/AppNav/Item/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-navigation/src/AppNav/Item/index.tsx').default","esPath":"@instructure/ui-navigation/es/AppNav/Item/index","themePath":"packages/ui-navigation/src/AppNav/Item/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-navigation/src/AppNav/Item/theme.ts","title":"AppNav.Item"}