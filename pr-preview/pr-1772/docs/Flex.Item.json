{"description":"","displayName":"Item","methods":[],"props":{"children":{"type":{"name":"node"},"required":false,"description":"The children to render inside the Item","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"margin":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","tsType":{"name":"Spacing"}},"padding":{"type":{"name":"custom","raw":"ThemeablePropTypes.spacing"},"required":false,"description":"Valid values are `0`, `none`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `padding=\"small x-large large\"`.","tsType":{"name":"Spacing"}},"align":{"type":{"name":"enum","value":[{"value":"'center'","computed":false},{"value":"'start'","computed":false},{"value":"'end'","computed":false},{"value":"'stretch'","computed":false}]},"required":false,"description":"overrides the parent Flex's alignItems prop, if needed","tsType":{"name":"union","raw":"'center' | 'start' | 'end' | 'stretch'","elements":[{"name":"literal","value":"'center'"},{"name":"literal","value":"'start'"},{"name":"literal","value":"'end'"},{"name":"literal","value":"'stretch'"}]}},"direction":{"type":{"name":"enum","value":[{"value":"'row'","computed":false},{"value":"'column'","computed":false}]},"required":false,"description":"Inherits from the parent Flex component","tsType":{"name":"union","raw":"'row' | 'column'","elements":[{"name":"literal","value":"'row'"},{"name":"literal","value":"'column'"}]}},"textAlign":{"type":{"name":"enum","value":[{"value":"'start'","computed":false},{"value":"'center'","computed":false},{"value":"'end'","computed":false}]},"required":false,"description":"Designates the text alignment inside the Item","tsType":{"name":"union","raw":"'start' | 'center' | 'end'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'center'"},{"name":"literal","value":"'end'"}]}},"overflowX":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"Handles horizontal overflow","tsType":{"name":"union","raw":"'auto' | 'hidden' | 'visible'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'hidden'"},{"name":"literal","value":"'visible'"}]}},"overflowY":{"type":{"name":"enum","value":[{"value":"'auto'","computed":false},{"value":"'hidden'","computed":false},{"value":"'visible'","computed":false}]},"required":false,"description":"Handles vertical overflow","tsType":{"name":"union","raw":"'auto' | 'hidden' | 'visible'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'hidden'"},{"name":"literal","value":"'visible'"}]}},"shouldGrow":{"type":{"name":"bool"},"required":false,"description":"Should the FlexItem grow to fill any available space?","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"shouldShrink":{"type":{"name":"bool"},"required":false,"description":"Should the FlexItem shrink (stopping at its `size`)?","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"size":{"type":{"name":"string"},"required":false,"description":"Sets the base size of the FlexItem (width if direction is `row`; height if direction is `column`)","tsType":{"name":"string"}},"withVisualDebug":{"type":{"name":"bool"},"required":false,"description":"Places dashed lines around the component's borders to help debug your layout","tsType":{"name":"boolean"}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"parent":"Flex","id":"Flex.Item","relativePath":"packages/ui-flex/src/Flex/Item/index.tsx","extension":".tsx","srcPath":"packages/ui-flex/src/Flex/Item/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-flex/src/Flex/Item/index.tsx","packageName":"@instructure/ui-flex","requirePath":"@instructure/ui-flex/lib/Flex/Item/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-flex/src/Flex/Item/index.tsx').default","esPath":"@instructure/ui-flex/es/Flex/Item/index","title":"Flex.Item"}