{"name":"jsonToMediaQuery","description":"\nGiven a valid json query object, converts it to a standard media query\nstring. Valid queries should be an object consisting of condition:breakpoint\npairs with the following condition types `minWidth`, `maxWidth`, `minHeight`,\nor `maxHeight` where breakpoint value is either a string or a number.\n\nExample input\n```js-code\n{ minWidth: 350, maxWidth: 600 }\n```\nExample output\n```js-code\n'(min-width: 350px) and (max-Width: 600px)'\n```","params":[{"name":"query","type":"Query","optional":false,"description":"- an object consisting of the query type and value"},{"name":"el","type":"any","optional":true,"description":"- component or DOM node which will be passed to the pixel conversion if the unit type is `em`"}],"returns":{"description":"media query string","type":"string"},"category":"utilities/layout","relativePath":"packages/ui-responsive/src/jsonToMediaQuery.ts","extension":".ts","srcPath":"packages/ui-responsive/src/jsonToMediaQuery.ts","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/jsonToMediaQuery.ts","packageName":"@instructure/ui-responsive","requirePath":"@instructure/ui-responsive/lib/jsonToMediaQuery","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-responsive/src/jsonToMediaQuery.ts').default","esPath":"@instructure/ui-responsive/es/jsonToMediaQuery","themePath":"packages/ui-responsive/src/jsonToMediaQuery.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-responsive/src/jsonToMediaQuery.ts","id":"jsonToMediaQuery","title":"jsonToMediaQuery"}