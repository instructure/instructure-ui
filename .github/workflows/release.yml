name: AUTO release and deploy latest
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    name: Release to npm
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install packages.
        run: yarn install
      - name: Set up project.
        run: yarn bootstrap
      - name: Run tests.
        run: yarn test:patchset
      - name: Release snapshot to NPM
        # lerna ususally fails in releasing, but releasing snapshots is too complicated
        # without it, so we use lerna for snapshot and native npm-cli commands for releases
        if: ${{ !startsWith(github.event.head_commit.message, 'chore(release)') }}
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_EMAIL: ${{secrets.NPM_EMAIL}}
          NPM_USERNAME: ${{secrets.NPM_USERNAME}}
        run: yarn release:snapshot
      - name: Release latest to NPM
        if: "startsWith(github.event.head_commit.message, 'chore(release)')"
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_EMAIL: ${{secrets.NPM_EMAIL}}
          NPM_USERNAME: ${{secrets.NPM_USERNAME}}
        run: yarn release
  tag:
    needs: release
    if: "startsWith(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest
    name: Tag release commit
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up git identity
        run: git config --global user.name "instructure-ui-ci" && git config --global user.email "instructure-ui-ci@instructure.com"
        # -a -m is needed to make the tag "annotated". Lerna needs annotated tags to work correctly with verisons
      - name: Add tag
        run: git tag -a v$(./.github/workflows/calculateVersion.sh) -m v$(./.github/workflows/calculateVersion.sh)
      - name: Push tags
        run: git push origin v$(./.github/workflows/calculateVersion.sh)
  deploy:
    needs: release
    if: "startsWith(github.event.head_commit.message, 'chore(release)')"
    runs-on: ubuntu-latest
    name: Deploy docs
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install packages.
        run: yarn install
      - name: Set up project.
        run: yarn bootstrap
      - name: Run tests.
        run: yarn test:patchset
      - name: Set up git identity
        run: git config --global user.name "instructure-ui-ci" && git config --global user.email "instructure-ui-ci@instructure.com"
      - name: Remove __build__ folder
        run: rm -rf packages/__docs__/__build__
      - name: Create __build__ folder
        run: mkdir packages/__docs__/__build__
      - name: Checkout gh-pages
        run: git checkout gh-pages
      - name: Checkout master
        run: git checkout master
      - name: Clone gh-pages branch to __build__ folder
        run: git clone .git --branch gh-pages packages/__docs__/__build__
      - name: Build docs
        run: yarn build:docs
      - name: Commit and push changes to local copy
        run: cd ./packages/__docs__/__build__  && git add --all && git commit -m "Publishing to gh-pages" && git push origin gh-pages
      - name: Publish
        run: git checkout gh-pages && git push origin gh-pages && git checkout master
