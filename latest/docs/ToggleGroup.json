{"description":"\nPerforms the same function as [`ToggleDetails`](#ToggleDetails), but with the summary separated from the\ntoggle button, and built in padding and borders around the summary and main content area.\n\n### Basic example\n\n```javascript\n---\ntype: example\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  background=\"default\"\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n\n### More detailed examples\n\n#### `defaultExpanded` to make the component `expanded` when it renders\n\n```javascript\n---\ntype: example\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  defaultExpanded\n>\n  <View display=\"block\" padding=\"small\">This content is expanded when the component renders</View>\n</ToggleGroup>\n```\n\n#### Passing in your own `icon` and `iconExpanded`\n\n```javascript\n---\ntype: example\n---\n<ToggleGroup\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n  iconExpanded={IconXSolid}\n  icon={IconPlusSolid}\n>\n  <View display=\"block\" padding=\"small\">Here is the expanded content</View>\n</ToggleGroup>\n```\n\n#### Disable default transition of details\n\n```javascript\n---\ntype: example\n---\n<ToggleGroup\n  transition={false}\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary=\"This is the summary\"\n>\n  <View display=\"block\" padding=\"small\">This content will not fade in</View>\n</ToggleGroup>\n```\n\n#### Disable default border if you want to nest ToggleGroups\n\n```javascript\n---\ntype: example\n---\n<ToggleGroup\n  defaultExpanded\n  toggleLabel=\"This is the toggle button label for screenreaders\"\n  summary={<Heading level=\"h3\">Parent ToggleGroup</Heading>}\n>\n  <ToggleGroup\n    size=\"small\"\n    toggleLabel=\"This is the toggle button label for screenreaders\"\n    summary=\"I am nested inside a parent ToggleGroup\"\n    border={false}\n  >\n    <View display=\"block\" padding=\"small\">\n      This is the details section of the nested ToggleGroup\n    </View>\n  </ToggleGroup>\n</ToggleGroup>\n```\n","displayName":"ToggleGroup","methods":[],"props":{"children":{"type":{"name":"node"},"required":true,"description":"the content to show and hide","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"summary":{"type":{"name":"node"},"required":true,"description":"the content area next to the toggle button","tsType":{"name":"ReactReactNode","raw":"React.ReactNode"}},"toggleLabel":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":true,"description":"provides a screenreader label for the toggle button\n(takes `expanded` as an argument if a function)","tsType":{"name":"union","raw":"React.ReactNode | ((expanded: boolean) => React.ReactNode)","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"unknown"}]}},"as":{"type":{"name":"elementType"},"required":false,"description":"the element type to render as","tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"defaultValue":{"value":"'span'","computed":false}},"elementRef":{"type":{"name":"func"},"required":false,"description":"provides a reference to the underlying html root element","tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}}},"size":{"type":{"name":"enum","value":[{"value":"'small'","computed":false},{"value":"'medium'","computed":false},{"value":"'large'","computed":false}]},"required":false,"description":"","tsType":{"name":"union","raw":"'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"defaultValue":{"value":"'medium'","computed":false}},"expanded":{"type":{"name":"custom","raw":"controllable(PropTypes.bool, 'onToggle', 'defaultExpanded')"},"required":false,"description":"Whether the content is expanded or hidden","tsType":{"name":"boolean"}},"defaultExpanded":{"type":{"name":"bool"},"required":false,"description":"Whether the content is initially expanded or hidden (uncontrolled)","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Fired when the content display is toggled","tsType":{"name":"signature","type":"function","raw":"(event: React.MouseEvent, expanded: boolean) => void","signature":{"arguments":[{"type":{"name":"ReactMouseEvent","raw":"React.MouseEvent"},"name":"event"},{"type":{"name":"boolean"},"name":"expanded"}],"return":{"name":"void"}}}},"icon":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The icon displayed in the toggle button when the content is hidden","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]},"defaultValue":{"value":"IconArrowOpenEndSolid","computed":true}},"iconExpanded":{"type":{"name":"union","value":[{"name":"node"},{"name":"func"}]},"required":false,"description":"The icon displayed in the toggle button when the content is showing","tsType":{"name":"union","raw":"| keyof ReactHTML\n| keyof ReactSVG\n| ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>\n| ComponentClass\n| ReactNode\n| ((data: P) => ReactNode | Element)\n| (() => ReactNode | Element)\n| Element","elements":[{"name":"ReactHTML"},{"name":"ReactSVG"},{"name":"ClassType","elements":[{"name":"P"},{"name":"ClassicComponent","elements":[{"name":"P"},{"name":"ComponentState"}],"raw":"ClassicComponent<P, ComponentState>"},{"name":"ClassicComponentClass","elements":[{"name":"P"}],"raw":"ClassicComponentClass<P>"}],"raw":"ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>"},{"name":"ComponentClass"},{"name":"ReactNode"},{"name":"unknown"},{"name":"unknown"},{"name":"Element"}]},"defaultValue":{"value":"IconArrowOpenDownSolid","computed":true}},"transition":{"type":{"name":"bool"},"required":false,"description":"Transition content into view","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"border":{"type":{"name":"bool"},"required":false,"description":"Toggle the border around the component","tsType":{"name":"boolean"},"defaultValue":{"value":"true","computed":false}},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""}},"category":"components","relativePath":"packages/ui-toggle-details/src/ToggleGroup/index.tsx","extension":".tsx","srcPath":"packages/ui-toggle-details/src/ToggleGroup/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-toggle-details/src/ToggleGroup/index.tsx","packageName":"@instructure/ui-toggle-details","requirePath":"@instructure/ui-toggle-details/lib/ToggleGroup/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-toggle-details/src/ToggleGroup/index.tsx').default","esPath":"@instructure/ui-toggle-details/es/ToggleGroup/index","id":"ToggleGroup","title":"ToggleGroup"}