/* stylelint-disable no-descending-specificity, selector-max-class */

@keyframes button {
  50% {
    opacity: 0.5;
    transform: translate3d(2%, 0, 0);
  }

  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.root {
  box-sizing: border-box;
  display: block;
  width: 100%;
  margin: 0;
  background-color: transparent;
  text-align: start;
  font-family: inherit;
  user-select: none;
  cursor: pointer;
  border: none;
  border-radius: var(--borderRadius);
  position: relative;
  z-index: 1; /* stylelint-disable-line scale-unlimited/declaration-strict-value */
  transform: translate3d(-2%, 0, 0);
  opacity: 0.01;
  transform-origin: left center;
  animation-name: button;
  animation-duration: 0.2s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-out;
  animation-delay: 0.2s;
  outline: 0;

  &:not(.ie11)::after {
    content: "";
    pointer-events: none;
    box-sizing: border-box;
    display: block;
    position: absolute;
    top: -0.25rem;
    bottom: -0.25rem;
    left: -0.25rem; /* stylelint-disable-line property-blacklist */
    right: -0.25rem; /* stylelint-disable-line property-blacklist */
    border: var(--focusOutlineWidth) var(--focusOutlineStyle) var(--focusOutlineColor);
    border-radius: calc(var(--borderRadius) * 1.5);
    transition: all 0.2s;

    /* properties to transition on :focus */
    opacity: 0;
    transform: scale(0.95);
  }

  &:hover {
    background-color: var(--hoverBackgroundColor);

    &.selected {
      background-color: var(--selectedBackgroundColor);
    }

    &.folderTree::before {
      visibility: hidden;
    }

    &.node {
      color: var(--hoverTextColor);
    }

    .textName,
    .textDescriptor,
    .icon {
      color: var(--hoverTextColor);
    }
  }

  &.focused {
    &:not(.ie11)::after {
      opacity: 1;
      transform: scale(1);
    }

    &.ie11 {
      outline: var(--focusOutlineWidth) var(--focusOutlineStyle) var(--focusOutlineColor);
    }
  }
}

.layout {
  display: flex;
  align-items: center;
  line-height: 1;
  min-height: 2rem;
}

.icon,
.text {
  min-width: 0.0625rem;
}

.icon {
  position: relative;
  z-index: 1; /* stylelint-disable-line scale-unlimited/declaration-strict-value */
  color: var(--iconColor);
  display: flex;
  align-items: center;
  justify-content: center;
}

.text {
  line-height: var(--textLineHeight);
  flex: 1;
}

.textName,
.textDescriptor {
  display: block;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.textName {
  color: var(--nameTextColor);
}

.textDescriptor {
  margin-top: var(--descriptorMarginTop);
  color: var(--descriptorTextColor);
}

.folderTree {
  &:not(.isRootButton)::before {
    content: "";
    height: var(--borderWidth);
    background: var(--borderColor);
    position: absolute;
    inset-inline-start: 0;
    inset-inline-end: auto;
    top: 50%;
    pointer-events: none;
  }
}

.small {
  &.folderTree {
    padding: calc(var(--baseSpacingSmall) / 3) var(--baseSpacingSmall);

    &::before {
      width: calc(var(--baseSpacingSmall) - 0.0625rem);
    }

    .icon,
    .thumbnail {
      margin-inline-end: var(--baseSpacingSmall);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingSmall) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingSmall) * 2);
      width: calc(var(--baseSpacingSmall) * 2);
    }
  }

  &.indent {
    padding: calc(var(--baseSpacingSmall) / 3) calc(var(--baseSpacingSmall) / 2);

    .icon,
    .thumbnail {
      margin-inline-end: calc(var(--baseSpacingSmall) / 2);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingSmall) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingSmall) * 2);
      width: calc(var(--baseSpacingSmall) * 2);
    }
  }

  .textName {
    font-size: var(--nameFontSizeSmall);
  }

  .textDescriptor {
    font-size: var(--descriptorFontSizeSmall);
  }
}

.medium {
  &.folderTree {
    padding: calc(var(--baseSpacingMedium) / 3) var(--baseSpacingMedium);

    &::before {
      width: calc(var(--baseSpacingMedium) - 0.0625rem);
    }

    .icon,
    .thumbnail {
      margin-inline-end: var(--baseSpacingMedium);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingMedium) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingMedium) * 2);
      width: calc(var(--baseSpacingMedium) * 2);
    }
  }

  &.indent {
    padding: calc(var(--baseSpacingMedium) / 3) calc(var(--baseSpacingMedium) / 2);

    .icon,
    .thumbnail {
      margin-inline-end: calc(var(--baseSpacingMedium) / 2);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingMedium) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingMedium) * 2);
      width: calc(var(--baseSpacingMedium) * 2);
    }
  }

  .textName {
    font-size: var(--nameFontSizeMedium);
  }

  .textDescriptor {
    font-size: var(--descriptorFontSizeMedium);
  }
}

.large {
  &.folderTree {
    padding: calc(var(--baseSpacingLarge) / 3) var(--baseSpacingLarge);

    &::before {
      width: calc(var(--baseSpacingLarge) - 0.0625rem);
    }

    .icon,
    .thumbnail {
      margin-inline-end: var(--baseSpacingLarge);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingLarge) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingLarge) * 2);
      width: calc(var(--baseSpacingLarge) * 2);
    }
  }

  &.indent {
    padding: calc(var(--baseSpacingLarge) / 3) calc(var(--baseSpacingLarge) / 2);

    .icon,
    .thumbnail {
      margin-inline-end: calc(var(--baseSpacingLarge) / 2);
      margin-inline-start: 0;
    }

    .icon {
      font-size: calc(var(--baseSpacingLarge) * 2);
    }

    .thumbnail {
      height: calc(var(--baseSpacingLarge) * 2);
      width: calc(var(--baseSpacingLarge) * 2);
    }
  }

  .textName {
    font-size: var(--nameFontSizeLarge);
  }

  .textDescriptor {
    font-size: var(--descriptorFontSizeLarge);
  }
}

.expanded {}

.selected {
  background-color: var(--selectedBackgroundColor);

  &.folderTree::before {
    visibility: hidden;
  }

  .textName,
  .textDescriptor,
  .icon {
    color: var(--selectedTextColor);
  }
}

.isRootButton {}

/* stylelint-enable no-descending-specificity, selector-max-class */
