/* stylelint-disable selector-max-class, max-nesting-depth, no-descending-specificity */

.root {
  position: relative;
  width: 100%;

  &:hover {
    cursor: default;
  }
}

.control {
  all: initial;
  display: block;
  direction: inherit;
  text-align: start;
}

/* stylelint-disable selector-max-type */

.input,
input.input[type="radio"] {
  padding: 0;
  margin: 0;
  font-size: inherit;
  line-height: inherit;
  width: auto;
  position: absolute;
  top: 0;
  left: 0; /* stylelint-disable-line property-blacklist */
  opacity: 0.0001; /* selenium cannot find fully transparent elements */
}

/* stylelint-enable selector-max-type */

.disabled {
  opacity: 0.5;

  &:hover {
    cursor: not-allowed;
  }
}

.inline {
  display: inline-block;
  vertical-align: middle;
  width: auto;
}

.label {
  flex: 1 1 auto;
  color: var(--labelColor);
  font-family: var(--labelFontFamily);
  font-weight: var(--labelFontWeight);
  line-height: var(--labelLineHeight);
}

.simple {
  .control {
    display: flex;
    align-items: flex-start;
  }

  .facade {
    box-sizing: border-box;
    display: block;
    position: relative;
    margin-inline-end: var(--simpleFacadeMarginEnd);
    margin-inline-start: 0;
    flex-shrink: 0;
    min-width: 1rem;
    transition: all 0.2s ease-out;
    border-radius: 100%;
    border: var(--borderWidth) solid var(--borderColor);
    background: var(--background);

    &::before {
      content: "";
      position: absolute;
      top: -0.375rem;
      left: -0.375rem; /* stylelint-disable-line property-blacklist */
      width: calc(100% + 0.75rem);
      height: calc(100% + 0.75rem);
      box-sizing: border-box;
      border-radius: 100%;
      border: var(--focusBorderWidth) var(--focusBorderStyle) var(--focusBorderColor);
      transition: all 0.2s;
      transform: scale(0.75);
      opacity: 0;
      pointer-events: none;
    }
  }

  &.small {
    .facade {
      width: var(--simpleFacadeSmallSize);
      height: var(--simpleFacadeSmallSize);
    }

    .label {
      font-size: var(--simpleFontSizeSmall);
    }

    .input:checked + .control .facade {
      box-shadow: inset 0 0 0 var(--simpleCheckedInsetSmall) var(--hoverBorderColor);
    }
  }

  &.medium {
    .facade {
      width: var(--simpleFacadeMediumSize);
      height: var(--simpleFacadeMediumSize);
    }

    .label {
      font-size: var(--simpleFontSizeMedium);
    }

    .input:checked + .control .facade {
      box-shadow: inset 0 0 0 var(--simpleCheckedInsetMedium) var(--hoverBorderColor);
    }
  }

  &.large {
    .facade {
      width: var(--simpleFacadeLargeSize);
      height: var(--simpleFacadeLargeSize);
    }

    .label {
      font-size: var(--simpleFontSizeLarge);
    }

    .input:checked + .control .facade {
      box-shadow: inset 0 0 0 var(--simpleCheckedInsetLarge) var(--hoverBorderColor);
    }
  }

  .input:hover + .control {
    .facade {
      border-color: var(--hoverBorderColor);
    }
  }

  .input:checked + .control {
    .facade {
      background: var(--background);
      box-shadow: inset 0 0 0 var(--controlSize) var(--hoverBorderColor);
      border-color: var(--hoverBorderColor);
    }
  }

  .input:focus + .control {
    .facade {
      background: var(--background);

      &::before {
        transform: scale(1);
        opacity: 1;
      }
    }
  }
}

.toggle {
  .control {
    display: block;
    user-select: none;
    box-sizing: border-box;
    position: relative;
  }

  .label {
    position: relative;
    /* stylelint-disable-next-line scale-unlimited/declaration-strict-value */
    z-index: 1;
    text-transform: uppercase;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    line-height: 1;
    display: flex;
    align-items: center;
    min-width: 0.0625rem;
  }

  .facade {
    box-sizing: border-box;
    visibility: hidden;
    display: block;
    position: absolute;
    /* stylelint-disable-next-line scale-unlimited/declaration-strict-value */
    z-index: 1;
    top: 0;
    left: 0; /* stylelint-disable-line property-blacklist */
    width: 100%;
    height: 100%;
    box-shadow: var(--toggleShadow);
    border-radius: var(--toggleBorderRadius);

    &::before {
      content: "";
      position: absolute;
      top: -0.25rem;
      left: -0.25rem; /* stylelint-disable-line property-blacklist */
      width: calc(100% + 0.5rem);
      height: calc(100% + 0.5rem);
      box-sizing: border-box;
      border-radius: calc(var(--toggleBorderRadius) + 0.0625rem);
      border: var(--focusBorderWidth) var(--focusBorderStyle) var(--focusBorderColor);
      transition: all 0.2s;
      transform: scale(0.75);
      opacity: 0;
    }
  }

  &.success .facade {
    background-color: var(--toggleBackgroundSuccess);
  }

  &.danger .facade {
    background-color: var(--toggleBackgroundDanger);
  }

  &.warning .facade {
    background-color: var(--toggleBackgroundWarning);
  }

  &.off .facade {
    background-color: var(--toggleBackgroundOff);
  }

  &.small .control {
    padding: 0 0.5rem;
    height: var(--toggleSmallHeight);

    .label {
      font-size: var(--toggleSmallFontSize);
      height: var(--toggleSmallHeight);

      /* stylelint-disable selector-max-type */

      svg {
        font-size: calc(var(--toggleSmallFontSize) + 0.375rem);
      }

      /* stylelint-enable selector-max-type */
    }
  }

  &.medium .control {
    padding: 0 0.875rem;
    height: var(--toggleMediumHeight);

    .label {
      font-size: var(--toggleMediumFontSize);
      height: var(--toggleMediumHeight);

      /* stylelint-disable selector-max-type */

      svg {
        font-size: calc(var(--toggleMediumFontSize) + 0.375rem);
      }

      /* stylelint-enable selector-max-type */
    }
  }

  &.large .control {
    padding: 0 1rem;
    height: var(--toggleLargeHeight);

    .label {
      font-size: var(--toggleLargeFontSize);
      height: var(--toggleLargeHeight);

      /* stylelint-disable selector-max-type */

      svg {
        font-size: calc(var(--toggleLargeFontSize) + 0.375rem);
      }

      /* stylelint-enable selector-max-type */
    }
  }

  .input:checked + .control {
    .facade {
      visibility: visible;
    }

    .label {
      color: var(--toggleHandleText);
    }
  }

  .input:focus + .control {
    .label {
      text-decoration: underline;
    }

    .facade {
      &::before {
        opacity: 1;
        transform: scale(1);
      }
    }
  }
}

/* stylelint-enable selector-max-class, no-descending-specificity, max-nesting-depth */
