{"description":"\nSome design patterns require a `CloseButton` to be placed in the start or end position. This is a helper component that gives you the close icon out of the box and facilitates placement.\n\nThe `placement` prop designates the `CloseButton` placement within the parent container. Note that in order to apply an `offset`, `placement` should be set to `start` or `end`. Also make sure that the container has a `position` css style applied other than `static`. In the following example we use [View](#View) as the container and set the `position` to `relative`.\n\n```js\n---\ntype: example\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <CloseButton placement=\"end\" offset=\"small\" screenReaderLabel=\"Close\" />\n</View>\n```\n\nIf you need the `CloseButton` to work in a layout with other elements vs. absolutely positioning it, you can omit the `placement` prop or set it to `static`. You can then use another tool such as [Flex](#Flex) to handle the layout.\n\n```js\n---\ntype: example\n---\n<View display=\"block\" position=\"relative\" background=\"primary\" shadow=\"resting\">\n  <Flex height=\"6rem\" justifyItems=\"space-between\" alignItems=\"center\" padding=\"medium\">\n    <Flex.Item shouldShrink shouldGrow>\n      <Heading level=\"h2\">Some Heading Text</Heading>\n    </Flex.Item>\n    <Flex.Item padding=\"none none none medium\">\n      <CloseButton size=\"medium\" screenReaderLabel=\"Close\" />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\nIf you need even more customization, note that you can always compose this component using the [IconButton](#IconButton) directly. Supply the `renderIcon` prop with [IconXSolid](#icons) and set the `withBorder` and `withBackground` props to `false`.\n\n```js\n---\ntype: example\n---\n<View display=\"block\" position=\"relative\" height=\"5rem\" background=\"primary\" shadow=\"resting\">\n  <Flex justifyItems=\"end\">\n    <Flex.Item>\n      <IconButton\n        screenReaderLabel=\"Close\"\n        renderIcon={IconXSolid}\n        size=\"small\"\n        withBackground={false}\n        withBorder={false}\n        margin=\"small\"\n      />\n    </Flex.Item>\n  </Flex>\n</View>\n```\n\n### Guidelines\n\n```js\n---\ntype: embed\n---\n<Guidelines>\n  <Figure recommendation=\"a11y\" title=\"Accessibility\">\n    <Figure.Item>Set the <code>color</code> prop to <code>primary</code> when a CloseButton appears on a dark background to ensure adequate contrast</Figure.Item>\n    <Figure.Item>Ensure the CloseButton is labeled correctly using the <code>screenReaderLabel</code> prop so screen readers announce what action will be taken when selected</Figure.Item>\n  </Figure>\n</Guidelines>\n```\n","displayName":"CloseButton","methods":[{"name":"handleRef","docblock":null,"modifiers":[],"params":[{"name":"el","optional":false,"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]}}],"returns":null},{"name":"interaction","docblock":null,"modifiers":["get"],"params":[],"returns":null},{"name":"color","docblock":null,"modifiers":["get"],"params":[],"returns":null}],"props":{"screenReaderLabel":{"required":true,"tsType":{"name":"ReactReactNode","raw":"React.ReactNode"},"description":"An accessible label for the `CloseButton` (required)"},"color":{"required":false,"tsType":{"name":"union","raw":"'primary' | 'primary-inverse'","elements":[{"name":"literal","value":"'primary'"},{"name":"literal","value":"'primary-inverse'"}]},"description":"Specifies the color for the `CloseButton`."},"interaction":{"required":false,"tsType":{"name":"union","raw":"'enabled' | 'disabled' | 'readonly'","elements":[{"name":"literal","value":"'enabled'"},{"name":"literal","value":"'disabled'"},{"name":"literal","value":"'readonly'"}]},"description":"Specifies if interaction with the `CloseButton` is enabled, disabled, or readonly.","defaultValue":{"value":"undefined","computed":true}},"elementRef":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(element: Element | null) => void","signature":{"arguments":[{"type":{"name":"union","raw":"Element | null","elements":[{"name":"Element"},{"name":"null"}]},"name":"element"}],"return":{"name":"void"}}},"description":"Provides a reference to the `CloseButton`'s underlying html element."},"size":{"required":false,"tsType":{"name":"union","raw":"'small' | 'medium' | 'large'","elements":[{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"},{"name":"literal","value":"'large'"}]},"description":"The size of the `CloseButton`","defaultValue":{"value":"'small'","computed":false}},"onClick":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(\n  event: React.KeyboardEvent<ViewProps> | React.MouseEvent<ViewProps>\n) => void","signature":{"arguments":[{"type":{"name":"union","raw":"React.KeyboardEvent<ViewProps> | React.MouseEvent<ViewProps>","elements":[{"name":"ReactKeyboardEvent","raw":"React.KeyboardEvent<ViewProps>","elements":[{"name":"ViewProps"}]},{"name":"ReactMouseEvent","raw":"React.MouseEvent<ViewProps>","elements":[{"name":"ViewProps"}]}]},"name":"event"}],"return":{"name":"void"}}},"description":"Callback fired when the `CloseButton` is clicked."},"margin":{"required":false,"tsType":{"name":"Spacing"},"description":"Valid values are `0`, `none`, `auto`, `xxx-small`, `xx-small`, `x-small`,\n`small`, `medium`, `large`, `x-large`, `xx-large`. Apply these values via\nfamiliar CSS-like shorthand. For example: `margin=\"small auto large\"`.","defaultValue":{"value":"'0'","computed":false}},"placement":{"required":false,"tsType":{"name":"union","raw":"'start' | 'end' | 'static'","elements":[{"name":"literal","value":"'start'"},{"name":"literal","value":"'end'"},{"name":"literal","value":"'static'"}]},"description":"Specifies the placement of the `CloseButton`","defaultValue":{"value":"'static'","computed":false}},"offset":{"required":false,"tsType":{"name":"union","raw":"'none' | 'x-small' | 'small' | 'medium'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'x-small'"},{"name":"literal","value":"'small'"},{"name":"literal","value":"'medium'"}]},"description":"Specifies the offset distance for the `CloseButton` with respect to both the top and start/end of the container.\nNote that for this property to have an effect, the `placement` prop must be set to either `start` or `end`. The\noffset will also be created with respect to a positioned parent. If it does not appear to be working, try setting\nthe `position` of the parent container to `relative`.","defaultValue":{"value":"'x-small'","computed":false}},"type":{"required":false,"tsType":{"name":"union","raw":"'button' | 'submit' | 'reset'","elements":[{"name":"literal","value":"'button'"},{"name":"literal","value":"'submit'"},{"name":"literal","value":"'reset'"}]},"description":"Specifies the type of the `Button`'s underlying html element.","defaultValue":{"value":"'button'","computed":false}},"as":{"required":false,"tsType":{"name":"union","raw":"keyof JSX.IntrinsicElements | ComponentType<P>","elements":[{"name":"JSX.IntrinsicElements"},{"name":"ComponentType","elements":[{"name":"P"}],"raw":"ComponentType<P>"}]},"description":"The element to render as the component root, `CloseButton` by default.","defaultValue":{"value":"'button'","computed":false}},"href":{"required":false,"tsType":{"name":"string"},"description":"Specifies an href attribute for the `CloseButton`'s underlying html element."},"cursor":{"required":false,"tsType":{"name":"union","raw":"| 'auto'\n| 'default'\n| 'none'\n| 'context-menu'\n| 'help'\n| 'pointer'\n| 'progress'\n| 'wait'\n| 'cell'\n| 'crosshair'\n| 'text'\n| 'vertical-text'\n| 'alias'\n| 'copy'\n| 'move'\n| 'no-drop'\n| 'not-allowed'\n| 'grab'\n| 'grabbing'\n| 'all-scroll'\n| 'col-resize'\n| 'row-resize'\n| 'n-resize'\n| 'e-resize'\n| 's-resize'\n| 'w-resize'\n| 'ne-resize'\n| 'nw-resize'\n| 'se-resize'\n| 'sw-resize'\n| 'ew-resize'\n| 'ns-resize'\n| 'nesw-resize'\n| 'nwse-resize'\n| 'zoom-in'\n| 'zoom-out'","elements":[{"name":"literal","value":"'auto'"},{"name":"literal","value":"'default'"},{"name":"literal","value":"'none'"},{"name":"literal","value":"'context-menu'"},{"name":"literal","value":"'help'"},{"name":"literal","value":"'pointer'"},{"name":"literal","value":"'progress'"},{"name":"literal","value":"'wait'"},{"name":"literal","value":"'cell'"},{"name":"literal","value":"'crosshair'"},{"name":"literal","value":"'text'"},{"name":"literal","value":"'vertical-text'"},{"name":"literal","value":"'alias'"},{"name":"literal","value":"'copy'"},{"name":"literal","value":"'move'"},{"name":"literal","value":"'no-drop'"},{"name":"literal","value":"'not-allowed'"},{"name":"literal","value":"'grab'"},{"name":"literal","value":"'grabbing'"},{"name":"literal","value":"'all-scroll'"},{"name":"literal","value":"'col-resize'"},{"name":"literal","value":"'row-resize'"},{"name":"literal","value":"'n-resize'"},{"name":"literal","value":"'e-resize'"},{"name":"literal","value":"'s-resize'"},{"name":"literal","value":"'w-resize'"},{"name":"literal","value":"'ne-resize'"},{"name":"literal","value":"'nw-resize'"},{"name":"literal","value":"'se-resize'"},{"name":"literal","value":"'sw-resize'"},{"name":"literal","value":"'ew-resize'"},{"name":"literal","value":"'ns-resize'"},{"name":"literal","value":"'nesw-resize'"},{"name":"literal","value":"'nwse-resize'"},{"name":"literal","value":"'zoom-in'"},{"name":"literal","value":"'zoom-out'"}]},"description":"Specify a mouse cursor to use when hovering over the `CloseButton`.","defaultValue":{"value":"'pointer'","computed":false}},"tabIndex":{"required":false,"tsType":{"name":"number"},"description":"Specifies the tabindex of the `CloseButton`."},"dir":{"required":false,"tsType":{"name":"union","raw":"'ltr' | 'rtl'","elements":[{"name":"literal","value":"'ltr'"},{"name":"literal","value":"'rtl'"}]},"description":""},"to":{"required":false,"tsType":{"name":"string"},"description":"Needed for React Router links\n@private"}},"category":"components","relativePath":"packages/ui-buttons/src/CloseButton/index.tsx","extension":".tsx","srcPath":"packages/ui-buttons/src/CloseButton/index.tsx","srcUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CloseButton/index.tsx","packageName":"@instructure/ui-buttons","requirePath":"@instructure/ui-buttons/lib/CloseButton/index","requireStr":"require('/home/runner/work/instructure-ui/instructure-ui/packages/ui-buttons/src/CloseButton/index.tsx').default","esPath":"@instructure/ui-buttons/es/CloseButton/index","themePath":"packages/ui-buttons/src/CloseButton/theme.ts","themeUrl":"https://github.com/instructure/instructure-ui/tree/master/packages/ui-buttons/src/CloseButton/theme.ts","id":"CloseButton","title":"CloseButton"}